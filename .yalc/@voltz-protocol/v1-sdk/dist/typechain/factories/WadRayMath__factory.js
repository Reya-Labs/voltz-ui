"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WadRayMath__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "HALF_RAY",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "HALF_WAD",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "RAY",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "WAD",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "WAD_RAY_RATIO",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x61014e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063552033c4146100665780635fcd68091461008a578063629fa5a7146100925780636a1460241461009a57806385aa454e146100a9575b600080fd5b610078676765c793fa10079d601b1b81565b60405190815260200160405180910390f35b6100786100b1565b6100786100ca565b610078670de0b6b3a764000081565b6100786100e7565b6100c76002676765c793fa10079d601b1b6100f6565b81565b6100c7670de0b6b3a7640000676765c793fa10079d601b1b6100f6565b6100c76002670de0b6b3a76400005b60008261011357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f0098e1e7e063386b51de60b604576abe137fe3c658ea1d2c867597f7b2c7f8d64736f6c63430008090033";
var WadRayMath__factory = /** @class */ (function (_super) {
    __extends(WadRayMath__factory, _super);
    function WadRayMath__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    WadRayMath__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    WadRayMath__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    WadRayMath__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    WadRayMath__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    WadRayMath__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    WadRayMath__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    WadRayMath__factory.bytecode = _bytecode;
    WadRayMath__factory.abi = _abi;
    return WadRayMath__factory;
}(ethers_1.ContractFactory));
exports.WadRayMath__factory = WadRayMath__factory;

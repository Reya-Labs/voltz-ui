/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RocketPoolRateOracle,
  RocketPoolRateOracleInterface,
} from "../RocketPoolRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRocketEth",
        name: "_rocketEth",
        type: "address",
      },
      {
        internalType: "contract IRocketNetworkBalances",
        name: "_rocketNetworkBalances",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "_times",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "_results",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketEth",
    outputs: [
      {
        internalType: "contract IRocketEth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketNetworkBalances",
    outputs: [
      {
        internalType: "contract IRocketNetworkBalances",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200384e3803806200384e833981016040819052620000349162000a23565b82620000403362000180565b6001600160a01b03811660805243620100045562000069620001d0602090811b62000c9917901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b038516620000e95760405162461bcd60e51b815260206004820152600f60248201526e14915512081b5d5cdd08195e1a5cdd608a1b60448201526064015b60405180910390fd5b6201000780546001600160a01b0319166001600160a01b038781169190911790915584166200014c5760405162461bcd60e51b815260206004820152600e60248201526d149390881b5d5cdd08195e1a5cdd60921b6044820152606401620000e0565b6201000880546001600160a01b0319166001600160a01b038616179055620001758282620001e2565b505050505062000cc1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001dd426200046d565b905090565b620001f1600261ffff62000b56565b825110620002135760405162461bcd60e51b8152600401620000e09062000b79565b8151815161ffff8216146200023c5760405162461bcd60e51b8152600401620000e09062000b97565b60006200024b82600162000bc3565b61ffff166001600160401b0381111562000269576200026962000941565b60405190808252806020026020018201604052801562000293578160200160208202803683370190505b5090506000620002a583600162000bc3565b61ffff166001600160401b03811115620002c357620002c362000941565b604051908082528060200260200182016040528015620002ed578160200160208202803683370190505b50905060005b8361ffff168110156200039e5785818151811062000315576200031562000bec565b602002602001015183828151811062000332576200033262000bec565b602002602001019063ffffffff16908163ffffffff168152505084818151811062000361576200036162000bec565b60200260200101518282815181106200037e576200037e62000bec565b602090810291909101015280620003958162000c02565b915050620002f3565b50600080620003ac620004b4565b9150915081848661ffff1681518110620003ca57620003ca62000bec565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff1681518110620003fe57620003fe62000bec565b60200260200101818152505062000427848460046200065460201b62000ca9179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620004af5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000e0565b919050565b6201000754604051638b32fa2360e01b81526b033b2e3c9fd0803ce8000000600482015260009182916001600160a01b0390911690638b32fa239060240160206040518083038186803b1580156200050b57600080fd5b505afa15801562000520573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000546919062000c20565b90508062000567576040516312469ef560e01b815260040160405180910390fd5b620100085460408051639100c13d60e01b815290516000926001600160a01b031691639100c13d916004808301926020929190829003018186803b158015620005af57600080fd5b505afa158015620005c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ea919062000c20565b620100065462010005549192509063ffffffff16600082826200060e864362000c3a565b6200061a919062000c54565b62000626919062000b56565b62000632904262000c3a565b90506200064a816200046d60201b62000eec1760201c565b9550505050509091565b600080600061ffff8551106200067e5760405162461bcd60e51b8152600401620000e09062000b79565b8451845161ffff821614620006a75760405162461bcd60e51b8152600401620000e09062000b97565b60008161ffff1611620006e25760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000e0565b6000805b8261ffff168161ffff1610156200087857878161ffff168151811062000710576200071062000bec565b602002602001015163ffffffff168263ffffffff1610620007665760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000e0565b620007b8888261ffff168151811062000783576200078362000bec565b6020026020010151888361ffff1681518110620007a457620007a462000bec565b60200260200101516200089960201b60201c565b898261ffff1661ffff8110620007d257620007d262000bec565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff831690811062000858576200085862000bec565b6020026020010151915080806200086f9062000c76565b915050620006e6565b5081806200088860018262000c9b565b945094509450505093509350939050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620008f85760405162461bcd60e51b8152600401620000e0906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b03811681146200093e57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000982576200098262000941565b604052919050565b60006001600160401b03821115620009a657620009a662000941565b5060051b60200190565b600082601f830112620009c257600080fd5b81516020620009db620009d5836200098a565b62000957565b82815260059290921b84018101918181019086841115620009fb57600080fd5b8286015b8481101562000a185780518352918301918301620009ff565b509695505050505050565b600080600080600060a0868803121562000a3c57600080fd5b855162000a498162000928565b8095505060208087015162000a5e8162000928565b604088015190955062000a718162000928565b60608801519094506001600160401b038082111562000a8f57600080fd5b818901915089601f83011262000aa457600080fd5b815162000ab5620009d5826200098a565b81815260059190911b8301840190848101908c83111562000ad557600080fd5b938501935b8285101562000b0957845163ffffffff8116811462000af95760008081fd5b8252938501939085019062000ada565b60808c0151909750945050508083111562000b2357600080fd5b505062000b3388828901620009b0565b9150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b60008262000b7457634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000be35762000be362000b40565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000c195762000c1962000b40565b5060010190565b60006020828403121562000c3357600080fd5b5051919050565b60008282101562000c4f5762000c4f62000b40565b500390565b600081600019048311821515161562000c715762000c7162000b40565b500290565b600061ffff8083168181141562000c915762000c9162000b40565b6001019392505050565b600061ffff8381169083168181101562000cb95762000cb962000b40565b039392505050565b608051612b7162000cdd60003960006102ca0152612b716000f3fe608060405234801561001057600080fd5b50600436106101545760003560e01c80631195082e14610159578063163e9c4f1461019757806317221ef1146101aa57806322ff6568146101bd57806324b18b17146101d7578063251abea11461020b578063252c09d71461023857806325f258dd1461027757806332148f671461028a578063414535281461029f57806354124c64146102b25780636f307dc3146102c5578063715018a6146102ec5780637aa4db13146102f45780637cf2cc9f146102fc5780638a6b8c5d146103055780638da5cb5b1461030d57806391aa375d1461031557806393556dbd14610337578063af0c65a61461034a578063bdb050921461035f578063c330c98d14610372578063c7db359b14610381578063efdf5d8b146103c9578063f2fde38b146103d1578063f739670c146103e4578063f90ce5ba146103f7578063fe115fbe1461040f575b600080fd5b6101846101673660046128a4565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101846101a53660046128d7565b610417565b6101846101b83660046128d7565b610429565b6101c5600481565b60405160ff909116815260200161018e565b620100055462010006546101ef9163ffffffff169082565b6040805163ffffffff909316835260208301919091520161018e565b6201000854610220906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b61024b6102463660046128d7565b610435565b6040805163ffffffff90941684526001600160d81b03909216602084015215159082015260600161018e565b6101846102853660046128f0565b61046f565b61029d610298366004612912565b6104e5565b005b6101846102ad3660046128f0565b61056a565b6101846102c0366004612936565b61057e565b6102207f000000000000000000000000000000000000000000000000000000000000000081565b61029d6105d3565b61029d6105e7565b61018460025481565b6101ef610634565b6102206107b9565b61031d6107c8565b6040805192835263ffffffff90911660208301520161018e565b6101846103453660046128f0565b6107df565b6201000754610220906001600160a01b031681565b61029d61036d3660046128d7565b610874565b610184670de0b6b3a764000081565b6003546103a49061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff9485168152928416602084015292169181019190915260600161018e565b6101846108c1565b61029d6103df366004612962565b610949565b6101846103f23660046128f0565b6109bf565b620100035462010004546101ef9163ffffffff169082565b61031d610ac9565b600061042382426109bf565b92915050565b600061042382426107df565b60048161ffff811061044657600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b60008061047c8484610f31565b909250905080156104de57600061049c670de0b6b3a76400008604610eec565b905060006104b3670de0b6b3a76400008604610eec565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff1660006105016004838561106f565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146105655760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b60006105768383610f31565b509392505050565b60008061058a83611164565b905060006105a0670de0b6b3a7640000866129a1565b905060006105ae828461117b565b905060006105bb826111ba565b90506105c788826111e4565b98975050505050505050565b6105db6111f2565b6105e56000611251565b565b60035461060c9061ffff80821691620100008104821691600160201b909104166112a1565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6201000754604051638b32fa2360e01b8152676765c793fa10079d601b1b600482015260009182916001600160a01b0390911690638b32fa239060240160206040518083038186803b15801561068957600080fd5b505afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c191906129b9565b9050806106e1576040516312469ef560e01b815260040160405180910390fd5b620100085460408051639100c13d60e01b815290516000926001600160a01b031691639100c13d916004808301926020929190829003018186803b15801561072857600080fd5b505afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076091906129b9565b905060008061076d6107c8565b909250905060008263ffffffff831661078686436129d2565b61079091906129e9565b61079a9190612a1e565b6107a490426129d2565b90506107af81610eec565b9550505050509091565b6000546001600160a01b031690565b62010006546201000554909163ffffffff90911690565b6000818311156108295760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064015b60405180910390fd5b600061083584846109bf565b9050600061084385856129d2565b9050600061085082611444565b9050600061085d82611164565b90506108698482611491565b979650505050505050565b61087c6111f2565b80600254146108be5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006108ce610634565b915091506108da610c99565b63ffffffff168263ffffffff16106108f25792915050565b6000806108fd610ac9565b915091508063ffffffff168285610912610c99565b61091c9190612a32565b63ffffffff1661092c91906129e9565b6109369190612a1e565b61094090846129a1565b94505050505090565b6109516111f2565b6001600160a01b0381166109b65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610820565b6108be81611251565b6000818311156109fd5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610820565b81831415610a0d57506000610423565b6000610a17610c99565b90506000610a2485610eec565b90506000610a3185610eec565b600354909150600090610a55908590859061ffff80821691620100009004166114f6565b600354909150600090610a79908690859061ffff80821691620100009004166114f6565b905081811115610abb576000610aad676765c793fa10079d601b1b610a9e8486611742565b610aa891906129d2565b611750565b965061042395505050505050565b600095505050505050610423565b600354600090819061ffff16816001821015610afd57600354610af89060019062010000900461ffff16612a57565b610b10565b600354610b109060019061ffff16612a57565b60035490915060026201000090910461ffff1610801590610b51575060048161ffff1661ffff8110610b4457610b44612a72565b0154600160f81b900460ff165b8015610bae575060048261ffff1661ffff8110610b7057610b70612a72565b0154600160201b90046001600160d81b0316600461ffff838116908110610b9957610b99612a72565b0154600160201b90046001600160d81b031611155b610be05760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b6044820152606401610820565b60048161ffff1661ffff8110610bf857610bf8612a72565b0154600160201b90046001600160d81b0316600461ffff848116908110610c2157610c21612a72565b0154610c3d9190600160201b90046001600160d81b0316612a88565b6001600160d81b0316935060048161ffff1661ffff8110610c6057610c60612a72565b015463ffffffff16600461ffff808516908110610c7f57610c7f612a72565b0154610c91919063ffffffff16612a32565b925050509091565b6000610ca442610eec565b905090565b600080600061ffff855110610ce95760405162461bcd60e51b8152600401610820906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610d345760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610820565b60008161ffff1611610d6d5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610820565b6000805b8261ffff168161ffff161015610ecd57878161ffff1681518110610d9757610d97612a72565b602002602001015163ffffffff168263ffffffff1610610deb5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610820565b610e2f888261ffff1681518110610e0457610e04612a72565b6020026020010151888361ffff1681518110610e2257610e22612a72565b60200260200101516117dc565b898261ffff1661ffff8110610e4657610e46612a72565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610eb057610eb0612a72565b602002602001015191508080610ec590612aa8565b915050610d71565b508180610edb600182612a57565b945094509450505093509350939050565b8063ffffffff81168114610f2c5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610820565b919050565b60008080610f48670de0b6b3a76400008604610eec565b90506000610f5f670de0b6b3a76400008604610eec565b905060008263ffffffff16118015610f7d575060008163ffffffff16115b610fb15760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610820565b63ffffffff808316600090815260016020908152604080832093851683529290522054156110075763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250611066565b8063ffffffff16611016610c99565b63ffffffff1610611042576110378263ffffffff168263ffffffff166109bf565b935060019250611066565b61105f8263ffffffff16611054610c99565b63ffffffff166109bf565b9350600092505b50509250929050565b6000808361ffff16116110a85760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610820565b61ffff8261ffff16106110ec5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610820565b8261ffff168261ffff161161110257508161115d565b825b8261ffff168161ffff161015611158576001858261ffff1661ffff811061112d5761112d612a72565b01805463ffffffff191663ffffffff929092169190911790558061115081612aa8565b915050611104565b508190505b9392505050565b6000610423826a1a1601fc4ea7109e000000611854565b6000826111a057811561118f576000611199565b670de0b6b3a76400005b9050610423565b61115d6111b56111af85611869565b84611919565b611925565b6000806111da670de0b6b3a7640000676765c793fa10079d601b1b612a1e565b61115d90846129e9565b600061115d8383600161196b565b336111fb6107b9565b6001600160a01b0316146105e55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610820565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106112be576112be612a72565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b909104161515908201529050600080611309610634565b60025485519294509092506113239163ffffffff166129a1565b8263ffffffff16101561133e5787879450945050505061143c565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611367611a1e565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546113b990436129d2565b6201000655620100035463ffffffff166113d1610c99565b6113db9190612a32565b62010005805463ffffffff191663ffffffff92909216919091179055436201000455611405610c99565b62010003805463ffffffff191663ffffffff928316179055611434906004908a90859085908c908c90611a2916565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561148357604051633492ffd960e01b815260048101839052602401610820565b50670de0b6b3a76400000290565b6000826114a057506000610423565b60006114b56114af6001611444565b84611854565b905060006114d7856114c76001611444565b6114d191906129a1565b8361117b565b90506114e36001611444565b6114ed90826129d2565b95945050505050565b60008363ffffffff168563ffffffff16101561152557604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff1614156115cd57611541612870565b60048461ffff1661ffff811061155957611559612a72565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146115b6576115af6108c1565b91506115c7565b80602001516001600160d81b031691505b5061173a565b60006115d76108c1565b90506000806115eb6004888a868a8a611b71565b91509150816000015163ffffffff168763ffffffff16141561161c5781602001516001600160d81b03169350611736565b805163ffffffff888116911614156116435780602001516001600160d81b03169350611736565b600082602001516001600160d81b031682602001516001600160d81b031611156116b2576000676765c793fa10079d601b1b61169984602001516001600160d81b031686602001516001600160d81b0316611742565b6116a391906129d2565b90506116ae81611750565b9150505b825182516000916116e591670de0b6b3a7640000916116d091612a32565b63ffffffff166116e091906129e9565b611164565b905060006116f38383611491565b905061173085602001516001600160d81b031682670de0b6b3a764000088600001518e6117209190612a32565b63ffffffff166102c091906129e9565b96505050505b5050505b949350505050565b600061115d83836001611d23565b600080611770670de0b6b3a7640000676765c793fa10079d601b1b612a1e565b61177a9084612a1e565b9050600261179b670de0b6b3a7640000676765c793fa10079d601b1b612a1e565b6117a59190612a1e565b6117c2670de0b6b3a7640000676765c793fa10079d601b1b612a1e565b6117cc9085612aca565b106104235761115d6001826129a1565b6117e4612870565b6001600160d81b038211156118245760405162461bcd60e51b8152600401610820906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061115d83670de0b6b3a764000084611dbe565b6000670de0b6b3a764000082101561189757604051633621413760e21b815260048101839052602401610820565b60006118ac670de0b6b3a76400008404611e8c565b670de0b6b3a7640000808202935090915083821c908114156118cf575050919050565b6706f05b59d3b200005b801561191157670de0b6b3a7640000828002049150671bc16d674ec800008210611909579283019260019190911c905b60011c6118d9565b505050919050565b600061115d8383611f6a565b6000680a688906bd8b000000821061195357604051634a4f26f160e01b815260048101839052602401610820565b670de0b6b3a7640000604083901b0461115d8161202c565b6000831580611978575082155b156119855750600061115d565b600182600181111561199957611999612ade565b146119ac57670de0b6b3a76400006119b9565b676765c793fa10079d601b1b5b60018360018111156119cd576119cd612ade565b146119ea576119e56002670de0b6b3a7640000612a1e565b611a00565b611a006002676765c793fa10079d601b1b612a1e565b611a0a85876129e9565b611a1491906129a1565b61173a9190612a1e565b6000610ca442611444565b6000806000888861ffff1661ffff8110611a4557611a45612a72565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611aa05787859250925050611b66565b8461ffff168461ffff16118015611ac85750611abd600186612a57565b61ffff168861ffff16145b15611ad557839150611ad9565b8491505b81611ae5896001612af4565b611aef9190612b1a565b9250611afb87876117dc565b898461ffff1661ffff8110611b1257611b12612a72565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b611b79612870565b611b81612870565b878461ffff1661ffff8110611b9857611b98612a72565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611c17578663ffffffff16826000015163ffffffff161415611c0357611b66565b81611c0e87876117dc565b91509150611b66565b8783611c24866001612af4565b611c2e9190612b1a565b61ffff1661ffff8110611c4357611c43612a72565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611cc85760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611d085760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610820565b611d14888886866126be565b91509150965096945050505050565b600082611d5b5760405162461bcd60e51b8152600401610820906020808252600490820152630444956360e41b604082015260600190565b6000611d68600285612a1e565b905083816001856001811115611d8057611d80612ade565b14611d9357670de0b6b3a7640000611da0565b676765c793fa10079d601b1b5b611daa90886129e9565b611db491906129a1565b6114ed9190612a1e565b600080806000198587098587029250828110838203039150508060001415611df957838281611def57611def612a08565b049250505061115d565b838110611e2357604051631dcf306360e21b81526004810182905260248101859052604401610820565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611eac57608091821c91611ea990826129a1565b90505b600160401b8210611eca57604091821c91611ec790826129a1565b90505b600160201b8210611ee857602091821c91611ee590826129a1565b90505b620100008210611f0557601091821c91611f0290826129a1565b90505b6101008210611f2157600891821c91611f1e90826129a1565b90505b60108210611f3c57600491821c91611f3990826129a1565b90505b60048210611f5757600291821c91611f5490826129a1565b90505b60028210610f2c576104236001826129a1565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611fae5760405163698d9a0160e11b815260048101829052602401610820565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611fe85780670de0b6b3a7640000850401945050505050610423565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b82161561204c5768016a09e667f3bcc9090260401c5b6001603e1b821615612067576801306fe0a31b7152df0260401c5b6001603d1b821615612082576801172b83c7d517adce0260401c5b6001603c1b82161561209d5768010b5586cf9890f62a0260401c5b6001603b1b8216156120b8576801059b0d31585743ae0260401c5b6001603a1b8216156120d357680102c9a3e778060ee70260401c5b600160391b8216156120ee5768010163da9fb33356d80260401c5b600160381b82161561210957680100b1afa5abcbed610260401c5b600160371b8216156121245768010058c86da1c09ea20260401c5b600160361b82161561213f576801002c605e2e8cec500260401c5b600160351b82161561215a57680100162f3904051fa10260401c5b600160341b821615612175576801000b175effdc76ba0260401c5b600160331b82161561219057680100058ba01fb9f96d0260401c5b600160321b8216156121ab5768010002c5cc37da94920260401c5b600160311b8216156121c6576801000162e525ee05470260401c5b600160301b8216156121e15768010000b17255775c040260401c5b6001602f1b8216156121fc576801000058b91b5bc9ae0260401c5b6001602e1b82161561221757680100002c5c89d5ec6d0260401c5b6001602d1b8216156122325768010000162e43f4f8310260401c5b6001602c1b82161561224d57680100000b1721bcfc9a0260401c5b6001602b1b8216156122685768010000058b90cf1e6e0260401c5b6001602a1b821615612283576801000002c5c863b73f0260401c5b600160291b82161561229e57680100000162e430e5a20260401c5b600160281b8216156122b9576801000000b1721835510260401c5b600160271b8216156122d457680100000058b90c0b490260401c5b600160261b8216156122ef5768010000002c5c8601cc0260401c5b600160251b82161561230a576801000000162e42fff00260401c5b600160241b8216156123255768010000000b17217fbb0260401c5b600160231b821615612340576801000000058b90bfce0260401c5b600160221b82161561235b57680100000002c5c85fe30260401c5b600160211b8216156123765768010000000162e42ff10260401c5b600160201b82161561239157680100000000b17217f80260401c5b63800000008216156123ac5768010000000058b90bfc0260401c5b63400000008216156123c7576801000000002c5c85fe0260401c5b63200000008216156123e257680100000000162e42ff0260401c5b63100000008216156123fd576801000000000b17217f0260401c5b630800000082161561241857680100000000058b90c00260401c5b63040000008216156124335768010000000002c5c8600260401c5b630200000082161561244e576801000000000162e4300260401c5b63010000008216156124695768010000000000b172180260401c5b62800000821615612483576801000000000058b90c0260401c5b6240000082161561249d57680100000000002c5c860260401c5b622000008216156124b75768010000000000162e430260401c5b621000008216156124d157680100000000000b17210260401c5b620800008216156124eb5768010000000000058b910260401c5b62040000821615612505576801000000000002c5c80260401c5b6202000082161561251f57680100000000000162e40260401c5b620100008216156125385761b172600160401b010260401c5b618000821615612550576158b9600160401b010260401c5b61400082161561256857612c5d600160401b010260401c5b6120008216156125805761162e600160401b010260401c5b61100082161561259857610b17600160401b010260401c5b6108008216156125b05761058c600160401b010260401c5b6104008216156125c8576102c6600160401b010260401c5b6102008216156125e057610163600160401b010260401c5b6101008216156125f75760b1600160401b010260401c5b608082161561260d576059600160401b010260401c5b604082161561262357602c600160401b010260401c5b6020821615612639576016600160401b010260401c5b601082161561264f57600b600160401b010260401c5b6008821615612665576006600160401b010260401c5b600482161561267b576003600160401b010260401c5b6002821615612691576001600160401b010260401c5b60018216156126a7576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6126c6612870565b6126ce612870565b6000836126dc866001612af4565b6126e69190612b1a565b61ffff169050600060018561ffff168361270091906129a1565b61270a91906129d2565b905060005b600161271b83856129a1565b901c90508861272e61ffff881683612aca565b61ffff811061273f5761273f612a72565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506127965761278f8160016129a1565b925061270f565b8861ffff87166127a78360016129a1565b6127b19190612aca565b61ffff81106127c2576127c2612a72565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff161515928201929092528651909550898216911611801590819061282e5750846000015163ffffffff168963ffffffff1611155b156128395750612864565b80612850576128496001836129d2565b925061285e565b61285b8260016129a1565b93505b5061270f565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610f2c57600080fd5b600080604083850312156128b757600080fd5b6128c083612890565b91506128ce60208401612890565b90509250929050565b6000602082840312156128e957600080fd5b5035919050565b6000806040838503121561290357600080fd5b50508035926020909101359150565b60006020828403121561292457600080fd5b813561ffff8116811461115d57600080fd5b60008060006060848603121561294b57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561297457600080fd5b81356001600160a01b038116811461115d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156129b4576129b461298b565b500190565b6000602082840312156129cb57600080fd5b5051919050565b6000828210156129e4576129e461298b565b500390565b6000816000190483118215151615612a0357612a0361298b565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612a2d57612a2d612a08565b500490565b600063ffffffff83811690831681811015612a4f57612a4f61298b565b039392505050565b600061ffff83811690831681811015612a4f57612a4f61298b565b634e487b7160e01b600052603260045260246000fd5b60006001600160d81b0383811690831681811015612a4f57612a4f61298b565b600061ffff80831681811415612ac057612ac061298b565b6001019392505050565b600082612ad957612ad9612a08565b500690565b634e487b7160e01b600052602160045260246000fd5b600061ffff808316818516808303821115612b1157612b1161298b565b01949350505050565b600061ffff80841680612b2f57612b2f612a08565b9216919091069291505056fea26469706673582212208453c4c3ccc1194d7363e570c564433d786d64559fb3588726f74f63dc3b963264736f6c63430008090033";

export class RocketPoolRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rocketEth: string,
    _rocketNetworkBalances: string,
    _weth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RocketPoolRateOracle> {
    return super.deploy(
      _rocketEth,
      _rocketNetworkBalances,
      _weth,
      _times,
      _results,
      overrides || {}
    ) as Promise<RocketPoolRateOracle>;
  }
  getDeployTransaction(
    _rocketEth: string,
    _rocketNetworkBalances: string,
    _weth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rocketEth,
      _rocketNetworkBalances,
      _weth,
      _times,
      _results,
      overrides || {}
    );
  }
  attach(address: string): RocketPoolRateOracle {
    return super.attach(address) as RocketPoolRateOracle;
  }
  connect(signer: Signer): RocketPoolRateOracle__factory {
    return super.connect(signer) as RocketPoolRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RocketPoolRateOracleInterface {
    return new utils.Interface(_abi) as RocketPoolRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RocketPoolRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RocketPoolRateOracle;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRateOracle,
  TestRateOracleInterface,
} from "../TestRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "aaveLendingPool",
        type: "address",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAfterOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBeforeOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestObservedRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "testGetRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "testGrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "queriedTime",
        type: "uint32",
      },
    ],
    name: "testObserveSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002f0538038062002f058339810160408190526200003491620003ec565b818180620000423362000216565b6001600160a01b038116620000745760405162461bcd60e51b81526004016200006b906200042b565b60405180910390fd5b6001600160a01b039081166080528216620000d25760405162461bcd60e51b815260206004820152601460248201527f6161766520706f6f6c206d75737420657869737400000000000000000000000060448201526064016200006b565b6001600160a01b038116620000fb5760405162461bcd60e51b81526004016200006b906200042b565b6201000380546001600160a01b0319166001600160a01b03841617905560006200013062000266602090811b62000c4a17901c565b620100035460405163d15e005360e01b81526001600160a01b0385811660048301529293506000929091169063d15e00539060240160206040518083038186803b1580156200017e57600080fd5b505afa15801562000193573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b9919062000462565b9050620001d8828260046200027860201b62000c5a179092919060201c565b6003805465ffffffff0000191664010000000061ffff9384160263ffff0000191617620100009390921692909202179055506200047c945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200027342620002fd565b905090565b60008062000287848462000344565b8051865460208301516040909301511515600160f81b026001600160f81b036001600160d81b03909416640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9093169290921717919091161790945550600193849350915050565b8063ffffffff811681146200033f5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016200006b565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620003a35760405162461bcd60e51b81526004016200006b906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b0381168114620003e957600080fd5b50565b600080604083850312156200040057600080fd5b82516200040d81620003d3565b60208401519092506200042081620003d3565b809150509250929050565b60208082526015908201527f756e6465726c79696e67206d7573742065786973740000000000000000000000604082015260600190565b6000602082840312156200047557600080fd5b5051919050565b608051612a51620004b460003960008181610339015281816109dd015281816111720152818161156e015261162f0152612a516000f3fe608060405234801561001057600080fd5b506004361061018b5760003560e01c806304a2e89b146101905780631195082e146101ae5780631a686502146101d957806322ff656814610206578063252c09d71461022057806325f258dd1461025f57806332148f67146102725780633c155bd5146102875780633eaf5d9f146102af57806341453528146102d857806354124c64146102eb57806356da9775146102fe5780636e035c05146103215780636f307dc314610334578063715018a614610368578063770a7d6d146103705780637aa4db131461037b5780637cf2cc9f146103835780637f0ca7ab1461038c5780638da5cb5b1461039757806393556dbd1461039f57806395f3e605146103b2578063a223ee0d146103d3578063bdb05092146103de578063c330c98d146103f1578063c58b59b814610400578063c7db359b14610413578063e16e189e1461045b578063e353020c1461046e578063e9b69c0d14610481578063e9d337b814610494578063f2fde38b146104a9578063f739670c146104bc575b600080fd5b61019b620100075481565b6040519081526020015b60405180910390f35b61019b6101bc3660046126bc565b600160209081526000928352604080842090915290825290205481565b62010004546101ee906001600160801b031681565b6040516001600160801b0390911681526020016101a5565b61020e600181565b60405160ff90911681526020016101a5565b61023361022e3660046126ef565b6104cf565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101a5565b61019b61026d366004612708565b610509565b61028561028036600461272a565b610577565b005b61029a61029536600461272a565b6105fc565b604080519283526020830191909152016101a5565b62010003546102c590600160a01b900460020b81565b60405160029190910b81526020016101a5565b61019b6102e6366004612708565b610669565b61019b6102f936600461274e565b61067d565b61031161030c366004612708565b6106d2565b60405190151581526020016101a5565b61019b61032f366004612708565b610738565b61035b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101a5919061277a565b61028561074b565b61019b620100055481565b61028561078f565b61019b60025481565b61019b620100065481565b61035b6107dc565b61019b6103ad366004612708565b6107eb565b6103c56103c036600461278e565b61087b565b6040516101a59291906127d3565b61019b620100085481565b6102856103ec3660046126ef565b6108b3565b61019b670de0b6b3a764000081565b61019b61040e36600461278e565b610927565b6003546104369061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff948516815292841660208401529216918101919091526060016101a5565b61028561046936600461272a565b610959565b61019b61047c366004612708565b610998565b61028561048f36600461278e565b6109b2565b620100035461035b906001600160a01b031681565b6102856104b73660046127ee565b610aa3565b61019b6104ca366004612708565b610b40565b60048161ffff81106104e057600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806105168484610ccb565b9092509050801561056f57600061053461052f86610dfc565b610e0a565b9050600061054461052f86610dfc565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff16600061059360048385610e4f565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146105f75760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff811061061957610619612817565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006106758383610ccb565b509392505050565b60008061068983610f41565b9050600061069f670de0b6b3a764000086612843565b905060006106ad8284610f58565b905060006106ba82610f97565b90506106c68882610fa8565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826106f98584610fa8565b905060006107078684610fa8565b90508187111580156107195750808710155b1561072b576001945050505050610571565b6000945050505050610571565b60006107448383610ff7565b9392505050565b336107546107dc565b6001600160a01b0316146107835760405162461bcd60e51b815260040161077a9061285b565b60405180910390fd5b61078d600061105c565b565b6003546107b49061ffff80821691620100008104821691600160201b909104166110ac565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156108305760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b604482015260640161077a565b600061083c8484610b40565b9050600061084a8585612890565b9050600061085782611294565b9050600061086482610f41565b90506108708482610ff7565b979650505050505050565b610883612688565b61088b612688565b6003546108aa90600490859061ffff80821691620100009004166112e1565b91509150915091565b336108bc6107dc565b6001600160a01b0316146108e25760405162461bcd60e51b815260040161077a9061285b565b80600254146109245760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b600061094c610934610c4a565b600354849061ffff8082169162010000900416611493565b6201000581905592915050565b60035461097490600490600160201b900461ffff1683610e4f565b6003805461ffff92909216600160201b0261ffff60201b1990921691909117905550565b60006109a48383610b40565b620100068190559392505050565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390610a05907f00000000000000000000000000000000000000000000000000000000000000009060040161277a565b60206040518083038186803b158015610a1d57600080fd5b505afa158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5591906128a7565b6003549091506000908190610a7e906004908690869061ffff8082169162010000900416611811565b6020918201516001600160d81b03908116620100075591015116620100085550505050565b33610aac6107dc565b6001600160a01b031614610ad25760405162461bcd60e51b815260040161077a9061285b565b6001600160a01b038116610b375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161077a565b6109248161105c565b600081831115610b7e5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b604482015260640161077a565b81831415610b8e57506000610571565b6000610b98610c4a565b90506000610ba585610e0a565b90506000610bb285610e0a565b600354909150600090610bd6908590859061ffff8082169162010000900416611493565b600354909150600090610bfa908690859061ffff8082169162010000900416611493565b905081811115610c3c576000610c2e676765c793fa10079d601b1b610c1f84866119c3565b610c299190612890565b611a38565b965061057195505050505050565b600095505050505050610571565b6000610c5542610e0a565b905090565b600080610c678484611aa6565b85600082519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790555060019050805b935093915050565b6000806000610cdc61052f86610dfc565b90506000610cec61052f86610dfc565b905060008263ffffffff16118015610d0a575060008163ffffffff16115b610d3e5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b604482015260640161077a565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610d945763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610df3565b8063ffffffff16610da3610c4a565b63ffffffff1610610dcf57610dc48263ffffffff168263ffffffff16610b40565b935060019250610df3565b610dec8263ffffffff16610de1610c4a565b63ffffffff16610b40565b9350600192505b50509250929050565b670de0b6b3a7640000900490565b8063ffffffff81168114610e4a5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b604482015260640161077a565b919050565b6000808361ffff1611610e885760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161077a565b61ffff8261ffff1610610ecc5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b604482015260640161077a565b8261ffff168261ffff1611610ee2575081610744565b825b8261ffff168161ffff161015610f38576001858261ffff1661ffff8110610f0d57610f0d612817565b01805463ffffffff191663ffffffff9290921691909117905580610f30816128d6565b915050610ee4565b50909392505050565b6000610571826a1a1601fc4ea7109e000000611b1e565b600082610f7d578115610f6c576000610f76565b670de0b6b3a76400005b9050610571565b610744610f92610f8c85611b33565b84611be3565b611bef565b600080610744633b9aca00846128f8565b6000821580610fb5575081155b15610fc257506000610571565b676765c793fa10079d601b1b610fd9600282612917565b610fe384866128f8565b610fed9190612843565b6107449190612917565b60008261100657506000610571565b600061101b6110156001611294565b84611b1e565b9050600061103d8561102d6001611294565b6110379190612843565b83610f58565b90506110496001611294565b6110539082612890565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106110c9576110c9612817565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000611113610c4a565b9050816000015163ffffffff166002548263ffffffff166111349190612890565b1015611147578686935093505050610cc3565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e00539061119a907f00000000000000000000000000000000000000000000000000000000000000009060040161277a565b60206040518083038186803b1580156111b257600080fd5b505afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea91906128a7565b90508061120a5760405163bd89c5af60e01b815260040160405180910390fd5b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611233611c35565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161128560048984848b8b611c40565b94509450505050935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156112d357604051633492ffd960e01b81526004810183905260240161077a565b50670de0b6b3a76400000290565b6112e9612688565b6112f1612688565b6000836112ff86600161292b565b6113099190612951565b61ffff169050600060018561ffff16836113239190612843565b61132d9190612890565b905060005b600161133e8385612843565b901c90508861135161ffff881683612972565b61ffff811061136257611362612817565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506113b9576113b2816001612843565b9250611332565b8861ffff87166113ca836001612843565b6113d49190612972565b61ffff81106113e5576113e5612817565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906114515750846000015163ffffffff168963ffffffff1611155b1561145c5750611487565b806114735761146c600183612890565b9250611481565b61147e826001612843565b93505b50611332565b50505094509492505050565b60008363ffffffff168563ffffffff1610156114c257604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff161415611604576114de612688565b60048461ffff1661ffff81106114f6576114f6612817565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146115ed57620100035460405163d15e005360e01b81526001600160a01b039091169063d15e005390611596907f00000000000000000000000000000000000000000000000000000000000000009060040161277a565b60206040518083038186803b1580156115ae57600080fd5b505afa1580156115c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e691906128a7565b91506115fe565b80602001516001600160d81b031691505b50611809565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390611657907f00000000000000000000000000000000000000000000000000000000000000009060040161277a565b60206040518083038186803b15801561166f57600080fd5b505afa158015611683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a791906128a7565b90506000806116ba600488858989611811565b91509150816000015163ffffffff168763ffffffff1614156116eb5781602001516001600160d81b03169350611805565b805163ffffffff888116911614156117125780602001516001600160d81b03169350611805565b600082602001516001600160d81b031682602001516001600160d81b03161115611781576000676765c793fa10079d601b1b61176884602001516001600160d81b031686602001516001600160d81b03166119c3565b6117729190612890565b905061177d81611a38565b9150505b60006117b2670de0b6b3a76400008551855161179d9190612986565b63ffffffff166117ad91906128f8565b610f41565b905060006117c08383610ff7565b90506117ff85602001516001600160d81b0316826117e3670de0b6b3a764000090565b88516117ef908f612986565b63ffffffff166102f991906128f8565b96505050505b5050505b949350505050565b611819612688565b611821612688565b868461ffff1661ffff811061183857611838612817565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909350908716106118b7578563ffffffff16826000015163ffffffff1614156118a3576119b9565b816118ae8787611aa6565b915091506119b9565b86836118c486600161292b565b6118ce9190612951565b61ffff1661ffff81106118e3576118e3612817565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506119685760408051606081018252885463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff808816911611156119a85760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015260640161077a565b6119b4878786866112e1565b915091505b9550959350505050565b604080518082019091526002815261035360f41b6020820152600090826119fd5760405162461bcd60e51b815260040161077a91906129ab565b506000611a0b600284612917565b90508281611a24676765c793fa10079d601b1b876128f8565b611a2e9190612843565b6118099190612917565b600080611a4a6002633b9aca00612917565b90506000611a588483612843565b90508181101560405180604001604052806002815260200161343960f01b81525090611a975760405162461bcd60e51b815260040161077a91906129ab565b50611809633b9aca0082612917565b611aae612688565b6001600160d81b03821115611aee5760405162461bcd60e51b815260040161077a906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061074483670de0b6b3a764000084611d88565b6000670de0b6b3a7640000821015611b6157604051633621413760e21b81526004810183905260240161077a565b6000611b76670de0b6b3a76400008404611e56565b670de0b6b3a7640000808202935090915083821c90811415611b99575050919050565b6706f05b59d3b200005b8015611bdb57670de0b6b3a7640000828002049150671bc16d674ec800008210611bd3579283019260019190911c905b60011c611ba3565b505050919050565b60006107448383611f34565b6000680a688906bd8b0000008210611c1d57604051634a4f26f160e01b81526004810183905260240161077a565b670de0b6b3a7640000604083901b0461074481611ff6565b6000610c5542611294565b6000806000888861ffff1661ffff8110611c5c57611c5c612817565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611cb75787859250925050611d7d565b8461ffff168461ffff16118015611cdf5750611cd4600186612a00565b61ffff168861ffff16145b15611cec57839150611cf0565b8491505b81611cfc89600161292b565b611d069190612951565b9250611d128787611aa6565b898461ffff1661ffff8110611d2957611d29612817565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b600080806000198587098587029250828110838203039150508060001415611dc357838281611db957611db96128c0565b0492505050610744565b838110611ded57604051631dcf306360e21b8152600481018290526024810185905260440161077a565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611e7657608091821c91611e739082612843565b90505b600160401b8210611e9457604091821c91611e919082612843565b90505b600160201b8210611eb257602091821c91611eaf9082612843565b90505b620100008210611ecf57601091821c91611ecc9082612843565b90505b6101008210611eeb57600891821c91611ee89082612843565b90505b60108210611f0657600491821c91611f039082612843565b90505b60048210611f2157600291821c91611f1e9082612843565b90505b60028210610e4a57610571600182612843565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611f785760405163698d9a0160e11b81526004810182905260240161077a565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611fb25780670de0b6b3a7640000850401945050505050610571565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156120165768016a09e667f3bcc9090260401c5b6001603e1b821615612031576801306fe0a31b7152df0260401c5b6001603d1b82161561204c576801172b83c7d517adce0260401c5b6001603c1b8216156120675768010b5586cf9890f62a0260401c5b6001603b1b821615612082576801059b0d31585743ae0260401c5b6001603a1b82161561209d57680102c9a3e778060ee70260401c5b600160391b8216156120b85768010163da9fb33356d80260401c5b600160381b8216156120d357680100b1afa5abcbed610260401c5b600160371b8216156120ee5768010058c86da1c09ea20260401c5b600160361b821615612109576801002c605e2e8cec500260401c5b600160351b82161561212457680100162f3904051fa10260401c5b600160341b82161561213f576801000b175effdc76ba0260401c5b600160331b82161561215a57680100058ba01fb9f96d0260401c5b600160321b8216156121755768010002c5cc37da94920260401c5b600160311b821615612190576801000162e525ee05470260401c5b600160301b8216156121ab5768010000b17255775c040260401c5b6001602f1b8216156121c6576801000058b91b5bc9ae0260401c5b6001602e1b8216156121e157680100002c5c89d5ec6d0260401c5b6001602d1b8216156121fc5768010000162e43f4f8310260401c5b6001602c1b82161561221757680100000b1721bcfc9a0260401c5b6001602b1b8216156122325768010000058b90cf1e6e0260401c5b6001602a1b82161561224d576801000002c5c863b73f0260401c5b600160291b82161561226857680100000162e430e5a20260401c5b600160281b821615612283576801000000b1721835510260401c5b600160271b82161561229e57680100000058b90c0b490260401c5b600160261b8216156122b95768010000002c5c8601cc0260401c5b600160251b8216156122d4576801000000162e42fff00260401c5b600160241b8216156122ef5768010000000b17217fbb0260401c5b600160231b82161561230a576801000000058b90bfce0260401c5b600160221b82161561232557680100000002c5c85fe30260401c5b600160211b8216156123405768010000000162e42ff10260401c5b600160201b82161561235b57680100000000b17217f80260401c5b63800000008216156123765768010000000058b90bfc0260401c5b6340000000821615612391576801000000002c5c85fe0260401c5b63200000008216156123ac57680100000000162e42ff0260401c5b63100000008216156123c7576801000000000b17217f0260401c5b63080000008216156123e257680100000000058b90c00260401c5b63040000008216156123fd5768010000000002c5c8600260401c5b6302000000821615612418576801000000000162e4300260401c5b63010000008216156124335768010000000000b172180260401c5b6280000082161561244d576801000000000058b90c0260401c5b6240000082161561246757680100000000002c5c860260401c5b622000008216156124815768010000000000162e430260401c5b6210000082161561249b57680100000000000b17210260401c5b620800008216156124b55768010000000000058b910260401c5b620400008216156124cf576801000000000002c5c80260401c5b620200008216156124e957680100000000000162e40260401c5b620100008216156125025761b172600160401b010260401c5b61800082161561251a576158b9600160401b010260401c5b61400082161561253257612c5d600160401b010260401c5b61200082161561254a5761162e600160401b010260401c5b61100082161561256257610b17600160401b010260401c5b61080082161561257a5761058c600160401b010260401c5b610400821615612592576102c6600160401b010260401c5b6102008216156125aa57610163600160401b010260401c5b6101008216156125c15760b1600160401b010260401c5b60808216156125d7576059600160401b010260401c5b60408216156125ed57602c600160401b010260401c5b6020821615612603576016600160401b010260401c5b601082161561261957600b600160401b010260401c5b600882161561262f576006600160401b010260401c5b6004821615612645576003600160401b010260401c5b600282161561265b576001600160401b010260401c5b6001821615612671576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610e4a57600080fd5b600080604083850312156126cf57600080fd5b6126d8836126a8565b91506126e6602084016126a8565b90509250929050565b60006020828403121561270157600080fd5b5035919050565b6000806040838503121561271b57600080fd5b50508035926020909101359150565b60006020828403121561273c57600080fd5b813561ffff8116811461074457600080fd5b60008060006060848603121561276357600080fd5b505081359360208301359350604090920135919050565b6001600160a01b0391909116815260200190565b6000602082840312156127a057600080fd5b610744826126a8565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c081016127e182856127a9565b61074460608301846127a9565b60006020828403121561280057600080fd5b81356001600160a01b038116811461074457600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156128565761285661282d565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000828210156128a2576128a261282d565b500390565b6000602082840312156128b957600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600061ffff808316818114156128ee576128ee61282d565b6001019392505050565b60008160001904831182151516156129125761291261282d565b500290565b600082612926576129266128c0565b500490565b600061ffff8083168185168083038211156129485761294861282d565b01949350505050565b600061ffff80841680612966576129666128c0565b92169190910692915050565b600082612981576129816128c0565b500690565b600063ffffffff838116908316818110156129a3576129a361282d565b039392505050565b600060208083528351808285015260005b818110156129d8578581018301518582016040015282016129bc565b818111156129ea576000604083870101525b50601f01601f1916929092016040019392505050565b600061ffff838116908316818110156129a3576129a361282d56fea26469706673582212207d59d0e9a987fe5fef888752bfa64a0a386a540867d03c2faf219b58c45189ad64736f6c63430008090033";

export class TestRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRateOracle> {
    return super.deploy(
      aaveLendingPool,
      underlying,
      overrides || {}
    ) as Promise<TestRateOracle>;
  }
  getDeployTransaction(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      aaveLendingPool,
      underlying,
      overrides || {}
    );
  }
  attach(address: string): TestRateOracle {
    return super.attach(address) as TestRateOracle;
  }
  connect(signer: Signer): TestRateOracle__factory {
    return super.connect(signer) as TestRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRateOracleInterface {
    return new utils.Interface(_abi) as TestRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestRateOracle;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PositionTest, PositionTestInterface } from "../PositionTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeGrowthInside",
        type: "uint256",
      },
    ],
    name: "calculateFeeDelta",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDelta",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "fixedTokenGrowthInside",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenGrowthInside",
        type: "int256",
      },
    ],
    name: "calculateFixedAndVariableDelta",
    outputs: [
      {
        internalType: "int256",
        name: "_fixedTokenBalance",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_variableTokenBalance",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "position",
    outputs: [
      {
        internalType: "bool",
        name: "isSettled",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "_liquidity",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "margin",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "fixedTokenGrowthInsideLastX128",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenGrowthInsideLastX128",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "fixedTokenBalance",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenBalance",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInsideLastX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "fixedTokenBalanceDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenBalanceDelta",
        type: "int256",
      },
    ],
    name: "updateBalances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeGrowthInside",
        type: "uint256",
      },
    ],
    name: "updateFeeGrowthInside",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "fixedTokenGrowthInside",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenGrowthInside",
        type: "int256",
      },
    ],
    name: "updateFixedAndVariableTokenGrowthInside",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "liquidityDelta",
        type: "int128",
      },
    ],
    name: "updateLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginDelta",
        type: "int256",
      },
    ],
    name: "updateMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806309218e911461007d5780630f602aca1461010e5780631a1b9fbc146101235780632556efd21461014b5780633f7a48481461015e5780638551d2f614610177578063bf3a956d1461018a578063bf6d8990146101ab575b600080fd5b6000546001546002546003546004546005546006546007546100bb9760ff8116976101009091046001600160801b0316969095909490939092909189565b604080519915158a526001600160801b0390981660208a0152968801959095526060870193909352608086019190915260a085015260c084015260e0830152610100820152610120015b60405180910390f35b61012161011c366004610663565b6101be565b005b610136610131366004610686565b6101cc565b60408051928352602083019190915201610105565b6101216101593660046106a8565b6101e5565b61012161016c366004610686565b600291909155600355565b6101216101853660046106a8565b600655565b61019d6101983660046106a8565b6101f4565b604051908152602001610105565b6101216101b9366004610686565b610206565b6101c9600082610212565b50565b6000806101da818585610310565b909590945092505050565b6101c96000826103f5565b5050565b60006102008183610412565b92915050565b6101f0600083836104a6565b6040805161012081018252835460ff8116151582526001600160801b03610100918290041660208301526001850154928201929092526002840154606082015260038401546080820152600484015460a0820152600584015460c0820152600684015460e0820152600784015491810191909152600f82900b6102db57600081602001516001600160801b0316116102d65760405162461bcd60e51b815260206004820152600260248201526104e560f41b60448201526064015b60405180910390fd5b505050565b6102e98160200151836104e7565b83546001600160801b039190911661010002610100600160881b0319909116178355505050565b6040805161012081018252845460ff8116151582526001600160801b036101009182900416602083015260018601549282019290925260028501546060820181905260038601546080830152600486015460a0830152600586015460c0830152600686015460e0830152600786015492820192909252600091829190829061039890876106d7565b90506103b68183602001516001600160801b0316600160801b61051c565b935060008260800151866103ca91906106d7565b90506103e88184602001516001600160801b0316600160801b61051c565b9350505050935093915050565b808260010160008282546104099190610716565b90915550505050565b6040805161012081018252835460ff8116151582526001600160801b036101009182900416602083018190526001860154938301939093526002850154606083015260038501546080830152600485015460a0830152600585015460c0830152600685015460e0830181905260078601549183019190915260009261049e91850390600160801b610550565b949350505050565b818117156102d657818360040160008282546104c29190610716565b92505081905550808360050160008282546104dd9190610716565b9091555050505050565b60008082600f0b121561050b5760008290036105038185610757565b915050610200565b610515828461077f565b9392505050565b60008084121561054957610539610532856107aa565b8484610550565b610542906107aa565b9050610515565b61049e8484845b6000808060001985870985870292508281108382030391505080600014156105c057600084116105b55760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b60448201526064016102cd565b508290049050610515565b8084116105fa5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b60448201526064016102cd565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006020828403121561067557600080fd5b813580600f0b811461051557600080fd5b6000806040838503121561069957600080fd5b50508035926020909101359150565b6000602082840312156106ba57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b8501841216156106f5576106f56106c1565b6001600160ff1b0384018313811615610710576107106106c1565b50500390565b600080821280156001600160ff1b0384900385131615610738576107386106c1565b600160ff1b8390038412811615610751576107516106c1565b50500190565b60006001600160801b0383811690831681811015610777576107776106c1565b039392505050565b60006001600160801b038281168482168083038211156107a1576107a16106c1565b01949350505050565b6000600160ff1b8214156107c0576107c06106c1565b506000039056fea264697066735822122081918b247f873319ea56d1e5afedd2f8b192f464eb2483ab0e4e5b04dc3ca08264736f6c63430008090033";

export class PositionTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PositionTest> {
    return super.deploy(overrides || {}) as Promise<PositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PositionTest {
    return super.attach(address) as PositionTest;
  }
  connect(signer: Signer): PositionTest__factory {
    return super.connect(signer) as PositionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionTestInterface {
    return new utils.Interface(_abi) as PositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PositionTest {
    return new Contract(address, _abi, signerOrProvider) as PositionTest;
  }
}

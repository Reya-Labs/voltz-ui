/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Periphery, PeripheryInterface } from "../Periphery";

const _abi = [
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__FromIntOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__FromIntUnderflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__MulInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__MulOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "_tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_tickUpper",
        type: "int24",
      },
    ],
    name: "estimatedCashflowAtMaturity",
    outputs: [
      {
        internalType: "int256",
        name: "estimatedSettlementCashflow",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
    ],
    name: "getCurrentTick",
    outputs: [
      {
        internalType: "int24",
        name: "currentTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "marginDelta",
            type: "uint256",
          },
        ],
        internalType: "struct IPeriphery.MintOrBurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintOrBurn",
    outputs: [
      {
        internalType: "int256",
        name: "positionMarginRequirement",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "marginDelta",
            type: "uint256",
          },
        ],
        internalType: "struct IPeriphery.SwapPeripheryParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "int256",
        name: "_fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_fixedTokenDeltaUnbalanced",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "_tickAfter",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061290b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063040a5dc11461005157806314d2348e1461007c57806334907e341461009d5780637ae3714c146100e0575b600080fd5b61006461005f366004612249565b6100f3565b60405160029190910b81526020015b60405180910390f35b61008f61008a3660046122c5565b6101e5565b604051908152602001610073565b6100b06100ab36600461236d565b610524565b604080519687526020870195909552938501929092526060840152608083015260020b60a082015260c001610073565b61008f6100ee366004612427565b6109a3565b600080826001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561012f57600080fd5b505afa158015610143573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101679190612483565b9050806001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156101a257600080fd5b505afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da91906124a0565b602001519392505050565b60006101f982602001518360400151610c09565b600082600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561023857600080fd5b505afa15801561024c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102709190612483565b90506000816001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156102ad57600080fd5b505afa1580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e591906124a0565b805160208601519192506001600160a01b031615159060009061030790610cd3565b905060006103188760400151610cd3565b9050826103b0576000600288604001518960200151610337919061253b565b6103419190612598565b9050600061034e82610cd3565b6040516323fbaf6f60e11b81526001600160a01b038083166004830152919250908816906347f75ede90602401600060405180830381600087803b15801561039557600080fd5b505af11580156103a9573d6000803e3d6000fd5b5050505050505b60a0870151156103d6576103d68760000151886020015189604001518a60a001516110e5565b60006103e783838a60600151611283565b90506000965087608001511561048a5760208801516040808a01519051635c6651a760e11b81526001600160a01b0389169263b8cca34e92610431923392919087906004016125d2565b602060405180830381600087803b15801561044b57600080fd5b505af115801561045f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104839190612605565b9650610519565b60208801516040808a01519051631f2f089360e01b81526001600160a01b03891692631f2f0893926104c4923392919087906004016125d2565b602060405180830381600087803b1580156104de57600080fd5b505af11580156104f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105169190612605565b96505b505050505050919050565b60008060008060008061053f87608001518860a00151610c09565b600087600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561057e57600080fd5b505afa158015610592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b69190612483565b9050876080015160020b60001480156105d4575060a088015160020b155b15610741576000816001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561061457600080fd5b505afa158015610628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064c919061261e565b90506000826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561068957600080fd5b505afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c191906124a0565b905060008282602001516106d5919061263b565b905060008383602001516106e9919061253b565b905062010deb19600283900b12156107035762010deb1991505b61071062010deb19612683565b60020b8160020b131561072d5761072a62010deb19612683565b90505b600291820b60808d0152900b60a08b015250505b60c08801511561076757610767886000015189608001518a60a001518b60c001516110e5565b60008860200151156107875761078089604001516112d6565b90506107a0565b61079489604001516112d6565b61079d906126a6565b90505b60006040518060a00160405280336001600160a01b031681526020018381526020018b606001516001600160a01b03166000146107e1578b6060015161081f565b8b60200151156108085761080360016c1fa71f3f5f68a90479ee3f8fec6126c3565b61081f565b61081f6b0816769404766de590afe04e60016126eb565b6001600160a01b031681526020018b6080015160020b81526020018b60a0015160020b8152509050826001600160a01b03166367758e6e826040518263ffffffff1660e01b81526004016108ba9190600060a08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160020b6060830152608083015160020b608083015292915050565b60a060405180830381600087803b1580156108d457600080fd5b505af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190612716565b809950819a50829b50839c50849d505050505050826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561095957600080fd5b505afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099191906124a0565b60200151935050505091939550919395565b600080856001600160a01b031663e3f083746040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a199190612605565b90506000866001600160a01b031663652c30b76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5657600080fd5b505afa158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e9190612605565b90506000876001600160a01b03166393edb4546040518163ffffffff1660e01b815260040160206040518083038186803b158015610acb57600080fd5b505afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190612605565b90506000610b19610b148484612756565b611344565b90506000610b276001611361565b610b4586610b356001611361565b610b3f919061276d565b846113ae565b610b4f9190612756565b604051634904f4dd60e11b81526001600160a01b038b8116600483015260028b810b60248401528a900b60448301529192506000918c1690639209e9ba9060640161012060405180830381600087803b158015610bab57600080fd5b505af1158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be391906127a7565b9050610bfa8160a001518260c001518787866113ed565b9b9a5050505050505050505050565b8060020b8260020b12610c495760405162461bcd60e51b8152602060048201526003602482015262544c5560e81b60448201526064015b60405180910390fd5b62010deb19600283900b1215610c875760405162461bcd60e51b8152602060048201526003602482015262544c4d60e81b6044820152606401610c40565b610c9462010deb19612683565b60020b8160020b1315610ccf5760405162461bcd60e51b815260206004820152600360248201526254554d60e81b6044820152606401610c40565b5050565b60008060008360020b12610cea578260020b610cf7565b8260020b610cf7906126a6565b9050610d0662010deb19612683565b60020b811115610d3c5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610c40565b600060018216610d5057600160801b610d62565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b031690506002821615610d97576080610d92826ffff97272373d413259a46990580e213a612830565b901c90505b6004821615610dc1576080610dbc826ffff2e50f5f656932ef12357cf3c7fdcc612830565b901c90505b6008821615610deb576080610de6826fffe5caca7e10e4e61c3624eaa0941cd0612830565b901c90505b6010821615610e15576080610e10826fffcb9843d60f6159c9db58835c926644612830565b901c90505b6020821615610e3f576080610e3a826fff973b41fa98c081472e6896dfb254c0612830565b901c90505b6040821615610e69576080610e64826fff2ea16466c96a3843ec78b326b52861612830565b901c90505b6080821615610e93576080610e8e826ffe5dee046a99a2a811c461f1969c3053612830565b901c90505b610100821615610ebe576080610eb9826ffcbe86c7900a88aedcffc83b479aa3a4612830565b901c90505b610200821615610ee9576080610ee4826ff987a7253ac413176f2b074cf7815e54612830565b901c90505b610400821615610f14576080610f0f826ff3392b0822b70005940c7a398e4b70f3612830565b901c90505b610800821615610f3f576080610f3a826fe7159475a2c29b7443b29c7fa6e889d9612830565b901c90505b611000821615610f6a576080610f65826fd097f3bdfd2022b8845ad8f792aa5825612830565b901c90505b612000821615610f95576080610f90826fa9f746462d870fdf8a65dc1f90e061e5612830565b901c90505b614000821615610fc0576080610fbb826f70d869a156d2a1b890bb3df62baf32f7612830565b901c90505b618000821615610feb576080610fe6826f31be135f97d08fd981231505542fcfa6612830565b901c90505b62010000821615611017576080611012826f09aa508b5b7a84e1c677de54f3e99bc9612830565b901c90505b6202000082161561104257608061103d826e5d6af8dedb81196699c329225ee604612830565b901c90505b6204000082161561106c576080611067826d2216e584f5fa1ea926041bedfe98612830565b901c90505b6208000082161561109457608061108f826b048a170391f7dc42444e8fa2612830565b901c90505b60008460020b13156110af576110ac8160001961284f565b90505b6110bd600160201b82612863565b156110c95760016110cc565b60005b6110dd9060ff16602083901c61276d565b949350505050565b6000846001600160a01b0316632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b15801561112057600080fd5b505afa158015611134573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111589190612483565b905061116f6001600160a01b03821633308561144e565b60405163095ea7b360e01b81526001600160a01b0386811660048301526024820184905282169063095ea7b390604401602060405180830381600087803b1580156111b957600080fd5b505af11580156111cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f19190612877565b50846001600160a01b0316637717797f33868661120d876112d6565b6040516001600160e01b031960e087901b1681526001600160a01b039094166004850152600292830b6024850152910b60448301526064820152608401600060405180830381600087803b15801561126457600080fd5b505af1158015611278573d6000803e3d6000fd5b505050505050505050565b6000826001600160a01b0316846001600160a01b031611156112a3579192915b6112cc6112c783600160601b6112b988886126c3565b6001600160a01b03166114e2565b6115f5565b90505b9392505050565b60006001600160ff1b038211156113405760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610c40565b5090565b600061135b826a1a1601fc4ea7109e000000611610565b92915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156113a057604051633492ffd960e01b815260048101839052602401610c40565b50670de0b6b3a76400000290565b6000826113d35781156113c25760006113cc565b670de0b6b3a76400005b905061135b565b6112cf6113e86113e285611625565b846116d5565b6116e1565b6000806113f987611727565b9050600061140687611727565b90506000611420611419600189896117a4565b849061187e565b9050600061142e838761187e565b9050600061143c8284612894565b9050670de0b6b3a76400008105610bfa565b60006040516323b872dd60e01b81526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af191505061149881611943565b6114db5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610c40565b5050505050565b60008080600019858709858702925082811083820303915050806000141561155257600084116115475760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b6044820152606401610c40565b5082900490506112cf565b80841161158c5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b6044820152606401610c40565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b806001600160801b038116811461160b57600080fd5b919050565b60006112cf83670de0b6b3a76400008461198a565b6000670de0b6b3a764000082101561165357604051633621413760e21b815260048101839052602401610c40565b6000611668670de0b6b3a764000084046119ef565b670de0b6b3a7640000808202935090915083821c9081141561168b575050919050565b6706f05b59d3b200005b80156116cd57670de0b6b3a7640000828002049150671bc16d674ec8000082106116c5579283019260019190911c905b60011c611695565b505050919050565b60006112cf8383611acd565b6000680a688906bd8b000000821061170f57604051634a4f26f160e01b815260048101839052602401610c40565b670de0b6b3a7640000604083901b046112cf81611b8f565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156117675760405163e608e18b60e01b815260048101839052602401610c40565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f908213156113a0576040516371f72a3160e01b815260048101839052602401610c40565b60008282116117de5760405162461bcd60e51b8152600401610c4090602080825260049082015263453c3d5360e01b604082015260600190565b60006117e8612221565b9050838110156118225760405162461bcd60e51b8152602060048201526005602482015264422e543c5360d81b6044820152606401610c40565b600085806118305750838210155b156118465761183f8585612756565b9050611853565b6118508583612756565b90505b600061185e82611344565b90506118738168056bc75e2d63100000611610565b979650505050505050565b6000600160ff1b8314806118955750600160ff1b82145b156118b357604051630d01a11b60e21b815260040160405180910390fd5b600080600085126118c457846118c9565b846000035b9150600084126118d957836118de565b836000035b905060006118ec8383611acd565b90506001600160ff1b038111156119195760405163bf79e8d960e01b815260048101829052602401610c40565b6000198087139086138082186001146119325782611937565b826000035b98975050505050505050565b60003d8261195557806000803e806000fd5b806020811461196d57801561197e5760009250611983565b816000803e60005115159250611983565b600192505b5050919050565b6000808060001985870985870292508281108382030391505080600014156119c5578382816119bb576119bb612582565b04925050506112cf565b83811061158c57604051631dcf306360e21b81526004810182905260248101859052604401610c40565b6000600160801b8210611a0f57608091821c91611a0c908261276d565b90505b600160401b8210611a2d57604091821c91611a2a908261276d565b90505b600160201b8210611a4b57602091821c91611a48908261276d565b90505b620100008210611a6857601091821c91611a65908261276d565b90505b6101008210611a8457600891821c91611a81908261276d565b90505b60108210611a9f57600491821c91611a9c908261276d565b90505b60048210611aba57600291821c91611ab7908261276d565b90505b6002821061160b5761135b60018261276d565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611b115760405163698d9a0160e11b815260048101829052602401610c40565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611b4b5780670de0b6b3a764000085040194505050505061135b565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611baf5768016a09e667f3bcc9090260401c5b6001603e1b821615611bca576801306fe0a31b7152df0260401c5b6001603d1b821615611be5576801172b83c7d517adce0260401c5b6001603c1b821615611c005768010b5586cf9890f62a0260401c5b6001603b1b821615611c1b576801059b0d31585743ae0260401c5b6001603a1b821615611c3657680102c9a3e778060ee70260401c5b600160391b821615611c515768010163da9fb33356d80260401c5b600160381b821615611c6c57680100b1afa5abcbed610260401c5b600160371b821615611c875768010058c86da1c09ea20260401c5b600160361b821615611ca2576801002c605e2e8cec500260401c5b600160351b821615611cbd57680100162f3904051fa10260401c5b600160341b821615611cd8576801000b175effdc76ba0260401c5b600160331b821615611cf357680100058ba01fb9f96d0260401c5b600160321b821615611d0e5768010002c5cc37da94920260401c5b600160311b821615611d29576801000162e525ee05470260401c5b600160301b821615611d445768010000b17255775c040260401c5b6001602f1b821615611d5f576801000058b91b5bc9ae0260401c5b6001602e1b821615611d7a57680100002c5c89d5ec6d0260401c5b6001602d1b821615611d955768010000162e43f4f8310260401c5b6001602c1b821615611db057680100000b1721bcfc9a0260401c5b6001602b1b821615611dcb5768010000058b90cf1e6e0260401c5b6001602a1b821615611de6576801000002c5c863b73f0260401c5b600160291b821615611e0157680100000162e430e5a20260401c5b600160281b821615611e1c576801000000b1721835510260401c5b600160271b821615611e3757680100000058b90c0b490260401c5b600160261b821615611e525768010000002c5c8601cc0260401c5b600160251b821615611e6d576801000000162e42fff00260401c5b600160241b821615611e885768010000000b17217fbb0260401c5b600160231b821615611ea3576801000000058b90bfce0260401c5b600160221b821615611ebe57680100000002c5c85fe30260401c5b600160211b821615611ed95768010000000162e42ff10260401c5b600160201b821615611ef457680100000000b17217f80260401c5b6380000000821615611f0f5768010000000058b90bfc0260401c5b6340000000821615611f2a576801000000002c5c85fe0260401c5b6320000000821615611f4557680100000000162e42ff0260401c5b6310000000821615611f60576801000000000b17217f0260401c5b6308000000821615611f7b57680100000000058b90c00260401c5b6304000000821615611f965768010000000002c5c8600260401c5b6302000000821615611fb1576801000000000162e4300260401c5b6301000000821615611fcc5768010000000000b172180260401c5b62800000821615611fe6576801000000000058b90c0260401c5b6240000082161561200057680100000000002c5c860260401c5b6220000082161561201a5768010000000000162e430260401c5b6210000082161561203457680100000000000b17210260401c5b6208000082161561204e5768010000000000058b910260401c5b62040000821615612068576801000000000002c5c80260401c5b6202000082161561208257680100000000000162e40260401c5b6201000082161561209b5761b172600160401b010260401c5b6180008216156120b3576158b9600160401b010260401c5b6140008216156120cb57612c5d600160401b010260401c5b6120008216156120e35761162e600160401b010260401c5b6110008216156120fb57610b17600160401b010260401c5b6108008216156121135761058c600160401b010260401c5b61040082161561212b576102c6600160401b010260401c5b61020082161561214357610163600160401b010260401c5b61010082161561215a5760b1600160401b010260401c5b6080821615612170576059600160401b010260401c5b604082161561218657602c600160401b010260401c5b602082161561219c576016600160401b010260401c5b60108216156121b257600b600160401b010260401c5b60088216156121c8576006600160401b010260401c5b60048216156121de576003600160401b010260401c5b60028216156121f4576001600160401b010260401c5b600182161561220a576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b600061222c42611361565b905090565b6001600160a01b038116811461224657600080fd5b50565b60006020828403121561225b57600080fd5b81356112cf81612231565b60405161012081016001600160401b038111828210171561229757634e487b7160e01b600052604160045260246000fd5b60405290565b8060020b811461224657600080fd5b803561160b8161229d565b801515811461224657600080fd5b600060c082840312156122d757600080fd5b60405160c081016001600160401b038111828210171561230757634e487b7160e01b600052604160045260246000fd5b604052823561231581612231565b815260208301356123258161229d565b602082015260408301356123388161229d565b6040820152606083810135908201526080830135612355816122b7565b608082015260a0928301359281019290925250919050565b600060e0828403121561237f57600080fd5b60405160e081016001600160401b03811182821017156123af57634e487b7160e01b600052604160045260246000fd5b60405282356123bd81612231565b815260208301356123cd816122b7565b60208201526040838101359082015260608301356123ea81612231565b606082015260808301356123fd8161229d565b608082015261240e60a084016122ac565b60a082015260c083013560c08201528091505092915050565b6000806000806080858703121561243d57600080fd5b843561244881612231565b9350602085013561245881612231565b925060408501356124688161229d565b915060608501356124788161229d565b939692955090935050565b60006020828403121561249557600080fd5b81516112cf81612231565b6000606082840312156124b257600080fd5b604051606081016001600160401b03811182821017156124e257634e487b7160e01b600052604160045260246000fd5b60405282516124f081612231565b815260208301516125008161229d565b6020820152604083015160ff8116811461251957600080fd5b60408201529392505050565b634e487b7160e01b600052601160045260246000fd5b60008160020b8360020b6000821282627fffff0382138115161561256157612561612525565b82627fffff1903821281161561257957612579612525565b50019392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806125af576125af612582565b627fffff198214600019821416156125c9576125c9612525565b90059392505050565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260800190565b60006020828403121561261757600080fd5b5051919050565b60006020828403121561263057600080fd5b81516112cf8161229d565b60008160020b8360020b6000811281627fffff190183128115161561266257612662612525565b81627fffff01831381161561267957612679612525565b5090039392505050565b60008160020b627fffff1981141561269d5761269d612525565b60000392915050565b6000600160ff1b8214156126bc576126bc612525565b5060000390565b60006001600160a01b03838116908316818110156126e3576126e3612525565b039392505050565b60006001600160a01b0382811684821680830382111561270d5761270d612525565b01949350505050565b600080600080600060a0868803121561272e57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60008282101561276857612768612525565b500390565b6000821982111561278057612780612525565b500190565b805161160b816122b7565b80516001600160801b038116811461160b57600080fd5b600061012082840312156127ba57600080fd5b6127c2612266565b6127cb83612785565b81526127d960208401612790565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b600081600019048311821515161561284a5761284a612525565b500290565b60008261285e5761285e612582565b500490565b60008261287257612872612582565b500690565b60006020828403121561288957600080fd5b81516112cf816122b7565b600080821280156001600160ff1b03849003851316156128b6576128b6612525565b600160ff1b83900384128116156128cf576128cf612525565b5050019056fea2646970667358221220c44bac9aef90db7b318021d4cc69051c9dd0300ad074c0be832b9e6d6943e14664736f6c63430008090033";

export class Periphery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Periphery> {
    return super.deploy(overrides || {}) as Promise<Periphery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Periphery {
    return super.attach(address) as Periphery;
  }
  connect(signer: Signer): Periphery__factory {
    return super.connect(signer) as Periphery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeripheryInterface {
    return new utils.Interface(_abi) as PeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Periphery {
    return new Contract(address, _abi, signerOrProvider) as Periphery;
  }
}

import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SqrtPriceMathTest, SqrtPriceMathTestInterface } from "../SqrtPriceMathTest";
export declare class SqrtPriceMathTest__factory extends ContractFactory {
    constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<SqrtPriceMathTest>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): SqrtPriceMathTest;
    connect(signer: Signer): SqrtPriceMathTest__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610bda806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632c32d4b6146100675780632cfa7a2a1461008d57806348a0c5bd146100a0578063963001b3146100b3578063aa58276a146100c6578063fedf2b5f146100f1575b600080fd5b61007a6100753660046109a5565b610104565b6040519081526020015b60405180910390f35b61007a61009b36600461095a565b61011d565b61007a6100ae3660046109a5565b610134565b61007a6100c136600461095a565b610142565b6100d96100d436600461090e565b61014f565b6040516001600160a01b039091168152602001610084565b6100d96100ff36600461090e565b61015d565b60006101128585858561016b565b90505b949350505050565b600061012a848484610285565b90505b9392505050565b6000610112858585856102cc565b600061012a84848461033c565b600061011285858585610370565b6000610112858585856103e2565b6000836001600160a01b0316856001600160a01b0316111561018b579293925b600160601b600160e01b03606084901b1660006101a88787610af4565b6001600160a01b031690506000876001600160a01b03161161020a5760405162461bcd60e51b8152602060048201526016602482015275073717274207072696365206d757374206265203e20360541b60448201526064015b60405180910390fd5b8361024e57866001600160a01b031661022d8383896001600160a01b0316610454565b8161024857634e487b7160e01b600052601260045260246000fd5b0461027a565b61027a6102658383896001600160a01b031661054c565b886001600160a01b0316808204910615150190565b979650505050505050565b60008082600f0b126102ab576102a66102a185858560016102cc565b6105b6565b61012a565b6102c36102a185856102bc86610b4e565b60006102cc565b61012a90610b74565b6000836001600160a01b0316856001600160a01b031611156102ec579293925b8161031957610314836001600160801b03168686036001600160a01b0316600160601b610454565b610112565b610112836001600160801b03168686036001600160a01b0316600160601b61054c565b60008082600f0b12610358576102a66102a1858585600161016b565b6102c36102a1858561036986610b4e565b600061016b565b600080856001600160a01b03161161039a5760405162461bcd60e51b8152600401610201906109ed565b6000846001600160801b0316116103c35760405162461bcd60e51b815260040161020190610a21565b816103d5576103148585856001610606565b6101128585856001610728565b600080856001600160a01b03161161040c5760405162461bcd60e51b8152600401610201906109ed565b6000846001600160801b0316116104355760405162461bcd60e51b815260040161020190610a21565b81610447576103148585856000610728565b6101128585856000610606565b6000808060001985870985870292508281108382030391505080600014156104c457600084116104b95760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b6044820152606401610201565b50829004905061012d565b8084116104e35760405162461bcd60e51b815260040161020190610a50565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000610559848484610454565b90506000828061057957634e487b7160e01b600052601260045260246000fd5b848609111561012d5760001981106105a35760405162461bcd60e51b815260040161020190610a50565b806105ad81610b33565b95945050505050565b6000600160ff1b82106106025760405162461bcd60e51b815260206004820152601460248201527337bb32b9333637bb9034b7103a37a4b73a191a9b60611b6044820152606401610201565b5090565b600081156106705760006001600160a01b0384111561063c5761063784600160601b876001600160801b0316610454565b610653565b6106536001600160801b038616606086901b610ab5565b905061065e8161087a565b6106689087610a72565b915050610115565b60006001600160a01b0384111561069e5761069984600160601b876001600160801b031661054c565b6106bb565b6106bb606085901b6001600160801b038716808204910615150190565b905080866001600160a01b0316116107155760405162461bcd60e51b815260206004820152601e60248201527f7374617274696e67207078206d757374206265203e2071756f7469656e7400006044820152606401610201565b610668816001600160a01b038816610b1c565b600082610736575083610115565b600160601b600160e01b03606085901b1682156107e15760006001600160a01b038716856107648282610ad5565b92506107709083610ab5565b14156107ab5760006107828284610a9d565b90508281106107a95761079f83896001600160a01b03168361054c565b9350505050610115565b505b6107d882866107c36001600160a01b038b1683610ab5565b6107cd9190610a9d565b808204910615150190565b92505050610115565b60006001600160a01b038716856107f88282610ad5565b92506108049083610ab5565b14801561081057508082115b6108555760405162461bcd60e51b815260206004820152601660248201527564656e6f6d696e61746f7220756e646572666c6f777360501b6044820152606401610201565b60006108618284610b1c565b905061079f61087a848a6001600160a01b03168461054c565b806001600160a01b03811681146108cb5760405162461bcd60e51b815260206004820152601560248201527406f766572666c6f7720696e20746f55696e7431363605c1b6044820152606401610201565b919050565b803580151581146108cb57600080fd5b80356001600160801b03811681146108cb57600080fd5b80356001600160a01b03811681146108cb57600080fd5b60008060008060808587031215610923578384fd5b61092c856108f7565b935061093a602086016108e0565b92506040850135915061094f606086016108d0565b905092959194509250565b60008060006060848603121561096e578283fd5b610977846108f7565b9250610985602085016108f7565b9150604084013580600f0b811461099a578182fd5b809150509250925092565b600080600080608085870312156109ba578384fd5b6109c3856108f7565b93506109d1602086016108f7565b92506109df604086016108e0565b915061094f606086016108d0565b6020808252601a908201527907374617274696e67207072696365206d757374206265203e20360341b604082015260600190565b60208082526015908201527406c6971756964697479206d757374206265203e203605c1b604082015260600190565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b60006001600160a01b03828116848216808303821115610a9457610a94610b8e565b01949350505050565b60008219821115610ab057610ab0610b8e565b500190565b600082610ad057634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610aef57610aef610b8e565b500290565b60006001600160a01b0383811690831681811015610b1457610b14610b8e565b039392505050565b600082821015610b2e57610b2e610b8e565b500390565b6000600019821415610b4757610b47610b8e565b5060010190565b6000600f82900b60016001607f1b0319811415610b6d57610b6d610b8e565b9003919050565b6000600160ff1b821415610b8a57610b8a610b8e565b0390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b4ff9b9fd49efc0807cfa4bb753ae8b17c300ab085f6c534e35df20fe4244d5364736f6c63430008040033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): SqrtPriceMathTestInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SqrtPriceMathTest;
}
//# sourceMappingURL=SqrtPriceMathTest__factory.d.ts.map
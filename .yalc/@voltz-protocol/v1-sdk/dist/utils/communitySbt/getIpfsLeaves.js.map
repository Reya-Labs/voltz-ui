{"version":3,"file":"getIpfsLeaves.js","sourceRoot":"/","sources":["utils/communitySbt/getIpfsLeaves.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA0B;AAE1B,qCAA6C;AAE7C,SAAsB,YAAY,CAChC,QAAgB,EAChB,UAAyB;;;;;wBAEZ,qBAAM,eAAK,CAAC,GAAG,CAAC,IAAA,0BAAgB,EAAC,QAAQ,EAAE,UAAU,CAAC,EAAE;wBACnE,OAAO,EAAE;4BACP,MAAM,EAAE,KAAK;yBACd;qBACF,CAAC,EAAA;;oBAJI,IAAI,GAAG,SAIX;oBAEI,QAAQ,GAIT,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAElB,iBAAiB,GAAoB,QAAQ,CAAC,GAAG,CAAC,UAAC,KAAK;wBAC5D,OAAO;4BACL,OAAO,EAAE,KAAK,CAAC,KAAK;4BACpB,OAAO,EAAE,KAAK,CAAC,SAAS;yBACzB,CAAC;oBACJ,CAAC,CAAC,CAAC;oBAEH,sBAAO,iBAAiB,EAAC;;;;CAC1B;AAxBD,oCAwBC","sourcesContent":["import axios from 'axios';\nimport { LeafInfo } from '../../entities/communitySbt';\nimport { getLeavesIpfsUri } from './helpers';\n\nexport async function createLeaves(\n  seasonId: number,\n  leavesCids: Array<string>,\n): Promise<Array<LeafInfo>> {\n  const data = await axios.get(getLeavesIpfsUri(seasonId, leavesCids), {\n    headers: {\n      Accept: '*/*',\n    },\n  });\n\n  const snaphots: Array<{\n    owner: string;\n    badgeType: number;\n    metadataURI: string;\n  }> = data.data.snapshot;\n\n  const subgraphSnapshots: Array<LeafInfo> = snaphots.map((entry) => {\n    return {\n      account: entry.owner,\n      badgeId: entry.badgeType,\n    };\n  });\n\n  return subgraphSnapshots;\n}\n"]}
{"version":3,"file":"mapProtocolIdToProtocol.js","sourceRoot":"/","sources":["utils/mapProtocolIdToProtocol.ts"],"names":[],"mappings":";;AAAA,IAAM,uBAAuB,GAAG,UAAC,UAAkB;IACjD,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,SAAS,CAAC;KAClB;IAED,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,UAAU,CAAC;KACnB;IAED,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,MAAM,CAAC;KACf;IAED,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,QAAQ,CAAC;KACjB;IAED,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,aAAa,CAAC;KACtB;IAED,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,OAAO,iBAAiB,CAAC;KAC1B;IAED,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEF,kBAAe,uBAAuB,CAAC","sourcesContent":["const mapProtocolIdToProtocol = (protocolId: number): string => {\n  if (protocolId === 1) {\n    return 'AAVE V2';\n  }\n\n  if (protocolId === 2) {\n    return 'COMPOUND';\n  }\n\n  if (protocolId === 3) {\n    return 'LIDO';\n  }\n\n  if (protocolId === 4) {\n    return 'ROCKET';\n  }\n\n  if (protocolId === 5) {\n    return 'BORROW AAVE';\n  }\n\n  if (protocolId === 6) {\n    return 'BORROW COMPOUND';\n  }\n\n  throw new Error('Unrecognized protocol');\n};\n\nexport default mapProtocolIdToProtocol;\n"]}
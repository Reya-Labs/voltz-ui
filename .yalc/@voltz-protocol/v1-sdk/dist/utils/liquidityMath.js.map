{"version":3,"file":"liquidityMath.js","sourceRoot":"/","sources":["utils/liquidityMath.ts"],"names":[],"mappings":";;;;;;AAAA,8CAAwB;AACxB,0CAAkD;AAElD;IACE;;OAEG;IACH;IAAuB,CAAC;IAEV,sBAAQ,GAAtB,UAAuB,CAAO,EAAE,CAAO;QACrC,IAAI,cAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,gBAAI,CAAC,EAAE;YAC1B,OAAO,cAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,wBAAY,CAAC,CAAC,CAAC;SACzD;QACD,OAAO,cAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC;IACH,oBAAC;AAAD,CAAC,AAZD,IAYC;AAZqB,sCAAa","sourcesContent":["import JSBI from 'jsbi';\nimport { NEGATIVE_ONE, ZERO } from '../constants';\n\nexport abstract class LiquidityMath {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n\n  public static addDelta(x: JSBI, y: JSBI): JSBI {\n    if (JSBI.lessThan(y, ZERO)) {\n      return JSBI.subtract(x, JSBI.multiply(y, NEGATIVE_ONE));\n    }\n    return JSBI.add(x, y);\n  }\n}\n"]}
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockLidoOracle,
  MockLidoOracleInterface,
} from "../MockLidoOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MockStEth",
        name: "_mockStEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getBeaconSpec",
    outputs: [
      {
        internalType: "uint64",
        name: "epochsPerFrame",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "slotsPerEpoch",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondsPerSlot",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "genesisTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentFrame",
    outputs: [
      {
        internalType: "uint256",
        name: "frameEpochId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frameStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frameEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastCompletedEpochId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastCompletedReportDelta",
    outputs: [
      {
        internalType: "uint256",
        name: "postTotalPooledEther",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "preTotalPooledEther",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeElapsed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mockStEth",
    outputs: [
      {
        internalType: "contract MockStEth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526b033b2e3c9fd0803ce800000060005534801561002057600080fd5b5060405161041338038061041383398101604081905261003f91610064565b600180546001600160a01b0319166001600160a01b0392909216919091179055610094565b60006020828403121561007657600080fd5b81516001600160a01b038116811461008d57600080fd5b9392505050565b610370806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063534649c41461005c57806372f79b131461009557806376ea14d41461009d57806389896aef146100c8578063e547c77c146100de575b600080fd5b680579a814e10a74000068056bc75e2d63100000620151805b604080519384526020840192909252908201526060015b60405180910390f35b610075610104565b6001546100b0906001600160a01b031681565b6040516001600160a01b03909116815260200161008c565b6100d06101ae565b60405190815260200161008c565b60408051600180825260208201819052918101919091526000606082015260800161008c565b600080600080600160009054906101000a90046001600160a01b03166001600160a01b03166309471fa66040518163ffffffff1660e01b815260040160206040518083038186803b15801561015857600080fd5b505afa15801561016c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019091906102d2565b90506000816101a281620151806102eb565b93509350935050909192565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663faea0a1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ff57600080fd5b505afa158015610213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102379190610311565b90508015610246574291505090565b600160009054906101000a90046001600160a01b03166001600160a01b03166309471fa66040518163ffffffff1660e01b815260040160206040518083038186803b15801561029457600080fd5b505afa1580156102a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cc91906102d2565b91505090565b6000602082840312156102e457600080fd5b5051919050565b6000821982111561030c57634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561032357600080fd5b8151801515811461033357600080fd5b939250505056fea2646970667358221220d35fe066ef04367c92316ec9a4c4c1d6d80f40a809dc9b5d30fcf9994d71fb9564736f6c63430008090033";

export class MockLidoOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _mockStEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockLidoOracle> {
    return super.deploy(_mockStEth, overrides || {}) as Promise<MockLidoOracle>;
  }
  getDeployTransaction(
    _mockStEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mockStEth, overrides || {});
  }
  attach(address: string): MockLidoOracle {
    return super.attach(address) as MockLidoOracle;
  }
  connect(signer: Signer): MockLidoOracle__factory {
    return super.connect(signer) as MockLidoOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLidoOracleInterface {
    return new utils.Interface(_abi) as MockLidoOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLidoOracle {
    return new Contract(address, _abi, signerOrProvider) as MockLidoOracle;
  }
}

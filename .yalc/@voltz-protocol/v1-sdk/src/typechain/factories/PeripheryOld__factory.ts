/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PeripheryOld, PeripheryOldInterface } from "../PeripheryOld";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "MarginCap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "_lpMarginCaps",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "_lpMarginCumulatives",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
    ],
    name: "getCurrentTick",
    outputs: [
      {
        internalType: "int24",
        name: "currentTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtRatioAX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioBX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "notionalAmount",
        type: "uint256",
      },
    ],
    name: "getLiquidityForNotional",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
    ],
    name: "lpMarginCaps",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
    ],
    name: "lpMarginCumulatives",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "marginDelta",
            type: "int256",
          },
        ],
        internalType: "struct IPeripheryOld.MintOrBurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintOrBurn",
    outputs: [
      {
        internalType: "int256",
        name: "positionMarginRequirement",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "marginDelta",
            type: "int256",
          },
        ],
        internalType: "struct IPeripheryOld.MintOrBurnParams",
        name: "paramsNewPosition",
        type: "tuple",
      },
    ],
    name: "rolloverWithMint",
    outputs: [
      {
        internalType: "int256",
        name: "newPositionMarginRequirement",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "marginDelta",
            type: "uint256",
          },
        ],
        internalType: "struct IPeripheryOld.SwapPeripheryParams",
        name: "paramsNewPosition",
        type: "tuple",
      },
    ],
    name: "rolloverWithSwap",
    outputs: [
      {
        internalType: "int256",
        name: "_fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_fixedTokenDeltaUnbalanced",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "_tickAfter",
        type: "int24",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
      {
        internalType: "int256",
        name: "lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "setLPMarginCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
      {
        internalType: "int256",
        name: "lpMarginCumulative",
        type: "int256",
      },
    ],
    name: "setLPMarginCumulative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "settlePositionAndWithdrawMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "marginDelta",
            type: "uint256",
          },
        ],
        internalType: "struct IPeripheryOld.SwapPeripheryParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "int256",
        name: "_fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_fixedTokenDeltaUnbalanced",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "_tickAfter",
        type: "int24",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "marginDelta",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "fullyWithdraw",
        type: "bool",
      },
    ],
    name: "updatePositionMargin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002ca538038062002ca583398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612c09806200009c6000396000f3fe6080604052600436106100b85760003560e01c8063040a5dc1146100bd57806305b20d18146100f55780631b44093d146101305780632676938b1461015257806332e00daf1461018a57806334907e341461019d57806361b02452146101e0578063782085b51461021657806378f70b871461024c5780638d8e09831461025f578063a176459514610272578063c19be5951461029f578063e5a97cf0146102bf578063efa7c3d6146102ec578063f93964071461030c575b600080fd5b3480156100c957600080fd5b506100dd6100d83660046121a6565b61031f565b60405160029190910b81526020015b60405180910390f35b34801561010157600080fd5b506101226101103660046121a6565b60016020526000908152604090205481565b6040519081526020016100ec565b34801561013c57600080fd5b5061015061014b3660046121c3565b610411565b005b34801561015e57600080fd5b5061017261016d3660046121ef565b610539565b6040516001600160801b0390911681526020016100ec565b61012261019836600461233d565b61058c565b6101b06101ab366004612413565b610b3d565b604080519687526020870195909552938501929092526060840152608083015260020b60a082015260c0016100ec565b3480156101ec57600080fd5b506101226101fb3660046121a6565b6001600160a01b031660009081526002602052604090205490565b34801561022257600080fd5b506101226102313660046121a6565b6001600160a01b031660009081526001602052604090205490565b61012261025a36600461242f565b610fd4565b6101b061026d36600461249e565b611032565b34801561027e57600080fd5b50600054610292906001600160a01b031681565b6040516100ec9190612501565b3480156102ab57600080fd5b506101506102ba366004612515565b611075565b3480156102cb57600080fd5b506101226102da3660046121a6565b60026020526000908152604090205481565b3480156102f857600080fd5b506101506103073660046121c3565b6110ec565b61015061031a366004612571565b6111ce565b600080826001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561035b57600080fd5b505afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039391906125d9565b9050806001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156103ce57600080fd5b505afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040691906125f6565b602001519392505050565b816001600160a01b0381166104415760405162461bcd60e51b81526004016104389061267b565b60405180910390fd5b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047c57600080fd5b505afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b491906125d9565b9050336001600160a01b038216146104de5760405162461bcd60e51b8152600401610438906126a3565b6001600160a01b03841660009081526001602052604090819020849055517f359cd6003fbab20721d687a623408d04791a7b8de287826b2590c13db66f02fb9061052b90869086906126cc565b60405180910390a150505050565b6000826001600160a01b0316846001600160a01b03161115610559579192915b61058261057d83600160601b61056f88886126fb565b6001600160a01b03166117fe565b611911565b90505b9392505050565b60006105a08260200151836040015161197e565b600082600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061791906125d9565b835160208501516040808701519051634904f4dd60e11b81529394506000936001600160a01b0390931692639209e9ba92610656923392600401612723565b61014060405180830381600087803b15801561067157600080fd5b505af1158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a9919061276a565b9050600084600001516001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ea57600080fd5b505afa1580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072291906127ff565b90506000338487600001518860200151896040015160405160200161074b95949392919061281c565b60405160208183030381529060405280519060200120905060008084602001516001600160801b03161190508280156107815750805b156107af576000828152600360205260409020546107af576040808501516000848152600360205291909120555b6000856001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156107ea57600080fd5b505afa1580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082291906125f6565b805160208a01519192506001600160a01b031615159060009061084490611a43565b905060006108558b60400151611a43565b9050826108ef57600060028c604001518d60200151610874919061285c565b61087e91906128b9565b9050600061088b82611a43565b6040516323fbaf6f60e11b81529091506001600160a01b038c16906347f75ede906108ba908490600401612501565b600060405180830381600087803b1580156108d457600080fd5b505af11580156108e8573d6000803e3d6000fd5b5050505050505b60a08b01511515806109015750600034115b15610924576109248b600001518c602001518d604001518e60a0015160006111ce565b600061093583838e60600151610539565b905060009a508b60800151156109d85760208c01516040808e01519051635c6651a760e11b81526001600160a01b038d169263b8cca34e9261097f923392919087906004016128f3565b602060405180830381600087803b15801561099957600080fd5b505af11580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d19190612926565b9a50610a67565b60208c01516040808e01519051631f2f089360e01b81526001600160a01b038d1692631f2f089392610a12923392919087906004016128f3565b602060405180830381600087803b158015610a2c57600080fd5b505af1158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a649190612926565b9a505b8b5160208d01516040808f01519051634904f4dd60e11b81526001600160a01b0390931692639209e9ba92610aa0923392600401612723565b61014060405180830381600087803b158015610abb57600080fd5b505af1158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af3919061276a565b60208101519099506001600160801b03161515888015610b1757508680610b175750805b15610b2d57610b2d8b898c604001518a85611dd8565b5050505050505050505050919050565b600080600080600080610b5887608001518860a0015161197e565b600087600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b9757600080fd5b505afa158015610bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcf91906125d9565b9050876080015160020b6000148015610bed575060a088015160020b155b15610d5a576000816001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2d57600080fd5b505afa158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c65919061293f565b90506000826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610ca257600080fd5b505afa158015610cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda91906125f6565b90506000828260200151610cee919061295c565b90506000838360200151610d02919061285c565b905062010deb19600283900b1215610d1c5762010deb1991505b610d2962010deb196129a4565b60020b8160020b1315610d4657610d4362010deb196129a4565b90505b600291820b60808d0152900b60a08b015250505b60008860c001511180610d6d5750600034115b15610d9857610d98886000015189608001518a60a00151610d918c60c00151611f15565b60006111ce565b6000886020015115610db857610db18960400151611f15565b9050610dd1565b610dc58960400151611f15565b610dce906129c7565b90505b60006040518060a00160405280336001600160a01b031681526020018381526020018b606001516001600160a01b0316600014610e12578b60600151610e50565b8b6020015115610e3957610e3460016c1fa71f3f5f68a90479ee3f8fec6126fb565b610e50565b610e506b0816769404766de590afe04e60016129e4565b6001600160a01b031681526020018b6080015160020b81526020018b60a0015160020b8152509050826001600160a01b03166367758e6e826040518263ffffffff1660e01b8152600401610eeb9190600060a08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160020b6060830152608083015160020b608083015292915050565b60a060405180830381600087803b158015610f0557600080fd5b505af1158015610f19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3d9190612a0f565b809950819a50829b50839c50849d505050505050826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610f8a57600080fd5b505afa158015610f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc291906125f6565b60200151935050505091939550919395565b600081608001516110135760405162461bcd60e51b81526020600482015260096024820152681bdb9b1e481b5a5b9d60ba1b6044820152606401610438565b61101f86868686611075565b6110288261058c565b9695505050505050565b6000806000806000806110478b8b8b8b611075565b61105087610b3d565b809650819750829850839950849a50859b505050505050509550955095509550955095565b60405163a725b96560e01b81526001600160a01b0385169063a725b965906110a590869086908690600401612723565b600060405180830381600087803b1580156110bf57600080fd5b505af11580156110d3573d6000803e3d6000fd5b505050506110e6848383600060016111ce565b50505050565b816001600160a01b0381166111135760405162461bcd60e51b81526004016104389061267b565b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561114e57600080fd5b505afa158015611162573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118691906125d9565b9050336001600160a01b038216146111b05760405162461bcd60e51b8152600401610438906126a3565b50506001600160a01b03909116600090815260026020526040902055565b604051634904f4dd60e11b81526000906001600160a01b03871690639209e9ba9061120190339089908990600401612723565b61014060405180830381600087803b15801561121c57600080fd5b505af1158015611230573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611254919061276a565b90506000866001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b15801561129157600080fd5b505afa1580156112a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c991906127ff565b90506000876001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561130657600080fd5b505afa15801561131a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133e91906125d9565b9050600033828a8a8a60405160200161135b95949392919061281c565b60405160208183030381529060405280519060200120905082801561138d5750600084602001516001600160801b0316115b156113bb576000818152600360205260409020546113bb576040808501516000838152600360205291909120555b6000896001600160a01b0316632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b1580156113f657600080fd5b505afa15801561140a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142e91906125d9565b90508515611447578460400151611444906129c7565b96505b6000546001600160a01b03828116911614156116365760008712156114cf57604051637717797f60e01b81526001600160a01b038b1690637717797f906114989033908d908d908d90600401612a4f565b600060405180830381600087803b1580156114b257600080fd5b505af11580156114c6573d6000803e3d6000fd5b5050505061173c565b60008713156114f8576114f833306114e68a611f7f565b6001600160a01b038516929190611fd1565b341561157b5760008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561154c57600080fd5b505af1158015611560573d6000803e3d6000fd5b505050505061156e34611f15565b6115789088612a79565b96505b806001600160a01b031663095ea7b38b6115948a611f7f565b6040518363ffffffff1660e01b81526004016115b19291906126cc565b602060405180830381600087803b1580156115cb57600080fd5b505af11580156115df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160391906127ff565b50604051637717797f60e01b81526001600160a01b038b1690637717797f906114989033908d908d908d90600401612a4f565b60008713156116d75761164d33306114e68a611f7f565b806001600160a01b031663095ea7b38b6116668a611f7f565b6040518363ffffffff1660e01b81526004016116839291906126cc565b602060405180830381600087803b15801561169d57600080fd5b505af11580156116b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d591906127ff565b505b604051637717797f60e01b81526001600160a01b038b1690637717797f906117099033908d908d908d90600401612a4f565b600060405180830381600087803b15801561172357600080fd5b505af1158015611737573d6000803e3d6000fd5b505050505b604051634904f4dd60e11b81526001600160a01b038b1690639209e9ba9061176c9033908d908d90600401612723565b61014060405180830381600087803b15801561178757600080fd5b505af115801561179b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bf919061276a565b94508380156117db5750600085602001516001600160801b0316115b156117f2576117f283838760400151600180611dd8565b50505050505050505050565b60008080600019858709858702925082811083820303915050806000141561186e57600084116118635760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b6044820152606401610438565b508290049050610585565b8084116118a85760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b6044820152606401610438565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006001600160801b0382111561197a5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610438565b5090565b8060020b8260020b126119b95760405162461bcd60e51b8152602060048201526003602482015262544c5560e81b6044820152606401610438565b62010deb19600283900b12156119f75760405162461bcd60e51b8152602060048201526003602482015262544c4d60e81b6044820152606401610438565b611a0462010deb196129a4565b60020b8160020b1315611a3f5760405162461bcd60e51b815260206004820152600360248201526254554d60e81b6044820152606401610438565b5050565b60008060008360020b12611a5a578260020b611a67565b8260020b611a67906129c7565b9050611a7662010deb196129a4565b60020b811115611aac5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610438565b600060018216611ac057600160801b611ad2565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b031690506002821615611b07576080611b02826ffff97272373d413259a46990580e213a612aba565b901c90505b6004821615611b31576080611b2c826ffff2e50f5f656932ef12357cf3c7fdcc612aba565b901c90505b6008821615611b5b576080611b56826fffe5caca7e10e4e61c3624eaa0941cd0612aba565b901c90505b6010821615611b85576080611b80826fffcb9843d60f6159c9db58835c926644612aba565b901c90505b6020821615611baf576080611baa826fff973b41fa98c081472e6896dfb254c0612aba565b901c90505b6040821615611bd9576080611bd4826fff2ea16466c96a3843ec78b326b52861612aba565b901c90505b6080821615611c03576080611bfe826ffe5dee046a99a2a811c461f1969c3053612aba565b901c90505b610100821615611c2e576080611c29826ffcbe86c7900a88aedcffc83b479aa3a4612aba565b901c90505b610200821615611c59576080611c54826ff987a7253ac413176f2b074cf7815e54612aba565b901c90505b610400821615611c84576080611c7f826ff3392b0822b70005940c7a398e4b70f3612aba565b901c90505b610800821615611caf576080611caa826fe7159475a2c29b7443b29c7fa6e889d9612aba565b901c90505b611000821615611cda576080611cd5826fd097f3bdfd2022b8845ad8f792aa5825612aba565b901c90505b612000821615611d05576080611d00826fa9f746462d870fdf8a65dc1f90e061e5612aba565b901c90505b614000821615611d30576080611d2b826f70d869a156d2a1b890bb3df62baf32f7612aba565b901c90505b618000821615611d5b576080611d56826f31be135f97d08fd981231505542fcfa6612aba565b901c90505b62010000821615611d87576080611d82826f09aa508b5b7a84e1c677de54f3e99bc9612aba565b901c90505b60008460020b1315611da257611d9f81600019612ad9565b90505b611db0600160201b82612aed565b15611dbc576001611dbf565b60005b611dd09060ff16602083901c612b01565b949350505050565b8015611e5b576000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611e14908490612b19565b909155505060008481526003602090815260408083208690556001600160a01b0388168352600290915281208054859290611e50908490612a79565b90915550611eac9050565b8115611eac576000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611e97908490612b19565b90915550506000848152600360205260408120555b6001600160a01b0385166000908152600160209081526040808320546002909252909120541315611f0e5760405162461bcd60e51b815260206004820152600c60248201526b1b1c0818d85c081b1a5b5a5d60a21b6044820152606401610438565b5050505050565b60006001600160ff1b0382111561197a5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610438565b60008082121561197a5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610438565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091018252602080820180516001600160e01b03166323b872dd60e01b1790528251808401909352600783526629aa261032b93960c91b908301526110e69186919060009061205290849084906120ac565b8051909150156120a7578080602001905181019061207091906127ff565b6120a75760405162461bcd60e51b815260206004820152600860248201526714d5130819985a5b60c21b6044820152606401610438565b505050565b6060833b6120eb5760405162461bcd60e51b815260206004820152600c60248201526b1b9bdb8b58dbdb9d1c9858dd60a21b6044820152606401610438565b600080856001600160a01b03166000866040516121089190612b84565b60006040518083038185875af1925050503d8060008114612145576040519150601f19603f3d011682016040523d82523d6000602084013e61214a565b606091505b509150915061102882828660608315612164575081610585565b8251156121745782518084602001fd5b8160405162461bcd60e51b81526004016104389190612ba0565b6001600160a01b03811681146121a357600080fd5b50565b6000602082840312156121b857600080fd5b81356105858161218e565b600080604083850312156121d657600080fd5b82356121e18161218e565b946020939093013593505050565b60008060006060848603121561220457600080fd5b833561220f8161218e565b9250602084013561221f8161218e565b929592945050506040919091013590565b60405161014081016001600160401b038111828210171561226157634e487b7160e01b600052604160045260246000fd5b60405290565b8060020b81146121a357600080fd5b803561228181612267565b919050565b80151581146121a357600080fd5b600060c082840312156122a657600080fd5b60405160c081016001600160401b03811182821017156122d657634e487b7160e01b600052604160045260246000fd5b60405290508082356122e78161218e565b815260208301356122f781612267565b6020820152604083013561230a81612267565b604082015260608381013590820152608083013561232781612286565b608082015260a092830135920191909152919050565b600060c0828403121561234f57600080fd5b6105858383612294565b600060e0828403121561236b57600080fd5b60405160e081016001600160401b038111828210171561239b57634e487b7160e01b600052604160045260246000fd5b60405290508082356123ac8161218e565b815260208301356123bc81612286565b60208201526040838101359082015260608301356123d98161218e565b606082015260808301356123ec81612267565b60808201526123fd60a08401612276565b60a082015260c083013560c08201525092915050565b600060e0828403121561242557600080fd5b6105858383612359565b6000806000806000610140868803121561244857600080fd5b85356124538161218e565b945060208601356124638161218e565b9350604086013561247381612267565b9250606086013561248381612267565b91506124928760808801612294565b90509295509295909350565b600080600080600061016086880312156124b757600080fd5b85356124c28161218e565b945060208601356124d28161218e565b935060408601356124e281612267565b925060608601356124f281612267565b91506124928760808801612359565b6001600160a01b0391909116815260200190565b6000806000806080858703121561252b57600080fd5b84356125368161218e565b935060208501356125468161218e565b9250604085013561255681612267565b9150606085013561256681612267565b939692955090935050565b600080600080600060a0868803121561258957600080fd5b85356125948161218e565b945060208601356125a481612267565b935060408601356125b481612267565b92506060860135915060808601356125cb81612286565b809150509295509295909350565b6000602082840312156125eb57600080fd5b81516105858161218e565b60006060828403121561260857600080fd5b604051606081016001600160401b038111828210171561263857634e487b7160e01b600052604160045260246000fd5b60405282516126468161218e565b8152602083015161265681612267565b6020820152604083015160ff8116811461266f57600080fd5b60408201529392505050565b6020808252600e908201526d76616d6d2061646472207a65726f60901b604082015260600190565b6020808252600f908201526e37b7363c903b30b6b69037bbb732b960891b604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b038381169083168181101561271b5761271b6126e5565b039392505050565b6001600160a01b03939093168352600291820b6020840152900b604082015260600190565b805161228181612286565b80516001600160801b038116811461228157600080fd5b6000610140828403121561277d57600080fd5b612785612230565b61278e83612748565b815261279c60208401612753565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b60006020828403121561281157600080fd5b815161058581612286565b6001600160601b0319606096871b8116825294861b851660148201529290941b909216602882015260e891821b603c82015291901b603f82015260420190565b60008160020b8360020b6000821282627fffff03821381151615612882576128826126e5565b82627fffff1903821281161561289a5761289a6126e5565b50019392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806128d0576128d06128a3565b627fffff198214600019821416156128ea576128ea6126e5565b90059392505050565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260800190565b60006020828403121561293857600080fd5b5051919050565b60006020828403121561295157600080fd5b815161058581612267565b60008160020b8360020b6000811281627fffff1901831281151615612983576129836126e5565b81627fffff01831381161561299a5761299a6126e5565b5090039392505050565b60008160020b627fffff198114156129be576129be6126e5565b60000392915050565b6000600160ff1b8214156129dd576129dd6126e5565b5060000390565b60006001600160a01b03828116848216808303821115612a0657612a066126e5565b01949350505050565b600080600080600060a08688031215612a2757600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6001600160a01b03949094168452600292830b6020850152910b6040830152606082015260800190565b600080821280156001600160ff1b0384900385131615612a9b57612a9b6126e5565b600160ff1b8390038412811615612ab457612ab46126e5565b50500190565b6000816000190483118215151615612ad457612ad46126e5565b500290565b600082612ae857612ae86128a3565b500490565b600082612afc57612afc6128a3565b500690565b60008219821115612b1457612b146126e5565b500190565b60008083128015600160ff1b850184121615612b3757612b376126e5565b6001600160ff1b0384018313811615612b5257612b526126e5565b50500390565b60005b83811015612b73578181015183820152602001612b5b565b838111156110e65750506000910152565b60008251612b96818460208701612b58565b9190910192915050565b6020815260008251806020840152612bbf816040850160208701612b58565b601f01601f1916919091016040019291505056fea264697066735822122069a1836854dccda128d3bd1e50bc3f8e26c5481634a17e309031bf336b53ca4964736f6c63430008090033";

export class PeripheryOld__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PeripheryOld> {
    return super.deploy(weth_, overrides || {}) as Promise<PeripheryOld>;
  }
  getDeployTransaction(
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth_, overrides || {});
  }
  attach(address: string): PeripheryOld {
    return super.attach(address) as PeripheryOld;
  }
  connect(signer: Signer): PeripheryOld__factory {
    return super.connect(signer) as PeripheryOld__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeripheryOldInterface {
    return new utils.Interface(_abi) as PeripheryOldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PeripheryOld {
    return new Contract(address, _abi, signerOrProvider) as PeripheryOld;
  }
}

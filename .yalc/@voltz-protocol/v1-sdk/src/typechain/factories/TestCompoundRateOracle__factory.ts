/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestCompoundRateOracle,
  TestCompoundRateOracleInterface,
} from "../TestCompoundRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ctoken",
    outputs: [
      {
        internalType: "contract ICToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200374d3803806200374d833981016040819052620000359162000925565b60408051600080825260208201908152818301909252849184918491836200005d336200022b565b6001600160a01b0390811660805285811660a081905260408051636f307dc360e01b8152905192871692636f307dc391600480820192602092909190829003018186803b158015620000ae57600080fd5b505afa158015620000c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e9919062000994565b6001600160a01b031614620001455760405162461bcd60e51b815260206004820152601360248201527f546f6b656e7320646f206e6f74206d617463680000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0384166200019d5760405162461bcd60e51b815260206004820152601560248201527f756e6465726c79696e67206d757374206578697374000000000000000000000060448201526064016200013c565b60ff831660c081905260111115620001b7576000620001d5565b601160c051620001c89190620009d1565b620001d590600a62000af4565b60e05260c051601160ff90911610620001f05760006200020d565b60c05162000200906011620009d1565b6200020d90600a62000af4565b610100526200021d82826200027b565b505050505050505062000c56565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200028a600261ffff62000b05565b825110620002ac5760405162461bcd60e51b81526004016200013c9062000b28565b8151815161ffff821614620002d55760405162461bcd60e51b81526004016200013c9062000b46565b6000620002e482600162000b72565b61ffff166001600160401b038111156200030257620003026200097e565b6040519080825280602002602001820160405280156200032c578160200160208202803683370190505b50905060006200033e83600162000b72565b61ffff166001600160401b038111156200035c576200035c6200097e565b60405190808252806020026020018201604052801562000386578160200160208202803683370190505b50905060005b8361ffff168110156200043757858181518110620003ae57620003ae62000b9b565b6020026020010151838281518110620003cb57620003cb62000b9b565b602002602001019063ffffffff16908163ffffffff1681525050848181518110620003fa57620003fa62000b9b565b602002602001015182828151811062000417576200041762000b9b565b6020908102919091010152806200042e8162000bb1565b9150506200038c565b506200044d6200050b60201b62000c2a1760201c565b828461ffff168151811062000466576200046662000b9b565b63ffffffff90921660209283029190910190910152620004856200051d565b818461ffff16815181106200049e576200049e62000b9b565b602002602001018181525050620004c782826004620005ee60201b62000c3a179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff19909216959093169490941793909317919091161790555050505050565b6000620005184262000833565b905090565b60008060a0516001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200055c57600080fd5b505afa15801562000571573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000597919062000bcf565b905080620005b8576040516324988a7b60e01b815260040160405180910390fd5b601160ff1660c05160ff1610620005de5760e051620005d8908262000b05565b91505090565b61010051620005d8908262000be9565b600080600061ffff855110620006185760405162461bcd60e51b81526004016200013c9062000b28565b8451845161ffff821614620006415760405162461bcd60e51b81526004016200013c9062000b46565b60008161ffff16116200067c5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016200013c565b6000805b8261ffff168161ffff1610156200081257878161ffff1681518110620006aa57620006aa62000b9b565b602002602001015163ffffffff168263ffffffff1610620007005760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016200013c565b62000752888261ffff16815181106200071d576200071d62000b9b565b6020026020010151888361ffff16815181106200073e576200073e62000b9b565b60200260200101516200087a60201b60201c565b898261ffff1661ffff81106200076c576200076c62000b9b565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff8316908110620007f257620007f262000b9b565b602002602001015191508080620008099062000c0b565b91505062000680565b5081806200082260018262000c30565b945094509450505093509350939050565b8063ffffffff81168114620008755760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016200013c565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620008d95760405162461bcd60e51b81526004016200013c906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff841681526001600160d81b03831660208201526001918101919091525b92915050565b6001600160a01b03811681146200092257600080fd5b50565b6000806000606084860312156200093b57600080fd5b835162000948816200090c565b60208501519093506200095b816200090c565b604085015190925060ff811681146200097357600080fd5b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215620009a757600080fd5b8151620009b4816200090c565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff841680821015620009ee57620009ee620009bb565b90039392505050565b600181815b8085111562000a3857816000190482111562000a1c5762000a1c620009bb565b8085161562000a2a57918102915b93841c9390800290620009fc565b509250929050565b60008262000a515750600162000906565b8162000a605750600062000906565b816001811462000a79576002811462000a845762000aa4565b600191505062000906565b60ff84111562000a985762000a98620009bb565b50506001821b62000906565b5060208310610133831016604e8410600b841016171562000ac9575081810a62000906565b62000ad58383620009f7565b806000190482111562000aec5762000aec620009bb565b029392505050565b6000620009b460ff84168362000a40565b60008262000b2357634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000b925762000b92620009bb565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000bc85762000bc8620009bb565b5060010190565b60006020828403121562000be257600080fd5b5051919050565b600081600019048311821515161562000c065762000c06620009bb565b500290565b600061ffff8083168181141562000c265762000c26620009bb565b6001019392505050565b600061ffff8381169083168181101562000c4e5762000c4e620009bb565b039392505050565b60805160a05160c05160e05161010051612aa462000ca96000396000610a5e01526000610a2e0152600081816102050152610a020152600081816103c3015261094f015260006102c50152612aa46000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c806301320aad1461014e5780631195082e1461016957806322ff656814610194578063252c09d7146101ae57806325f258dd146101ed578063313ce5671461020057806332148f67146102275780633c155bd51461023c578063414535281461026457806354124c641461027757806356da97751461028a5780636e035c05146102ad5780636f307dc3146102c0578063715018a6146102ff5780637aa4db13146103075780637cf2cc9f1461030f5780638da5cb5b1461031857806393556dbd1461032057806395f3e60514610333578063bdb0509214610354578063c330c98d14610367578063c7db359b14610376578063ccf3eb9f146103be578063e9b69c0d146103e5578063efdf5d8b146103f8578063f2fde38b14610400578063f739670c14610413575b600080fd5b610156610426565b6040519081526020015b60405180910390f35b610156610177366004612762565b600160209081526000928352604080842090915290825290205481565b61019c600281565b60405160ff9091168152602001610160565b6101c16101bc366004612795565b61048d565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610160565b6101566101fb3660046127ae565b6104c7565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6102353660046127d0565b61053e565b005b61024f61024a3660046127d0565b6105c3565b60408051928352602083019190915201610160565b6101566102723660046127ae565b610630565b6101566102853660046127f4565b610644565b61029d6102983660046127ae565b610699565b6040519015158152602001610160565b6101566102bb3660046127ae565b6106ff565b6102e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610160565b61023a610712565b61023a610756565b61015660025481565b6102e76107a3565b61015661032e3660046127ae565b6107b2565b610346610341366004612820565b610842565b604051610160929190612865565b61023a610362366004612795565b61087a565b610156670de0b6b3a764000081565b6003546103999061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610160565b6102e77f000000000000000000000000000000000000000000000000000000000000000081565b61024f6103f3366004612820565b6108ee565b61015661094a565b61023a61040e366004612880565b610a83565b6101566104213660046127ae565b610b20565b600354600090819060049061ffff908116908110610446576104466128a9565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60048161ffff811061049e57600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104d48484610e7d565b909250905080156105365760006104f4670de0b6b3a76400008604610fbb565b9050600061050b670de0b6b3a76400008604610fbb565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff16600061055a60048385611000565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146105be5760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff81106105e0576105e06128a9565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b600061063c8383610e7d565b509392505050565b600080610650836110f2565b90506000610666670de0b6b3a7640000866128d5565b905060006106748284611109565b9050600061068182611148565b905061068d8882611172565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826106c08584611172565b905060006106ce8684611172565b90508187111580156106e05750808710155b156106f2576001945050505050610538565b6000945050505050610538565b600061070b8383611180565b9392505050565b3361071b6107a3565b6001600160a01b03161461074a5760405162461bcd60e51b8152600401610741906128ed565b60405180910390fd5b61075460006111e5565b565b60035461077b9061ffff80821691620100008104821691600160201b90910416611235565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156107f75760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b6044820152606401610741565b60006108038484610b20565b905060006108118585612922565b9050600061081e82611367565b9050600061082b826110f2565b90506108378482611180565b979650505050505050565b61084a61272e565b61085261272e565b60035461087190600490859061ffff80821691620100009004166113b4565b91509150915091565b336108836107a3565b6001600160a01b0316146108a95760405162461bcd60e51b8152600401610741906128ed565b80600254146108eb5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006108fb61094a565b90506000806109298661090c610c2a565b6003546004929190879061ffff8082169162010000900416611566565b6020918201519101516001600160d81b039182169891169650945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a657600080fd5b505afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de9190612939565b9050806109fe576040516324988a7b60e01b815260040160405180910390fd5b60117f000000000000000000000000000000000000000000000000000000000000000060ff1610610a5957610a537f000000000000000000000000000000000000000000000000000000000000000082612968565b91505090565b610a537f00000000000000000000000000000000000000000000000000000000000000008261297c565b33610a8c6107a3565b6001600160a01b031614610ab25760405162461bcd60e51b8152600401610741906128ed565b6001600160a01b038116610b175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610741565b6108eb816111e5565b600081831115610b5e5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610741565b81831415610b6e57506000610538565b6000610b78610c2a565b90506000610b8585610fbb565b90506000610b9285610fbb565b600354909150600090610bb6908590859061ffff8082169162010000900416611719565b600354909150600090610bda908690859061ffff8082169162010000900416611719565b905081811115610c1c576000610c0e676765c793fa10079d601b1b610bff8486611965565b610c099190612922565b611973565b965061053895505050505050565b600095505050505050610538565b6000610c3542610fbb565b905090565b600080600061ffff855110610c7a5760405162461bcd60e51b8152600401610741906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610cc55760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610741565b60008161ffff1611610cfe5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610741565b6000805b8261ffff168161ffff161015610e5e57878161ffff1681518110610d2857610d286128a9565b602002602001015163ffffffff168263ffffffff1610610d7c5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610741565b610dc0888261ffff1681518110610d9557610d956128a9565b6020026020010151888361ffff1681518110610db357610db36128a9565b60200260200101516119ff565b898261ffff1661ffff8110610dd757610dd76128a9565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610e4157610e416128a9565b602002602001015191508080610e569061299b565b915050610d02565b508180610e6c6001826129bd565b945094509450505093509350939050565b60008080610e94670de0b6b3a76400008604610fbb565b90506000610eab670de0b6b3a76400008604610fbb565b905060008263ffffffff16118015610ec9575060008163ffffffff16115b610efd5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610741565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610f535763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610fb2565b8063ffffffff16610f62610c2a565b63ffffffff1610610f8e57610f838263ffffffff168263ffffffff16610b20565b935060019250610fb2565b610fab8263ffffffff16610fa0610c2a565b63ffffffff16610b20565b9350600092505b50509250929050565b8063ffffffff81168114610ffb5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610741565b919050565b6000808361ffff16116110395760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610741565b61ffff8261ffff161061107d5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610741565b8261ffff168261ffff161161109357508161070b565b825b8261ffff168161ffff1610156110e9576001858261ffff1661ffff81106110be576110be6128a9565b01805463ffffffff191663ffffffff92909216919091179055806110e18161299b565b915050611095565b50909392505050565b6000610538826a1a1601fc4ea7109e000000611a77565b60008261112e57811561111d576000611127565b670de0b6b3a76400005b9050610538565b61070b61114361113d85611a8c565b84611b3c565b611b48565b600080611168670de0b6b3a7640000676765c793fa10079d601b1b612968565b61070b908461297c565b600061070b83836001611b8e565b60008261118f57506000610538565b60006111a461119e6001611367565b84611a77565b905060006111c6856111b66001611367565b6111c091906128d5565b83611109565b90506111d26001611367565b6111dc9082612922565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110611252576112526128a9565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b909104161515908201529050600061129c610c2a565b9050816000015163ffffffff166002548263ffffffff166112bd9190612922565b10156112d057868693509350505061135f565b60006112da61094a565b90507f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611305611c41565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161135760048984848b8b611c4c565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156113a657604051633492ffd960e01b815260048101839052602401610741565b50670de0b6b3a76400000290565b6113bc61272e565b6113c461272e565b6000836113d28660016129e0565b6113dc9190612a06565b61ffff169050600060018561ffff16836113f691906128d5565b6114009190612922565b905060005b600161141183856128d5565b901c90508861142461ffff881683612a27565b61ffff8110611435576114356128a9565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff161515918101829052955061148c576114858160016128d5565b9250611405565b8861ffff871661149d8360016128d5565b6114a79190612a27565b61ffff81106114b8576114b86128a9565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906115245750846000015163ffffffff168963ffffffff1611155b1561152f575061155a565b806115465761153f600183612922565b9250611554565b6115518260016128d5565b93505b50611405565b50505094509492505050565b61156e61272e565b61157661272e565b878461ffff1661ffff811061158d5761158d6128a9565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509088161061160c578663ffffffff16826000015163ffffffff1614156115f85761170e565b8161160387876119ff565b9150915061170e565b87836116198660016129e0565b6116239190612a06565b61ffff1661ffff8110611638576116386128a9565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506116bd5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff808916911611156116fd5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610741565b611709888886866113b4565b915091505b965096945050505050565b60008363ffffffff168563ffffffff16101561174857604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff1614156117f05761176461272e565b60048461ffff1661ffff811061177c5761177c6128a9565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146117d9576117d261094a565b91506117ea565b80602001516001600160d81b031691505b5061195d565b60006117fa61094a565b905060008061180e6004888a868a8a611566565b91509150816000015163ffffffff168763ffffffff16141561183f5781602001516001600160d81b03169350611959565b805163ffffffff888116911614156118665780602001516001600160d81b03169350611959565b600082602001516001600160d81b031682602001516001600160d81b031611156118d5576000676765c793fa10079d601b1b6118bc84602001516001600160d81b031686602001516001600160d81b0316611965565b6118c69190612922565b90506118d181611973565b9150505b8251825160009161190891670de0b6b3a7640000916118f391612a3b565b63ffffffff16611903919061297c565b6110f2565b905060006119168383611180565b905061195385602001516001600160d81b031682670de0b6b3a764000088600001518e6119439190612a3b565b63ffffffff16610285919061297c565b96505050505b5050505b949350505050565b600061070b83836001611d93565b600080611993670de0b6b3a7640000676765c793fa10079d601b1b612968565b61199d9084612968565b905060026119be670de0b6b3a7640000676765c793fa10079d601b1b612968565b6119c89190612968565b6119e5670de0b6b3a7640000676765c793fa10079d601b1b612968565b6119ef9085612a27565b106105385761070b6001826128d5565b611a0761272e565b6001600160d81b03821115611a475760405162461bcd60e51b8152600401610741906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061070b83670de0b6b3a764000084611e2e565b6000670de0b6b3a7640000821015611aba57604051633621413760e21b815260048101839052602401610741565b6000611acf670de0b6b3a76400008404611efc565b670de0b6b3a7640000808202935090915083821c90811415611af2575050919050565b6706f05b59d3b200005b8015611b3457670de0b6b3a7640000828002049150671bc16d674ec800008210611b2c579283019260019190911c905b60011c611afc565b505050919050565b600061070b8383611fda565b6000680a688906bd8b0000008210611b7657604051634a4f26f160e01b815260048101839052602401610741565b670de0b6b3a7640000604083901b0461070b8161209c565b6000831580611b9b575082155b15611ba85750600061070b565b6001826001811115611bbc57611bbc612a58565b14611bcf57670de0b6b3a7640000611bdc565b676765c793fa10079d601b1b5b6001836001811115611bf057611bf0612a58565b14611c0d57611c086002670de0b6b3a7640000612968565b611c23565b611c236002676765c793fa10079d601b1b612968565b611c2d858761297c565b611c3791906128d5565b61195d9190612968565b6000610c3542611367565b6000806000888861ffff1661ffff8110611c6857611c686128a9565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611cc3578785925092505061170e565b8461ffff168461ffff16118015611ceb5750611ce06001866129bd565b61ffff168861ffff16145b15611cf857839150611cfc565b8491505b81611d088960016129e0565b611d129190612a06565b9250611d1e87876119ff565b898461ffff1661ffff8110611d3557611d356128a9565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b600082611dcb5760405162461bcd60e51b8152600401610741906020808252600490820152630444956360e41b604082015260600190565b6000611dd8600285612968565b905083816001856001811115611df057611df0612a58565b14611e0357670de0b6b3a7640000611e10565b676765c793fa10079d601b1b5b611e1a908861297c565b611e2491906128d5565b6111dc9190612968565b600080806000198587098587029250828110838203039150508060001415611e6957838281611e5f57611e5f612952565b049250505061070b565b838110611e9357604051631dcf306360e21b81526004810182905260248101859052604401610741565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611f1c57608091821c91611f1990826128d5565b90505b600160401b8210611f3a57604091821c91611f3790826128d5565b90505b600160201b8210611f5857602091821c91611f5590826128d5565b90505b620100008210611f7557601091821c91611f7290826128d5565b90505b6101008210611f9157600891821c91611f8e90826128d5565b90505b60108210611fac57600491821c91611fa990826128d5565b90505b60048210611fc757600291821c91611fc490826128d5565b90505b60028210610ffb576105386001826128d5565b60008080600019848609848602925082811083820303915050670de0b6b3a7640000811061201e5760405163698d9a0160e11b815260048101829052602401610741565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826120585780670de0b6b3a7640000850401945050505050610538565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156120bc5768016a09e667f3bcc9090260401c5b6001603e1b8216156120d7576801306fe0a31b7152df0260401c5b6001603d1b8216156120f2576801172b83c7d517adce0260401c5b6001603c1b82161561210d5768010b5586cf9890f62a0260401c5b6001603b1b821615612128576801059b0d31585743ae0260401c5b6001603a1b82161561214357680102c9a3e778060ee70260401c5b600160391b82161561215e5768010163da9fb33356d80260401c5b600160381b82161561217957680100b1afa5abcbed610260401c5b600160371b8216156121945768010058c86da1c09ea20260401c5b600160361b8216156121af576801002c605e2e8cec500260401c5b600160351b8216156121ca57680100162f3904051fa10260401c5b600160341b8216156121e5576801000b175effdc76ba0260401c5b600160331b82161561220057680100058ba01fb9f96d0260401c5b600160321b82161561221b5768010002c5cc37da94920260401c5b600160311b821615612236576801000162e525ee05470260401c5b600160301b8216156122515768010000b17255775c040260401c5b6001602f1b82161561226c576801000058b91b5bc9ae0260401c5b6001602e1b82161561228757680100002c5c89d5ec6d0260401c5b6001602d1b8216156122a25768010000162e43f4f8310260401c5b6001602c1b8216156122bd57680100000b1721bcfc9a0260401c5b6001602b1b8216156122d85768010000058b90cf1e6e0260401c5b6001602a1b8216156122f3576801000002c5c863b73f0260401c5b600160291b82161561230e57680100000162e430e5a20260401c5b600160281b821615612329576801000000b1721835510260401c5b600160271b82161561234457680100000058b90c0b490260401c5b600160261b82161561235f5768010000002c5c8601cc0260401c5b600160251b82161561237a576801000000162e42fff00260401c5b600160241b8216156123955768010000000b17217fbb0260401c5b600160231b8216156123b0576801000000058b90bfce0260401c5b600160221b8216156123cb57680100000002c5c85fe30260401c5b600160211b8216156123e65768010000000162e42ff10260401c5b600160201b82161561240157680100000000b17217f80260401c5b638000000082161561241c5768010000000058b90bfc0260401c5b6340000000821615612437576801000000002c5c85fe0260401c5b632000000082161561245257680100000000162e42ff0260401c5b631000000082161561246d576801000000000b17217f0260401c5b630800000082161561248857680100000000058b90c00260401c5b63040000008216156124a35768010000000002c5c8600260401c5b63020000008216156124be576801000000000162e4300260401c5b63010000008216156124d95768010000000000b172180260401c5b628000008216156124f3576801000000000058b90c0260401c5b6240000082161561250d57680100000000002c5c860260401c5b622000008216156125275768010000000000162e430260401c5b6210000082161561254157680100000000000b17210260401c5b6208000082161561255b5768010000000000058b910260401c5b62040000821615612575576801000000000002c5c80260401c5b6202000082161561258f57680100000000000162e40260401c5b620100008216156125a85761b172600160401b010260401c5b6180008216156125c0576158b9600160401b010260401c5b6140008216156125d857612c5d600160401b010260401c5b6120008216156125f05761162e600160401b010260401c5b61100082161561260857610b17600160401b010260401c5b6108008216156126205761058c600160401b010260401c5b610400821615612638576102c6600160401b010260401c5b61020082161561265057610163600160401b010260401c5b6101008216156126675760b1600160401b010260401c5b608082161561267d576059600160401b010260401c5b604082161561269357602c600160401b010260401c5b60208216156126a9576016600160401b010260401c5b60108216156126bf57600b600160401b010260401c5b60088216156126d5576006600160401b010260401c5b60048216156126eb576003600160401b010260401c5b6002821615612701576001600160401b010260401c5b6001821615612717576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610ffb57600080fd5b6000806040838503121561277557600080fd5b61277e8361274e565b915061278c6020840161274e565b90509250929050565b6000602082840312156127a757600080fd5b5035919050565b600080604083850312156127c157600080fd5b50508035926020909101359150565b6000602082840312156127e257600080fd5b813561ffff8116811461070b57600080fd5b60008060006060848603121561280957600080fd5b505081359360208301359350604090920135919050565b60006020828403121561283257600080fd5b61070b8261274e565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c08101612873828561283b565b61070b606083018461283b565b60006020828403121561289257600080fd5b81356001600160a01b038116811461070b57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156128e8576128e86128bf565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612934576129346128bf565b500390565b60006020828403121561294b57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261297757612977612952565b500490565b6000816000190483118215151615612996576129966128bf565b500290565b600061ffff808316818114156129b3576129b36128bf565b6001019392505050565b600061ffff838116908316818110156129d8576129d86128bf565b039392505050565b600061ffff8083168185168083038211156129fd576129fd6128bf565b01949350505050565b600061ffff80841680612a1b57612a1b612952565b92169190910692915050565b600082612a3657612a36612952565b500690565b600063ffffffff838116908316818110156129d8576129d86128bf565b634e487b7160e01b600052602160045260246000fdfea26469706673582212201729435479cf3e10ab536d3a52a6eb3b185cf30868c119c4fada0f6c317959b764736f6c63430008090033";

export class TestCompoundRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    cToken: string,
    underlying: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestCompoundRateOracle> {
    return super.deploy(
      cToken,
      underlying,
      _decimals,
      overrides || {}
    ) as Promise<TestCompoundRateOracle>;
  }
  getDeployTransaction(
    cToken: string,
    underlying: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      cToken,
      underlying,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): TestCompoundRateOracle {
    return super.attach(address) as TestCompoundRateOracle;
  }
  connect(signer: Signer): TestCompoundRateOracle__factory {
    return super.connect(signer) as TestCompoundRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCompoundRateOracleInterface {
    return new utils.Interface(_abi) as TestCompoundRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCompoundRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestCompoundRateOracle;
  }
}

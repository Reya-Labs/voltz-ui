/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestCompoundRateOracle,
  TestCompoundRateOracleInterface,
} from "../TestCompoundRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "ethPool",
        type: "bool",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ctoken",
    outputs: [
      {
        internalType: "contract ICToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162003c2438038062003c248339810160408190526200003591620009cf565b83838383600060405190808252806020026020018201604052801562000065578160200160208202803683370190505b50604080516000815260208101909152836200008133620002b7565b6001600160a01b038116608052436201000455620000aa62000307602090811b62000fae17901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b03861660a05284806200017d5750836001600160a01b031660a0516001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156200013757600080fd5b505afa1580156200014c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000172919062000a56565b6001600160a01b0316145b620001cf5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e7320646f206e6f74206d617463680000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038416620002275760405162461bcd60e51b815260206004820152601560248201527f756e6465726c79696e67206d75737420657869737400000000000000000000006044820152606401620001c6565b60ff831660c081905260111115620002415760006200025f565b601160c05162000252919062000a93565b6200025f90600a62000bb6565b60e05260c051601160ff909116106200027a57600062000297565b60c0516200028a90601162000a93565b6200029790600a62000bb6565b61010052620002a7828262000319565b5050505050505050505062000d18565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200031442620005a4565b905090565b62000328600261ffff62000bc7565b8251106200034a5760405162461bcd60e51b8152600401620001c69062000bea565b8151815161ffff821614620003735760405162461bcd60e51b8152600401620001c69062000c08565b60006200038282600162000c34565b61ffff166001600160401b03811115620003a057620003a062000a40565b604051908082528060200260200182016040528015620003ca578160200160208202803683370190505b5090506000620003dc83600162000c34565b61ffff166001600160401b03811115620003fa57620003fa62000a40565b60405190808252806020026020018201604052801562000424578160200160208202803683370190505b50905060005b8361ffff16811015620004d5578581815181106200044c576200044c62000c5d565b602002602001015183828151811062000469576200046962000c5d565b602002602001019063ffffffff16908163ffffffff168152505084818151811062000498576200049862000c5d565b6020026020010151828281518110620004b557620004b562000c5d565b602090810291909101015280620004cc8162000c73565b9150506200042a565b50600080620004e3620005eb565b9150915081848661ffff168151811062000501576200050162000c5d565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff168151811062000535576200053562000c5d565b6020026020010181815250506200055e84846004620006df60201b62000fbe179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620005e65760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620001c6565b919050565b600080600060a0516001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200062c57600080fd5b505afa15801562000641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000667919062000c91565b90508062000688576040516324988a7b60e01b815260040160405180910390fd5b601160ff1660c05160ff1610620006b05760e051620006a8908262000bc7565b9150620006c3565b61010051620006c0908262000cab565b91505b620006d86200030760201b62000fae1760201c565b9250509091565b600080600061ffff855110620007095760405162461bcd60e51b8152600401620001c69062000bea565b8451845161ffff821614620007325760405162461bcd60e51b8152600401620001c69062000c08565b60008161ffff16116200076d5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620001c6565b6000805b8261ffff168161ffff1610156200090357878161ffff16815181106200079b576200079b62000c5d565b602002602001015163ffffffff168263ffffffff1610620007f15760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620001c6565b62000843888261ffff16815181106200080e576200080e62000c5d565b6020026020010151888361ffff16815181106200082f576200082f62000c5d565b60200260200101516200092460201b60201c565b898261ffff1661ffff81106200085d576200085d62000c5d565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff8316908110620008e357620008e362000c5d565b602002602001015191508080620008fa9062000ccd565b91505062000771565b5081806200091360018262000cf2565b945094509450505093509350939050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620009835760405162461bcd60e51b8152600401620001c6906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff841681526001600160d81b03831660208201526001918101919091525b92915050565b6001600160a01b0381168114620009cc57600080fd5b50565b60008060008060808587031215620009e657600080fd5b8451620009f381620009b6565b6020860151909450801515811462000a0a57600080fd5b604086015190935062000a1d81620009b6565b606086015190925060ff8116811462000a3557600080fd5b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000a6957600080fd5b815162000a7681620009b6565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101562000ab05762000ab062000a7d565b90039392505050565b600181815b8085111562000afa57816000190482111562000ade5762000ade62000a7d565b8085161562000aec57918102915b93841c939080029062000abe565b509250929050565b60008262000b1357506001620009b0565b8162000b2257506000620009b0565b816001811462000b3b576002811462000b465762000b66565b6001915050620009b0565b60ff84111562000b5a5762000b5a62000a7d565b50506001821b620009b0565b5060208310610133831016604e8410600b841016171562000b8b575081810a620009b0565b62000b97838362000ab9565b806000190482111562000bae5762000bae62000a7d565b029392505050565b600062000a7660ff84168362000b02565b60008262000be557634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000c545762000c5462000a7d565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000c8a5762000c8a62000a7d565b5060010190565b60006020828403121562000ca457600080fd5b5051919050565b600081600019048311821515161562000cc85762000cc862000a7d565b500290565b600061ffff8083168181141562000ce85762000ce862000a7d565b6001019392505050565b600061ffff8381169083168181101562000d105762000d1062000a7d565b039392505050565b60805160a05160c05160e05161010051612eb962000d6b60003960006109d1015260006109a00152600081816102ac015261097401526000818161049d01526108c10152600061036c0152612eb96000f3fe608060405234801561001057600080fd5b50600436106101965760003560e01c806301320aad1461019b5780631195082e146101b6578063163e9c4f146101e157806317221ef1146101f457806322ff65681461020757806324b18b1714610221578063252c09d71461025557806325f258dd14610294578063313ce567146102a757806332148f67146102ce5780633c155bd5146102e3578063414535281461030b57806354124c641461031e57806356da9775146103315780636e035c05146103545780636f307dc314610367578063715018a6146103a65780637aa4db13146103ae5780637cf2cc9f146103b65780638a6b8c5d146103bf5780638da5cb5b146103c757806391aa375d146103cf57806393556dbd146103fa57806395f3e6051461040d578063bdb050921461042e578063c330c98d14610441578063c7db359b14610450578063ccf3eb9f14610498578063e9b69c0d146104bf578063efdf5d8b146104d2578063f2fde38b146104da578063f739670c146104ed578063f90ce5ba14610500578063fe115fbe14610518575b600080fd5b6101a3610520565b6040519081526020015b60405180910390f35b6101a36101c4366004612b57565b600160209081526000928352604080842090915290825290205481565b6101a36101ef366004612b8a565b610587565b6101a3610202366004612b8a565b610599565b61020f600281565b60405160ff90911681526020016101ad565b620100055462010006546102399163ffffffff169082565b6040805163ffffffff90931683526020830191909152016101ad565b610268610263366004612b8a565b6105a5565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101ad565b6101a36102a2366004612ba3565b6105df565b61020f7f000000000000000000000000000000000000000000000000000000000000000081565b6102e16102dc366004612bc5565b610655565b005b6102f66102f1366004612bc5565b6106da565b604080519283526020830191909152016101ad565b6101a3610319366004612ba3565b610747565b6101a361032c366004612be9565b61075b565b61034461033f366004612ba3565b6107b0565b60405190151581526020016101ad565b6101a3610362366004612ba3565b610816565b61038e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ad565b6102e1610829565b6102e161086d565b6101a360025481565b6102396108ba565b61038e610a08565b6201000654620100055463ffffffff165b6040805192835263ffffffff9091166020830152016101ad565b6101a3610408366004612ba3565b610a17565b61042061041b366004612c15565b610aa7565b6040516101ad929190612c5a565b6102e161043c366004612b8a565b610adf565b6101a3670de0b6b3a764000081565b6003546104739061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff948516815292841660208401529216918101919091526060016101ad565b61038e7f000000000000000000000000000000000000000000000000000000000000000081565b6102f66104cd366004612c15565b610b53565b6101a3610baf565b6102e16104e8366004612c75565b610c37565b6101a36104fb366004612ba3565b610cd4565b620100035462010004546102399163ffffffff169082565b6103e0610dde565b600354600090819060049061ffff90811690811061054057610540612c9e565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60006105938242610cd4565b92915050565b60006105938242610a17565b60048161ffff81106105b657600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806105ec8484611201565b9092509050801561064e57600061060c670de0b6b3a7640000860461133f565b90506000610623670de0b6b3a7640000860461133f565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff16600061067160048385611384565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146106d55760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff81106106f7576106f7612c9e565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006107538383611201565b509392505050565b60008061076783611476565b9050600061077d670de0b6b3a764000086612cca565b9050600061078b828461148d565b90506000610798826114cc565b90506107a488826114f6565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826107d785846114f6565b905060006107e586846114f6565b90508187111580156107f75750808710155b15610809576001945050505050610593565b6000945050505050610593565b60006108228383611504565b9392505050565b33610832610a08565b6001600160a01b0316146108615760405162461bcd60e51b815260040161085890612ce2565b60405180910390fd5b61086b6000611569565b565b6003546108929061ffff80821691620100008104821691600160201b909104166115b9565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561091857600080fd5b505afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109509190612d17565b905080610970576040516324988a7b60e01b815260040160405180910390fd5b60117f000000000000000000000000000000000000000000000000000000000000000060ff16106109cc576109c57f000000000000000000000000000000000000000000000000000000000000000082612d46565b91506109f9565b6109f67f000000000000000000000000000000000000000000000000000000000000000082612d5a565b91505b610a01610fae565b9250509091565b6000546001600160a01b031690565b600081831115610a5c5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b6044820152606401610858565b6000610a688484610cd4565b90506000610a768585612d79565b90506000610a838261175c565b90506000610a9082611476565b9050610a9c8482611504565b979650505050505050565b610aaf612b23565b610ab7612b23565b600354610ad690600490859061ffff80821691620100009004166117a9565b91509150915091565b33610ae8610a08565b6001600160a01b031614610b0e5760405162461bcd60e51b815260040161085890612ce2565b8060025414610b505760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b6000806000610b60610baf565b9050600080610b8e86610b71610fae565b6003546004929190879061ffff808216916201000090041661195b565b6020918201519101516001600160d81b039182169891169650945050505050565b6000806000610bbc6108ba565b91509150610bc8610fae565b63ffffffff168263ffffffff1610610be05792915050565b600080610beb610dde565b915091508063ffffffff168285610c00610fae565b610c0a9190612d90565b63ffffffff16610c1a9190612d5a565b610c249190612d46565b610c2e9084612cca565b94505050505090565b33610c40610a08565b6001600160a01b031614610c665760405162461bcd60e51b815260040161085890612ce2565b6001600160a01b038116610ccb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610858565b610b5081611569565b600081831115610d125760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610858565b81831415610d2257506000610593565b6000610d2c610fae565b90506000610d398561133f565b90506000610d468561133f565b600354909150600090610d6a908590859061ffff8082169162010000900416611b0e565b600354909150600090610d8e908690859061ffff8082169162010000900416611b0e565b905081811115610dd0576000610dc2676765c793fa10079d601b1b610db38486611d5a565b610dbd9190612d79565b611d68565b965061059395505050505050565b600095505050505050610593565b600354600090819061ffff16816001821015610e1257600354610e0d9060019062010000900461ffff16612db5565b610e25565b600354610e259060019061ffff16612db5565b60035490915060026201000090910461ffff1610801590610e66575060048161ffff1661ffff8110610e5957610e59612c9e565b0154600160f81b900460ff165b8015610ec3575060048261ffff1661ffff8110610e8557610e85612c9e565b0154600160201b90046001600160d81b0316600461ffff838116908110610eae57610eae612c9e565b0154600160201b90046001600160d81b031611155b610ef55760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b6044820152606401610858565b60048161ffff1661ffff8110610f0d57610f0d612c9e565b0154600160201b90046001600160d81b0316600461ffff848116908110610f3657610f36612c9e565b0154610f529190600160201b90046001600160d81b0316612dd0565b6001600160d81b0316935060048161ffff1661ffff8110610f7557610f75612c9e565b015463ffffffff16600461ffff808516908110610f9457610f94612c9e565b0154610fa6919063ffffffff16612d90565b925050509091565b6000610fb94261133f565b905090565b600080600061ffff855110610ffe5760405162461bcd60e51b8152600401610858906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff8216146110495760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610858565b60008161ffff16116110825760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610858565b6000805b8261ffff168161ffff1610156111e257878161ffff16815181106110ac576110ac612c9e565b602002602001015163ffffffff168263ffffffff16106111005760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610858565b611144888261ffff168151811061111957611119612c9e565b6020026020010151888361ffff168151811061113757611137612c9e565b6020026020010151611df4565b898261ffff1661ffff811061115b5761115b612c9e565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff83169081106111c5576111c5612c9e565b6020026020010151915080806111da90612df0565b915050611086565b5081806111f0600182612db5565b945094509450505093509350939050565b60008080611218670de0b6b3a7640000860461133f565b9050600061122f670de0b6b3a7640000860461133f565b905060008263ffffffff1611801561124d575060008163ffffffff16115b6112815760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610858565b63ffffffff808316600090815260016020908152604080832093851683529290522054156112d75763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250611336565b8063ffffffff166112e6610fae565b63ffffffff1610611312576113078263ffffffff168263ffffffff16610cd4565b935060019250611336565b61132f8263ffffffff16611324610fae565b63ffffffff16610cd4565b9350600092505b50509250929050565b8063ffffffff8116811461137f5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610858565b919050565b6000808361ffff16116113bd5760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610858565b61ffff8261ffff16106114015760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610858565b8261ffff168261ffff1611611417575081610822565b825b8261ffff168161ffff16101561146d576001858261ffff1661ffff811061144257611442612c9e565b01805463ffffffff191663ffffffff929092169190911790558061146581612df0565b915050611419565b50909392505050565b6000610593826a1a1601fc4ea7109e000000611e6c565b6000826114b25781156114a15760006114ab565b670de0b6b3a76400005b9050610593565b6108226114c76114c185611e81565b84611f31565b611f3d565b6000806114ec670de0b6b3a7640000676765c793fa10079d601b1b612d46565b6108229084612d5a565b600061082283836001611f83565b60008261151357506000610593565b6000611528611522600161175c565b84611e6c565b9050600061154a8561153a600161175c565b6115449190612cca565b8361148d565b9050611556600161175c565b6115609082612d79565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106115d6576115d6612c9e565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000806116216108ba565b600254855192945090925061163b9163ffffffff16612cca565b8263ffffffff16101561165657878794509450505050611754565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa737561167f612036565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546116d19043612d79565b6201000655620100035463ffffffff166116e9610fae565b6116f39190612d90565b62010005805463ffffffff191663ffffffff9290921691909117905543620100045561171d610fae565b62010003805463ffffffff191663ffffffff92831617905561174c906004908a90859085908c908c9061204116565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561179b57604051633492ffd960e01b815260048101839052602401610858565b50670de0b6b3a76400000290565b6117b1612b23565b6117b9612b23565b6000836117c7866001612e12565b6117d19190612e38565b61ffff169050600060018561ffff16836117eb9190612cca565b6117f59190612d79565b905060005b60016118068385612cca565b901c90508861181961ffff881683612e59565b61ffff811061182a5761182a612c9e565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506118815761187a816001612cca565b92506117fa565b8861ffff8716611892836001612cca565b61189c9190612e59565b61ffff81106118ad576118ad612c9e565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906119195750846000015163ffffffff168963ffffffff1611155b15611924575061194f565b8061193b57611934600183612d79565b9250611949565b611946826001612cca565b93505b506117fa565b50505094509492505050565b611963612b23565b61196b612b23565b878461ffff1661ffff811061198257611982612c9e565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611a01578663ffffffff16826000015163ffffffff1614156119ed57611b03565b816119f88787611df4565b91509150611b03565b8783611a0e866001612e12565b611a189190612e38565b61ffff1661ffff8110611a2d57611a2d612c9e565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611ab25760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611af25760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610858565b611afe888886866117a9565b915091505b965096945050505050565b60008363ffffffff168563ffffffff161015611b3d57604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff161415611be557611b59612b23565b60048461ffff1661ffff8110611b7157611b71612c9e565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090871614611bce57611bc7610baf565b9150611bdf565b80602001516001600160d81b031691505b50611d52565b6000611bef610baf565b9050600080611c036004888a868a8a61195b565b91509150816000015163ffffffff168763ffffffff161415611c345781602001516001600160d81b03169350611d4e565b805163ffffffff88811691161415611c5b5780602001516001600160d81b03169350611d4e565b600082602001516001600160d81b031682602001516001600160d81b03161115611cca576000676765c793fa10079d601b1b611cb184602001516001600160d81b031686602001516001600160d81b0316611d5a565b611cbb9190612d79565b9050611cc681611d68565b9150505b82518251600091611cfd91670de0b6b3a764000091611ce891612d90565b63ffffffff16611cf89190612d5a565b611476565b90506000611d0b8383611504565b9050611d4885602001516001600160d81b031682670de0b6b3a764000088600001518e611d389190612d90565b63ffffffff1661032c9190612d5a565b96505050505b5050505b949350505050565b600061082283836001612188565b600080611d88670de0b6b3a7640000676765c793fa10079d601b1b612d46565b611d929084612d46565b90506002611db3670de0b6b3a7640000676765c793fa10079d601b1b612d46565b611dbd9190612d46565b611dda670de0b6b3a7640000676765c793fa10079d601b1b612d46565b611de49085612e59565b1061059357610822600182612cca565b611dfc612b23565b6001600160d81b03821115611e3c5760405162461bcd60e51b8152600401610858906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061082283670de0b6b3a764000084612223565b6000670de0b6b3a7640000821015611eaf57604051633621413760e21b815260048101839052602401610858565b6000611ec4670de0b6b3a764000084046122f1565b670de0b6b3a7640000808202935090915083821c90811415611ee7575050919050565b6706f05b59d3b200005b8015611f2957670de0b6b3a7640000828002049150671bc16d674ec800008210611f21579283019260019190911c905b60011c611ef1565b505050919050565b600061082283836123cf565b6000680a688906bd8b0000008210611f6b57604051634a4f26f160e01b815260048101839052602401610858565b670de0b6b3a7640000604083901b0461082281612491565b6000831580611f90575082155b15611f9d57506000610822565b6001826001811115611fb157611fb1612e6d565b14611fc457670de0b6b3a7640000611fd1565b676765c793fa10079d601b1b5b6001836001811115611fe557611fe5612e6d565b1461200257611ffd6002670de0b6b3a7640000612d46565b612018565b6120186002676765c793fa10079d601b1b612d46565b6120228587612d5a565b61202c9190612cca565b611d529190612d46565b6000610fb94261175c565b6000806000888861ffff1661ffff811061205d5761205d612c9e565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881614156120b85787859250925050611b03565b8461ffff168461ffff161180156120e057506120d5600186612db5565b61ffff168861ffff16145b156120ed578391506120f1565b8491505b816120fd896001612e12565b6121079190612e38565b92506121138787611df4565b898461ffff1661ffff811061212a5761212a612c9e565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b6000826121c05760405162461bcd60e51b8152600401610858906020808252600490820152630444956360e41b604082015260600190565b60006121cd600285612d46565b9050838160018560018111156121e5576121e5612e6d565b146121f857670de0b6b3a7640000612205565b676765c793fa10079d601b1b5b61220f9088612d5a565b6122199190612cca565b6115609190612d46565b60008080600019858709858702925082811083820303915050806000141561225e5783828161225457612254612d30565b0492505050610822565b83811061228857604051631dcf306360e21b81526004810182905260248101859052604401610858565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b821061231157608091821c9161230e9082612cca565b90505b600160401b821061232f57604091821c9161232c9082612cca565b90505b600160201b821061234d57602091821c9161234a9082612cca565b90505b62010000821061236a57601091821c916123679082612cca565b90505b610100821061238657600891821c916123839082612cca565b90505b601082106123a157600491821c9161239e9082612cca565b90505b600482106123bc57600291821c916123b99082612cca565b90505b6002821061137f57610593600182612cca565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106124135760405163698d9a0160e11b815260048101829052602401610858565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff81118261244d5780670de0b6b3a7640000850401945050505050610593565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156124b15768016a09e667f3bcc9090260401c5b6001603e1b8216156124cc576801306fe0a31b7152df0260401c5b6001603d1b8216156124e7576801172b83c7d517adce0260401c5b6001603c1b8216156125025768010b5586cf9890f62a0260401c5b6001603b1b82161561251d576801059b0d31585743ae0260401c5b6001603a1b82161561253857680102c9a3e778060ee70260401c5b600160391b8216156125535768010163da9fb33356d80260401c5b600160381b82161561256e57680100b1afa5abcbed610260401c5b600160371b8216156125895768010058c86da1c09ea20260401c5b600160361b8216156125a4576801002c605e2e8cec500260401c5b600160351b8216156125bf57680100162f3904051fa10260401c5b600160341b8216156125da576801000b175effdc76ba0260401c5b600160331b8216156125f557680100058ba01fb9f96d0260401c5b600160321b8216156126105768010002c5cc37da94920260401c5b600160311b82161561262b576801000162e525ee05470260401c5b600160301b8216156126465768010000b17255775c040260401c5b6001602f1b821615612661576801000058b91b5bc9ae0260401c5b6001602e1b82161561267c57680100002c5c89d5ec6d0260401c5b6001602d1b8216156126975768010000162e43f4f8310260401c5b6001602c1b8216156126b257680100000b1721bcfc9a0260401c5b6001602b1b8216156126cd5768010000058b90cf1e6e0260401c5b6001602a1b8216156126e8576801000002c5c863b73f0260401c5b600160291b82161561270357680100000162e430e5a20260401c5b600160281b82161561271e576801000000b1721835510260401c5b600160271b82161561273957680100000058b90c0b490260401c5b600160261b8216156127545768010000002c5c8601cc0260401c5b600160251b82161561276f576801000000162e42fff00260401c5b600160241b82161561278a5768010000000b17217fbb0260401c5b600160231b8216156127a5576801000000058b90bfce0260401c5b600160221b8216156127c057680100000002c5c85fe30260401c5b600160211b8216156127db5768010000000162e42ff10260401c5b600160201b8216156127f657680100000000b17217f80260401c5b63800000008216156128115768010000000058b90bfc0260401c5b634000000082161561282c576801000000002c5c85fe0260401c5b632000000082161561284757680100000000162e42ff0260401c5b6310000000821615612862576801000000000b17217f0260401c5b630800000082161561287d57680100000000058b90c00260401c5b63040000008216156128985768010000000002c5c8600260401c5b63020000008216156128b3576801000000000162e4300260401c5b63010000008216156128ce5768010000000000b172180260401c5b628000008216156128e8576801000000000058b90c0260401c5b6240000082161561290257680100000000002c5c860260401c5b6220000082161561291c5768010000000000162e430260401c5b6210000082161561293657680100000000000b17210260401c5b620800008216156129505768010000000000058b910260401c5b6204000082161561296a576801000000000002c5c80260401c5b6202000082161561298457680100000000000162e40260401c5b6201000082161561299d5761b172600160401b010260401c5b6180008216156129b5576158b9600160401b010260401c5b6140008216156129cd57612c5d600160401b010260401c5b6120008216156129e55761162e600160401b010260401c5b6110008216156129fd57610b17600160401b010260401c5b610800821615612a155761058c600160401b010260401c5b610400821615612a2d576102c6600160401b010260401c5b610200821615612a4557610163600160401b010260401c5b610100821615612a5c5760b1600160401b010260401c5b6080821615612a72576059600160401b010260401c5b6040821615612a8857602c600160401b010260401c5b6020821615612a9e576016600160401b010260401c5b6010821615612ab457600b600160401b010260401c5b6008821615612aca576006600160401b010260401c5b6004821615612ae0576003600160401b010260401c5b6002821615612af6576001600160401b010260401c5b6001821615612b0c576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff8116811461137f57600080fd5b60008060408385031215612b6a57600080fd5b612b7383612b43565b9150612b8160208401612b43565b90509250929050565b600060208284031215612b9c57600080fd5b5035919050565b60008060408385031215612bb657600080fd5b50508035926020909101359150565b600060208284031215612bd757600080fd5b813561ffff8116811461082257600080fd5b600080600060608486031215612bfe57600080fd5b505081359360208301359350604090920135919050565b600060208284031215612c2757600080fd5b61082282612b43565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c08101612c688285612c30565b6108226060830184612c30565b600060208284031215612c8757600080fd5b81356001600160a01b038116811461082257600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612cdd57612cdd612cb4565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215612d2957600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082612d5557612d55612d30565b500490565b6000816000190483118215151615612d7457612d74612cb4565b500290565b600082821015612d8b57612d8b612cb4565b500390565b600063ffffffff83811690831681811015612dad57612dad612cb4565b039392505050565b600061ffff83811690831681811015612dad57612dad612cb4565b60006001600160d81b0383811690831681811015612dad57612dad612cb4565b600061ffff80831681811415612e0857612e08612cb4565b6001019392505050565b600061ffff808316818516808303821115612e2f57612e2f612cb4565b01949350505050565b600061ffff80841680612e4d57612e4d612d30565b92169190910692915050565b600082612e6857612e68612d30565b500690565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a3d706c66d3e0c3dde84d3d48d4aaa49a46ba5310a66e80e759e82a06ccfd2ba64736f6c63430008090033";

export class TestCompoundRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    cToken: string,
    ethPool: boolean,
    underlying: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestCompoundRateOracle> {
    return super.deploy(
      cToken,
      ethPool,
      underlying,
      _decimals,
      overrides || {}
    ) as Promise<TestCompoundRateOracle>;
  }
  getDeployTransaction(
    cToken: string,
    ethPool: boolean,
    underlying: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      cToken,
      ethPool,
      underlying,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): TestCompoundRateOracle {
    return super.attach(address) as TestCompoundRateOracle;
  }
  connect(signer: Signer): TestCompoundRateOracle__factory {
    return super.connect(signer) as TestCompoundRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCompoundRateOracleInterface {
    return new utils.Interface(_abi) as TestCompoundRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCompoundRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestCompoundRateOracle;
  }
}

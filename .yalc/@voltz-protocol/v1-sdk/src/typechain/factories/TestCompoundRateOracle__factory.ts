/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestCompoundRateOracle,
  TestCompoundRateOracleInterface,
} from "../TestCompoundRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "ethPool",
        type: "bool",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ctoken",
    outputs: [
      {
        internalType: "contract ICToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162003bd538038062003bd58339810160408190526200003591620009cf565b83838383600060405190808252806020026020018201604052801562000065578160200160208202803683370190505b50604080516000815260208101909152836200008133620002b7565b6001600160a01b038116608052436201000455620000aa62000307602090811b62000f3517901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b03861660a05284806200017d5750836001600160a01b031660a0516001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156200013757600080fd5b505afa1580156200014c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000172919062000a56565b6001600160a01b0316145b620001cf5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e7320646f206e6f74206d617463680000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038416620002275760405162461bcd60e51b815260206004820152601560248201527f756e6465726c79696e67206d75737420657869737400000000000000000000006044820152606401620001c6565b60ff831660c081905260111115620002415760006200025f565b601160c05162000252919062000a93565b6200025f90600a62000bb6565b60e05260c051601160ff909116106200027a57600062000297565b60c0516200028a90601162000a93565b6200029790600a62000bb6565b61010052620002a7828262000319565b5050505050505050505062000d18565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200031442620005a4565b905090565b62000328600261ffff62000bc7565b8251106200034a5760405162461bcd60e51b8152600401620001c69062000bea565b8151815161ffff821614620003735760405162461bcd60e51b8152600401620001c69062000c08565b60006200038282600162000c34565b61ffff166001600160401b03811115620003a057620003a062000a40565b604051908082528060200260200182016040528015620003ca578160200160208202803683370190505b5090506000620003dc83600162000c34565b61ffff166001600160401b03811115620003fa57620003fa62000a40565b60405190808252806020026020018201604052801562000424578160200160208202803683370190505b50905060005b8361ffff16811015620004d5578581815181106200044c576200044c62000c5d565b602002602001015183828151811062000469576200046962000c5d565b602002602001019063ffffffff16908163ffffffff168152505084818151811062000498576200049862000c5d565b6020026020010151828281518110620004b557620004b562000c5d565b602090810291909101015280620004cc8162000c73565b9150506200042a565b50600080620004e3620005eb565b9150915081848661ffff168151811062000501576200050162000c5d565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff168151811062000535576200053562000c5d565b6020026020010181815250506200055e84846004620006df60201b62000f45179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620005e65760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620001c6565b919050565b600080600060a0516001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200062c57600080fd5b505afa15801562000641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000667919062000c91565b90508062000688576040516324988a7b60e01b815260040160405180910390fd5b601160ff1660c05160ff1610620006b05760e051620006a8908262000bc7565b9150620006c3565b61010051620006c0908262000cab565b91505b620006d86200030760201b62000f351760201c565b9250509091565b600080600061ffff855110620007095760405162461bcd60e51b8152600401620001c69062000bea565b8451845161ffff821614620007325760405162461bcd60e51b8152600401620001c69062000c08565b60008161ffff16116200076d5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620001c6565b6000805b8261ffff168161ffff1610156200090357878161ffff16815181106200079b576200079b62000c5d565b602002602001015163ffffffff168263ffffffff1610620007f15760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620001c6565b62000843888261ffff16815181106200080e576200080e62000c5d565b6020026020010151888361ffff16815181106200082f576200082f62000c5d565b60200260200101516200092460201b60201c565b898261ffff1661ffff81106200085d576200085d62000c5d565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff8316908110620008e357620008e362000c5d565b602002602001015191508080620008fa9062000ccd565b91505062000771565b5081806200091360018262000cf2565b945094509450505093509350939050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620009835760405162461bcd60e51b8152600401620001c6906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff841681526001600160d81b03831660208201526001918101919091525b92915050565b6001600160a01b0381168114620009cc57600080fd5b50565b60008060008060808587031215620009e657600080fd5b8451620009f381620009b6565b6020860151909450801515811462000a0a57600080fd5b604086015190935062000a1d81620009b6565b606086015190925060ff8116811462000a3557600080fd5b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000a6957600080fd5b815162000a7681620009b6565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101562000ab05762000ab062000a7d565b90039392505050565b600181815b8085111562000afa57816000190482111562000ade5762000ade62000a7d565b8085161562000aec57918102915b93841c939080029062000abe565b509250929050565b60008262000b1357506001620009b0565b8162000b2257506000620009b0565b816001811462000b3b576002811462000b465762000b66565b6001915050620009b0565b60ff84111562000b5a5762000b5a62000a7d565b50506001821b620009b0565b5060208310610133831016604e8410600b841016171562000b8b575081810a620009b0565b62000b97838362000ab9565b806000190482111562000bae5762000bae62000a7d565b029392505050565b600062000a7660ff84168362000b02565b60008262000be557634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000c545762000c5462000a7d565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000c8a5762000c8a62000a7d565b5060010190565b60006020828403121562000ca457600080fd5b5051919050565b600081600019048311821515161562000cc85762000cc862000a7d565b500290565b600061ffff8083168181141562000ce85762000ce862000a7d565b6001019392505050565b600061ffff8381169083168181101562000d105762000d1062000a7d565b039392505050565b60805160a05160c05160e05161010051612e6a62000d6b60003960006109a1015260006109700152600081816102ac015261094401526000818161049d01526108910152600061036c0152612e6a6000f3fe608060405234801561001057600080fd5b50600436106101965760003560e01c806301320aad1461019b5780631195082e146101b6578063163e9c4f146101e157806317221ef1146101f457806322ff65681461020757806324b18b1714610221578063252c09d71461025557806325f258dd14610294578063313ce567146102a757806332148f67146102ce5780633c155bd5146102e3578063414535281461030b57806354124c641461031e57806356da9775146103315780636e035c05146103545780636f307dc314610367578063715018a6146103a65780637aa4db13146103ae5780637cf2cc9f146103b65780638a6b8c5d146103bf5780638da5cb5b146103c757806391aa375d146103cf57806393556dbd146103fa57806395f3e6051461040d578063bdb050921461042e578063c330c98d14610441578063c7db359b14610450578063ccf3eb9f14610498578063e9b69c0d146104bf578063efdf5d8b146104d2578063f2fde38b146104da578063f739670c146104ed578063f90ce5ba14610500578063fe115fbe14610518575b600080fd5b6101a3610520565b6040519081526020015b60405180910390f35b6101a36101c4366004612b3d565b600160209081526000928352604080842090915290825290205481565b6101a36101ef366004612b70565b610587565b6101a3610202366004612b70565b610599565b61020f600281565b60405160ff90911681526020016101ad565b620100055462010006546102399163ffffffff169082565b6040805163ffffffff90931683526020830191909152016101ad565b610268610263366004612b70565b6105a5565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101ad565b6101a36102a2366004612b89565b6105df565b61020f7f000000000000000000000000000000000000000000000000000000000000000081565b6102e16102dc366004612bab565b610655565b005b6102f66102f1366004612bab565b6106da565b604080519283526020830191909152016101ad565b6101a3610319366004612b89565b610747565b6101a361032c366004612bcf565b61075b565b61034461033f366004612b89565b6107b0565b60405190151581526020016101ad565b6101a3610362366004612b89565b610816565b61038e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ad565b6102e1610829565b6102e161083d565b6101a360025481565b61023961088a565b61038e6109d8565b6201000654620100055463ffffffff165b6040805192835263ffffffff9091166020830152016101ad565b6101a3610408366004612b89565b6109e7565b61042061041b366004612bfb565b610a7c565b6040516101ad929190612c40565b6102e161043c366004612b70565b610ab4565b6101a3670de0b6b3a764000081565b6003546104739061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff948516815292841660208401529216918101919091526060016101ad565b61038e7f000000000000000000000000000000000000000000000000000000000000000081565b6102f66104cd366004612bfb565b610b01565b6101a3610b5d565b6102e16104e8366004612c5b565b610be5565b6101a36104fb366004612b89565b610c5b565b620100035462010004546102399163ffffffff169082565b6103e0610d65565b600354600090819060049061ffff90811690811061054057610540612c84565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60006105938242610c5b565b92915050565b600061059382426109e7565b60048161ffff81106105b657600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806105ec8484611188565b9092509050801561064e57600061060c670de0b6b3a764000086046112c6565b90506000610623670de0b6b3a764000086046112c6565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff1660006106716004838561130b565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146106d55760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff81106106f7576106f7612c84565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006107538383611188565b509392505050565b600080610767836113fd565b9050600061077d670de0b6b3a764000086612cb0565b9050600061078b8284611414565b9050600061079882611453565b90506107a4888261147d565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826107d7858461147d565b905060006107e5868461147d565b90508187111580156107f75750808710155b15610809576001945050505050610593565b6000945050505050610593565b6000610822838361148b565b9392505050565b6108316114f0565b61083b600061154f565b565b6003546108629061ffff80821691620100008104821691600160201b9091041661159f565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156108e857600080fd5b505afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190612cc8565b905080610940576040516324988a7b60e01b815260040160405180910390fd5b60117f000000000000000000000000000000000000000000000000000000000000000060ff161061099c576109957f000000000000000000000000000000000000000000000000000000000000000082612cf7565b91506109c9565b6109c67f000000000000000000000000000000000000000000000000000000000000000082612d0b565b91505b6109d1610f35565b9250509091565b6000546001600160a01b031690565b600081831115610a315760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064015b60405180910390fd5b6000610a3d8484610c5b565b90506000610a4b8585612d2a565b90506000610a5882611742565b90506000610a65826113fd565b9050610a71848261148b565b979650505050505050565b610a84612b09565b610a8c612b09565b600354610aab90600490859061ffff808216916201000090041661178f565b91509150915091565b610abc6114f0565b8060025414610afe5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b6000806000610b0e610b5d565b9050600080610b3c86610b1f610f35565b6003546004929190879061ffff8082169162010000900416611941565b6020918201519101516001600160d81b039182169891169650945050505050565b6000806000610b6a61088a565b91509150610b76610f35565b63ffffffff168263ffffffff1610610b8e5792915050565b600080610b99610d65565b915091508063ffffffff168285610bae610f35565b610bb89190612d41565b63ffffffff16610bc89190612d0b565b610bd29190612cf7565b610bdc9084612cb0565b94505050505090565b610bed6114f0565b6001600160a01b038116610c525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a28565b610afe8161154f565b600081831115610c995760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610a28565b81831415610ca957506000610593565b6000610cb3610f35565b90506000610cc0856112c6565b90506000610ccd856112c6565b600354909150600090610cf1908590859061ffff8082169162010000900416611af4565b600354909150600090610d15908690859061ffff8082169162010000900416611af4565b905081811115610d57576000610d49676765c793fa10079d601b1b610d3a8486611d40565b610d449190612d2a565b611d4e565b965061059395505050505050565b600095505050505050610593565b600354600090819061ffff16816001821015610d9957600354610d949060019062010000900461ffff16612d66565b610dac565b600354610dac9060019061ffff16612d66565b60035490915060026201000090910461ffff1610801590610ded575060048161ffff1661ffff8110610de057610de0612c84565b0154600160f81b900460ff165b8015610e4a575060048261ffff1661ffff8110610e0c57610e0c612c84565b0154600160201b90046001600160d81b0316600461ffff838116908110610e3557610e35612c84565b0154600160201b90046001600160d81b031611155b610e7c5760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b6044820152606401610a28565b60048161ffff1661ffff8110610e9457610e94612c84565b0154600160201b90046001600160d81b0316600461ffff848116908110610ebd57610ebd612c84565b0154610ed99190600160201b90046001600160d81b0316612d81565b6001600160d81b0316935060048161ffff1661ffff8110610efc57610efc612c84565b015463ffffffff16600461ffff808516908110610f1b57610f1b612c84565b0154610f2d919063ffffffff16612d41565b925050509091565b6000610f40426112c6565b905090565b600080600061ffff855110610f855760405162461bcd60e51b8152600401610a28906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610fd05760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610a28565b60008161ffff16116110095760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610a28565b6000805b8261ffff168161ffff16101561116957878161ffff168151811061103357611033612c84565b602002602001015163ffffffff168263ffffffff16106110875760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610a28565b6110cb888261ffff16815181106110a0576110a0612c84565b6020026020010151888361ffff16815181106110be576110be612c84565b6020026020010151611dda565b898261ffff1661ffff81106110e2576110e2612c84565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff831690811061114c5761114c612c84565b60200260200101519150808061116190612da1565b91505061100d565b508180611177600182612d66565b945094509450505093509350939050565b6000808061119f670de0b6b3a764000086046112c6565b905060006111b6670de0b6b3a764000086046112c6565b905060008263ffffffff161180156111d4575060008163ffffffff16115b6112085760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610a28565b63ffffffff8083166000908152600160209081526040808320938516835292905220541561125e5763ffffffff8083166000908152600160209081526040808320938516835292905290812054945092506112bd565b8063ffffffff1661126d610f35565b63ffffffff16106112995761128e8263ffffffff168263ffffffff16610c5b565b9350600192506112bd565b6112b68263ffffffff166112ab610f35565b63ffffffff16610c5b565b9350600092505b50509250929050565b8063ffffffff811681146113065760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610a28565b919050565b6000808361ffff16116113445760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610a28565b61ffff8261ffff16106113885760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610a28565b8261ffff168261ffff161161139e575081610822565b825b8261ffff168161ffff1610156113f4576001858261ffff1661ffff81106113c9576113c9612c84565b01805463ffffffff191663ffffffff92909216919091179055806113ec81612da1565b9150506113a0565b50909392505050565b6000610593826a1a1601fc4ea7109e000000611e52565b600082611439578115611428576000611432565b670de0b6b3a76400005b9050610593565b61082261144e61144885611e67565b84611f17565b611f23565b600080611473670de0b6b3a7640000676765c793fa10079d601b1b612cf7565b6108229084612d0b565b600061082283836001611f69565b60008261149a57506000610593565b60006114af6114a96001611742565b84611e52565b905060006114d1856114c16001611742565b6114cb9190612cb0565b83611414565b90506114dd6001611742565b6114e79082612d2a565b95945050505050565b336114f96109d8565b6001600160a01b03161461083b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a28565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106115bc576115bc612c84565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060008061160761088a565b60025485519294509092506116219163ffffffff16612cb0565b8263ffffffff16101561163c5787879450945050505061173a565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa737561166561201c565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546116b79043612d2a565b6201000655620100035463ffffffff166116cf610f35565b6116d99190612d41565b62010005805463ffffffff191663ffffffff92909216919091179055436201000455611703610f35565b62010003805463ffffffff191663ffffffff928316179055611732906004908a90859085908c908c9061202716565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561178157604051633492ffd960e01b815260048101839052602401610a28565b50670de0b6b3a76400000290565b611797612b09565b61179f612b09565b6000836117ad866001612dc3565b6117b79190612de9565b61ffff169050600060018561ffff16836117d19190612cb0565b6117db9190612d2a565b905060005b60016117ec8385612cb0565b901c9050886117ff61ffff881683612e0a565b61ffff811061181057611810612c84565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff161515918101829052955061186757611860816001612cb0565b92506117e0565b8861ffff8716611878836001612cb0565b6118829190612e0a565b61ffff811061189357611893612c84565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906118ff5750846000015163ffffffff168963ffffffff1611155b1561190a5750611935565b806119215761191a600183612d2a565b925061192f565b61192c826001612cb0565b93505b506117e0565b50505094509492505050565b611949612b09565b611951612b09565b878461ffff1661ffff811061196857611968612c84565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909350908816106119e7578663ffffffff16826000015163ffffffff1614156119d357611ae9565b816119de8787611dda565b91509150611ae9565b87836119f4866001612dc3565b6119fe9190612de9565b61ffff1661ffff8110611a1357611a13612c84565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611a985760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611ad85760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610a28565b611ae48888868661178f565b915091505b965096945050505050565b60008363ffffffff168563ffffffff161015611b2357604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff161415611bcb57611b3f612b09565b60048461ffff1661ffff8110611b5757611b57612c84565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090871614611bb457611bad610b5d565b9150611bc5565b80602001516001600160d81b031691505b50611d38565b6000611bd5610b5d565b9050600080611be96004888a868a8a611941565b91509150816000015163ffffffff168763ffffffff161415611c1a5781602001516001600160d81b03169350611d34565b805163ffffffff88811691161415611c415780602001516001600160d81b03169350611d34565b600082602001516001600160d81b031682602001516001600160d81b03161115611cb0576000676765c793fa10079d601b1b611c9784602001516001600160d81b031686602001516001600160d81b0316611d40565b611ca19190612d2a565b9050611cac81611d4e565b9150505b82518251600091611ce391670de0b6b3a764000091611cce91612d41565b63ffffffff16611cde9190612d0b565b6113fd565b90506000611cf1838361148b565b9050611d2e85602001516001600160d81b031682670de0b6b3a764000088600001518e611d1e9190612d41565b63ffffffff1661032c9190612d0b565b96505050505b5050505b949350505050565b60006108228383600161216e565b600080611d6e670de0b6b3a7640000676765c793fa10079d601b1b612cf7565b611d789084612cf7565b90506002611d99670de0b6b3a7640000676765c793fa10079d601b1b612cf7565b611da39190612cf7565b611dc0670de0b6b3a7640000676765c793fa10079d601b1b612cf7565b611dca9085612e0a565b1061059357610822600182612cb0565b611de2612b09565b6001600160d81b03821115611e225760405162461bcd60e51b8152600401610a28906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061082283670de0b6b3a764000084612209565b6000670de0b6b3a7640000821015611e9557604051633621413760e21b815260048101839052602401610a28565b6000611eaa670de0b6b3a764000084046122d7565b670de0b6b3a7640000808202935090915083821c90811415611ecd575050919050565b6706f05b59d3b200005b8015611f0f57670de0b6b3a7640000828002049150671bc16d674ec800008210611f07579283019260019190911c905b60011c611ed7565b505050919050565b600061082283836123b5565b6000680a688906bd8b0000008210611f5157604051634a4f26f160e01b815260048101839052602401610a28565b670de0b6b3a7640000604083901b0461082281612477565b6000831580611f76575082155b15611f8357506000610822565b6001826001811115611f9757611f97612e1e565b14611faa57670de0b6b3a7640000611fb7565b676765c793fa10079d601b1b5b6001836001811115611fcb57611fcb612e1e565b14611fe857611fe36002670de0b6b3a7640000612cf7565b611ffe565b611ffe6002676765c793fa10079d601b1b612cf7565b6120088587612d0b565b6120129190612cb0565b611d389190612cf7565b6000610f4042611742565b6000806000888861ffff1661ffff811061204357612043612c84565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908816141561209e5787859250925050611ae9565b8461ffff168461ffff161180156120c657506120bb600186612d66565b61ffff168861ffff16145b156120d3578391506120d7565b8491505b816120e3896001612dc3565b6120ed9190612de9565b92506120f98787611dda565b898461ffff1661ffff811061211057612110612c84565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b6000826121a65760405162461bcd60e51b8152600401610a28906020808252600490820152630444956360e41b604082015260600190565b60006121b3600285612cf7565b9050838160018560018111156121cb576121cb612e1e565b146121de57670de0b6b3a76400006121eb565b676765c793fa10079d601b1b5b6121f59088612d0b565b6121ff9190612cb0565b6114e79190612cf7565b6000808060001985870985870292508281108382030391505080600014156122445783828161223a5761223a612ce1565b0492505050610822565b83811061226e57604051631dcf306360e21b81526004810182905260248101859052604401610a28565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b82106122f757608091821c916122f49082612cb0565b90505b600160401b821061231557604091821c916123129082612cb0565b90505b600160201b821061233357602091821c916123309082612cb0565b90505b62010000821061235057601091821c9161234d9082612cb0565b90505b610100821061236c57600891821c916123699082612cb0565b90505b6010821061238757600491821c916123849082612cb0565b90505b600482106123a257600291821c9161239f9082612cb0565b90505b6002821061130657610593600182612cb0565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106123f95760405163698d9a0160e11b815260048101829052602401610a28565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826124335780670de0b6b3a7640000850401945050505050610593565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156124975768016a09e667f3bcc9090260401c5b6001603e1b8216156124b2576801306fe0a31b7152df0260401c5b6001603d1b8216156124cd576801172b83c7d517adce0260401c5b6001603c1b8216156124e85768010b5586cf9890f62a0260401c5b6001603b1b821615612503576801059b0d31585743ae0260401c5b6001603a1b82161561251e57680102c9a3e778060ee70260401c5b600160391b8216156125395768010163da9fb33356d80260401c5b600160381b82161561255457680100b1afa5abcbed610260401c5b600160371b82161561256f5768010058c86da1c09ea20260401c5b600160361b82161561258a576801002c605e2e8cec500260401c5b600160351b8216156125a557680100162f3904051fa10260401c5b600160341b8216156125c0576801000b175effdc76ba0260401c5b600160331b8216156125db57680100058ba01fb9f96d0260401c5b600160321b8216156125f65768010002c5cc37da94920260401c5b600160311b821615612611576801000162e525ee05470260401c5b600160301b82161561262c5768010000b17255775c040260401c5b6001602f1b821615612647576801000058b91b5bc9ae0260401c5b6001602e1b82161561266257680100002c5c89d5ec6d0260401c5b6001602d1b82161561267d5768010000162e43f4f8310260401c5b6001602c1b82161561269857680100000b1721bcfc9a0260401c5b6001602b1b8216156126b35768010000058b90cf1e6e0260401c5b6001602a1b8216156126ce576801000002c5c863b73f0260401c5b600160291b8216156126e957680100000162e430e5a20260401c5b600160281b821615612704576801000000b1721835510260401c5b600160271b82161561271f57680100000058b90c0b490260401c5b600160261b82161561273a5768010000002c5c8601cc0260401c5b600160251b821615612755576801000000162e42fff00260401c5b600160241b8216156127705768010000000b17217fbb0260401c5b600160231b82161561278b576801000000058b90bfce0260401c5b600160221b8216156127a657680100000002c5c85fe30260401c5b600160211b8216156127c15768010000000162e42ff10260401c5b600160201b8216156127dc57680100000000b17217f80260401c5b63800000008216156127f75768010000000058b90bfc0260401c5b6340000000821615612812576801000000002c5c85fe0260401c5b632000000082161561282d57680100000000162e42ff0260401c5b6310000000821615612848576801000000000b17217f0260401c5b630800000082161561286357680100000000058b90c00260401c5b630400000082161561287e5768010000000002c5c8600260401c5b6302000000821615612899576801000000000162e4300260401c5b63010000008216156128b45768010000000000b172180260401c5b628000008216156128ce576801000000000058b90c0260401c5b624000008216156128e857680100000000002c5c860260401c5b622000008216156129025768010000000000162e430260401c5b6210000082161561291c57680100000000000b17210260401c5b620800008216156129365768010000000000058b910260401c5b62040000821615612950576801000000000002c5c80260401c5b6202000082161561296a57680100000000000162e40260401c5b620100008216156129835761b172600160401b010260401c5b61800082161561299b576158b9600160401b010260401c5b6140008216156129b357612c5d600160401b010260401c5b6120008216156129cb5761162e600160401b010260401c5b6110008216156129e357610b17600160401b010260401c5b6108008216156129fb5761058c600160401b010260401c5b610400821615612a13576102c6600160401b010260401c5b610200821615612a2b57610163600160401b010260401c5b610100821615612a425760b1600160401b010260401c5b6080821615612a58576059600160401b010260401c5b6040821615612a6e57602c600160401b010260401c5b6020821615612a84576016600160401b010260401c5b6010821615612a9a57600b600160401b010260401c5b6008821615612ab0576006600160401b010260401c5b6004821615612ac6576003600160401b010260401c5b6002821615612adc576001600160401b010260401c5b6001821615612af2576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff8116811461130657600080fd5b60008060408385031215612b5057600080fd5b612b5983612b29565b9150612b6760208401612b29565b90509250929050565b600060208284031215612b8257600080fd5b5035919050565b60008060408385031215612b9c57600080fd5b50508035926020909101359150565b600060208284031215612bbd57600080fd5b813561ffff8116811461082257600080fd5b600080600060608486031215612be457600080fd5b505081359360208301359350604090920135919050565b600060208284031215612c0d57600080fd5b61082282612b29565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c08101612c4e8285612c16565b6108226060830184612c16565b600060208284031215612c6d57600080fd5b81356001600160a01b038116811461082257600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612cc357612cc3612c9a565b500190565b600060208284031215612cda57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082612d0657612d06612ce1565b500490565b6000816000190483118215151615612d2557612d25612c9a565b500290565b600082821015612d3c57612d3c612c9a565b500390565b600063ffffffff83811690831681811015612d5e57612d5e612c9a565b039392505050565b600061ffff83811690831681811015612d5e57612d5e612c9a565b60006001600160d81b0383811690831681811015612d5e57612d5e612c9a565b600061ffff80831681811415612db957612db9612c9a565b6001019392505050565b600061ffff808316818516808303821115612de057612de0612c9a565b01949350505050565b600061ffff80841680612dfe57612dfe612ce1565b92169190910692915050565b600082612e1957612e19612ce1565b500690565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204d3cac3235cbd5a48938a37a7ee3fc86457c5b8d18a9c28128bb39ff115645e564736f6c63430008090033";

export class TestCompoundRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    cToken: string,
    ethPool: boolean,
    underlying: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestCompoundRateOracle> {
    return super.deploy(
      cToken,
      ethPool,
      underlying,
      _decimals,
      overrides || {}
    ) as Promise<TestCompoundRateOracle>;
  }
  getDeployTransaction(
    cToken: string,
    ethPool: boolean,
    underlying: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      cToken,
      ethPool,
      underlying,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): TestCompoundRateOracle {
    return super.attach(address) as TestCompoundRateOracle;
  }
  connect(signer: Signer): TestCompoundRateOracle__factory {
    return super.connect(signer) as TestCompoundRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCompoundRateOracleInterface {
    return new utils.Interface(_abi) as TestCompoundRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCompoundRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestCompoundRateOracle;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockAaveLendingPool,
  MockAaveLendingPoolInterface,
} from "../MockAaveLendingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "asset",
        type: "address",
      },
    ],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct IAaveV2LendingPool.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "variableBorrowIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentLiquidityRate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentVariableBorrowRate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentStableBorrowRate",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "address",
            name: "aTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "stableDebtTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "variableDebtTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "interestRateStrategyAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
        ],
        internalType: "struct IAaveV2LendingPool.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "_underlyingAsset",
        type: "address",
      },
    ],
    name: "getReserveNormalizedIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "_underlyingAsset",
        type: "address",
      },
    ],
    name: "getReserveNormalizedVariableDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "aTokenAddress",
        type: "address",
      },
    ],
    name: "initReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_factorPerSecondInRay",
        type: "uint256",
      },
    ],
    name: "setFactorPerSecondInRay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reserveNormalizedIncome",
        type: "uint256",
      },
    ],
    name: "setReserveNormalizedIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reserveNormalizedVariableDebt",
        type: "uint256",
      },
    ],
    name: "setReserveNormalizedVariableDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611252806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806335ea6a751461007d578063374f1b08146100a6578063386497fd146100e0578063455ee00c1461010157806369328dec146101375780636c3fbb801461014a578063d15e00531461015d578063fdb387d514610170575b600080fd5b61009061008b366004610ffa565b61019a565b60405161009d9190611031565b60405180910390f35b6100de6100b4366004611117565b6001600160a01b039091166000908152600160209081526040808320939093556002905220429055565b005b6100f36100ee366004610ffa565b610278565b60405190815260200161009d565b6100de61010f366004611117565b6001600160a01b03909116600090815260208181526040808320939093556002905220429055565b6100f3610145366004611143565b61030e565b6100de610158366004611185565b610446565b6100f361016b366004610ffa565b61055e565b6100de61017e366004611117565b6001600160a01b03909116600090815260036020526040902055565b6101a2610f77565b506001600160a01b0390811660009081526004602081815260409283902083516101a08101855281546101808201908152815260018201546001600160801b0380821694830194909452600160801b908190048416958201959095526002820154808416606083015285900483166080820152600382015492831660a08201529390910464ffffffffff1660c084015290810154831660e0830152600581015483166101008301526006810154831661012083015260070154918216610140820152600160a01b90910460ff1661016082015290565b6001600160a01b03811660009081526003602052604081205480156102f1576001600160a01b0383166000908152600260205260408120546102ba90426111d4565b6001600160a01b0385166000908152600160205260409020549091506102e9906102e484846105e7565b61062f565b949350505050565b50506001600160a01b031660009081526001602052604090205490565b6001600160a01b0383811660009081526004602081905260408083208083015491516370a0823160e01b8152339381019390935292931690839082906370a082319060240160206040518083038186803b15801561036b57600080fd5b505afa15801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a391906111eb565b9050856000198114156103b35750805b826001600160a01b031663d7020d0a3388846103ce8d61055e565b6040516001600160e01b031960e087901b1681526001600160a01b03948516600482015293909216602484015260448301526064820152608401600060405180830381600087803b15801561042257600080fd5b505af1158015610436573d6000803e3d6000fd5b50929a9950505050505050505050565b61044e610f77565b6001600160a01b0391821660e08201908152928216600090815260046020818152604092839020845151815590840151928401516001600160801b03938416600160801b918516820217600183015560608501516080860151908516908516820217600283015560a085015160038301805460c0880151929096166001600160a81b03199687161764ffffffffff909216909202179055945190850180546001600160a01b03199081169286169290921790556101008301516005860180548316918616919091179055610120830151600686018054909216908516179055610140820151600790940180546101609093015194909316911617600160a01b60ff90931692909202919091179055565b6001600160a01b03811660009081526003602052604081205480156105ca576001600160a01b0383166000908152600260205260408120546105a090426111d4565b6001600160a01b0385166000908152602081905260409020549091506102e9906102e484846105e7565b50506001600160a01b031660009081526020819052604090205490565b60008261060c5781156105fb576000610605565b670de0b6b3a76400005b9050610629565b61062661062161061b8561063b565b8461062f565b6106f0565b90505b92915050565b6000610626838361073d565b6000670de0b6b3a764000082101561066e57604051633621413760e21b8152600481018390526024015b60405180910390fd5b6000610683670de0b6b3a764000084046107ff565b670de0b6b3a7640000808202935090915083821c908114156106a6575050919050565b6706f05b59d3b200005b80156106e857670de0b6b3a7640000828002049150671bc16d674ec8000082106106e0579283019260019190911c905b60011c6106b0565b505050919050565b6000680a688906bd8b000000821061071e57604051634a4f26f160e01b815260048101839052602401610665565b670de0b6b3a7640000604083901b04610736816108e5565b9392505050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106107815760405163698d9a0160e11b815260048101829052602401610665565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826107bb5780670de0b6b3a7640000850401945050505050610629565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000600160801b821061081f57608091821c9161081c9082611204565b90505b600160401b821061083d57604091821c9161083a9082611204565b90505b600160201b821061085b57602091821c916108589082611204565b90505b62010000821061087857601091821c916108759082611204565b90505b610100821061089457600891821c916108919082611204565b90505b601082106108af57600491821c916108ac9082611204565b90505b600482106108ca57600291821c916108c79082611204565b90505b600282106108e0576108dd600182611204565b90505b919050565b600160bf1b6001603f1b8216156109055768016a09e667f3bcc9090260401c5b6001603e1b821615610920576801306fe0a31b7152df0260401c5b6001603d1b82161561093b576801172b83c7d517adce0260401c5b6001603c1b8216156109565768010b5586cf9890f62a0260401c5b6001603b1b821615610971576801059b0d31585743ae0260401c5b6001603a1b82161561098c57680102c9a3e778060ee70260401c5b600160391b8216156109a75768010163da9fb33356d80260401c5b600160381b8216156109c257680100b1afa5abcbed610260401c5b600160371b8216156109dd5768010058c86da1c09ea20260401c5b600160361b8216156109f8576801002c605e2e8cec500260401c5b600160351b821615610a1357680100162f3904051fa10260401c5b600160341b821615610a2e576801000b175effdc76ba0260401c5b600160331b821615610a4957680100058ba01fb9f96d0260401c5b600160321b821615610a645768010002c5cc37da94920260401c5b600160311b821615610a7f576801000162e525ee05470260401c5b600160301b821615610a9a5768010000b17255775c040260401c5b6001602f1b821615610ab5576801000058b91b5bc9ae0260401c5b6001602e1b821615610ad057680100002c5c89d5ec6d0260401c5b6001602d1b821615610aeb5768010000162e43f4f8310260401c5b6001602c1b821615610b0657680100000b1721bcfc9a0260401c5b6001602b1b821615610b215768010000058b90cf1e6e0260401c5b6001602a1b821615610b3c576801000002c5c863b73f0260401c5b600160291b821615610b5757680100000162e430e5a20260401c5b600160281b821615610b72576801000000b1721835510260401c5b600160271b821615610b8d57680100000058b90c0b490260401c5b600160261b821615610ba85768010000002c5c8601cc0260401c5b600160251b821615610bc3576801000000162e42fff00260401c5b600160241b821615610bde5768010000000b17217fbb0260401c5b600160231b821615610bf9576801000000058b90bfce0260401c5b600160221b821615610c1457680100000002c5c85fe30260401c5b600160211b821615610c2f5768010000000162e42ff10260401c5b600160201b821615610c4a57680100000000b17217f80260401c5b6380000000821615610c655768010000000058b90bfc0260401c5b6340000000821615610c80576801000000002c5c85fe0260401c5b6320000000821615610c9b57680100000000162e42ff0260401c5b6310000000821615610cb6576801000000000b17217f0260401c5b6308000000821615610cd157680100000000058b90c00260401c5b6304000000821615610cec5768010000000002c5c8600260401c5b6302000000821615610d07576801000000000162e4300260401c5b6301000000821615610d225768010000000000b172180260401c5b62800000821615610d3c576801000000000058b90c0260401c5b62400000821615610d5657680100000000002c5c860260401c5b62200000821615610d705768010000000000162e430260401c5b62100000821615610d8a57680100000000000b17210260401c5b62080000821615610da45768010000000000058b910260401c5b62040000821615610dbe576801000000000002c5c80260401c5b62020000821615610dd857680100000000000162e40260401c5b62010000821615610df15761b172600160401b010260401c5b618000821615610e09576158b9600160401b010260401c5b614000821615610e2157612c5d600160401b010260401c5b612000821615610e395761162e600160401b010260401c5b611000821615610e5157610b17600160401b010260401c5b610800821615610e695761058c600160401b010260401c5b610400821615610e81576102c6600160401b010260401c5b610200821615610e9957610163600160401b010260401c5b610100821615610eb05760b1600160401b010260401c5b6080821615610ec6576059600160401b010260401c5b6040821615610edc57602c600160401b010260401c5b6020821615610ef2576016600160401b010260401c5b6010821615610f0857600b600160401b010260401c5b6008821615610f1e576006600160401b010260401c5b6004821615610f34576003600160401b010260401c5b6002821615610f4a576001600160401b010260401c5b6001821615610f60576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516101a08101825260006101808201818152825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b6001600160a01b0381168114610ff757600080fd5b50565b60006020828403121561100c57600080fd5b813561073681610fe2565b6001600160801b03169052565b6001600160a01b03169052565b81515181526101808101602083015161104d6020840182611017565b5060408301516110606040840182611017565b5060608301516110736060840182611017565b5060808301516110866080840182611017565b5060a083015161109960a0840182611017565b5060c08301516110b260c084018264ffffffffff169052565b5060e08301516110c560e0840182611024565b50610100808401516110d982850182611024565b5050610120808401516110ee82850182611024565b50506101408084015161110382850182611024565b50506101609283015160ff16919092015290565b6000806040838503121561112a57600080fd5b823561113581610fe2565b946020939093013593505050565b60008060006060848603121561115857600080fd5b833561116381610fe2565b925060208401359150604084013561117a81610fe2565b809150509250925092565b6000806040838503121561119857600080fd5b82356111a381610fe2565b915060208301356111b381610fe2565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111e6576111e66111be565b500390565b6000602082840312156111fd57600080fd5b5051919050565b60008219821115611217576112176111be565b50019056fea2646970667358221220dbfb5349df1888489eac9c6f1935a8cdc7e06d900e1882ae581f0da23908188064736f6c63430008090033";

export class MockAaveLendingPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockAaveLendingPool> {
    return super.deploy(overrides || {}) as Promise<MockAaveLendingPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockAaveLendingPool {
    return super.attach(address) as MockAaveLendingPool;
  }
  connect(signer: Signer): MockAaveLendingPool__factory {
    return super.connect(signer) as MockAaveLendingPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAaveLendingPoolInterface {
    return new utils.Interface(_abi) as MockAaveLendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockAaveLendingPool {
    return new Contract(address, _abi, signerOrProvider) as MockAaveLendingPool;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RocketPoolRateOracle,
  RocketPoolRateOracleInterface,
} from "../RocketPoolRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRocketEth",
        name: "_rocketEth",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "_times",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "_results",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketEth",
    outputs: [
      {
        internalType: "contract IRocketEth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200317e3803806200317e833981016040819052620000349162000868565b60006200004133620000c7565b6001600160a01b039081166080528316620000955760405162461bcd60e51b815260206004820152600f60248201526e14915512081b5d5cdd08195e1a5cdd608a1b60448201526064015b60405180910390fd5b6201000380546001600160a01b0319166001600160a01b038516179055620000be828262000117565b50505062000aa9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000126600261ffff6200097a565b825110620001485760405162461bcd60e51b81526004016200008c906200099d565b8151815161ffff821614620001715760405162461bcd60e51b81526004016200008c90620009bb565b600062000180826001620009e7565b61ffff166001600160401b038111156200019e576200019e62000786565b604051908082528060200260200182016040528015620001c8578160200160208202803683370190505b5090506000620001da836001620009e7565b61ffff166001600160401b03811115620001f857620001f862000786565b60405190808252806020026020018201604052801562000222578160200160208202803683370190505b50905060005b8361ffff16811015620002d3578581815181106200024a576200024a62000a10565b602002602001015183828151811062000267576200026762000a10565b602002602001019063ffffffff16908163ffffffff168152505084818151811062000296576200029662000a10565b6020026020010151828281518110620002b357620002b362000a10565b602090810291909101015280620002ca8162000a26565b91505062000228565b50620002e9620003a760201b6200089c1760201c565b828461ffff168151811062000302576200030262000a10565b63ffffffff9092166020928302919091019091015262000321620003b9565b818461ffff16815181106200033a576200033a62000a10565b60200260200101818152505062000363828260046200046b60201b620008ac179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff19909216959093169490941793909317919091161790555050505050565b6000620003b442620006b0565b905090565b6201000354604051638b32fa2360e01b81526b033b2e3c9fd0803ce800000060048201526000916001600160a01b031690638b32fa239060240160206040518083038186803b1580156200040c57600080fd5b505afa15801562000421573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000447919062000a44565b90508062000468576040516312469ef560e01b815260040160405180910390fd5b90565b600080600061ffff855110620004955760405162461bcd60e51b81526004016200008c906200099d565b8451845161ffff821614620004be5760405162461bcd60e51b81526004016200008c90620009bb565b60008161ffff1611620004f95760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016200008c565b6000805b8261ffff168161ffff1610156200068f57878161ffff168151811062000527576200052762000a10565b602002602001015163ffffffff168263ffffffff16106200057d5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016200008c565b620005cf888261ffff16815181106200059a576200059a62000a10565b6020026020010151888361ffff1681518110620005bb57620005bb62000a10565b6020026020010151620006f760201b60201c565b898261ffff1661ffff8110620005e957620005e962000a10565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff83169081106200066f576200066f62000a10565b602002602001015191508080620006869062000a5e565b915050620004fd565b5081806200069f60018262000a83565b945094509450505093509350939050565b8063ffffffff81168114620006f25760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016200008c565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620007565760405162461bcd60e51b81526004016200008c906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620007c757620007c762000786565b604052919050565b60006001600160401b03821115620007eb57620007eb62000786565b5060051b60200190565b600082601f8301126200080757600080fd5b81516020620008206200081a83620007cf565b6200079c565b82815260059290921b840181019181810190868411156200084057600080fd5b8286015b848110156200085d578051835291830191830162000844565b509695505050505050565b6000806000606084860312156200087e57600080fd5b83516001600160a01b03811681146200089657600080fd5b602085810151919450906001600160401b0380821115620008b657600080fd5b818701915087601f830112620008cb57600080fd5b8151620008dc6200081a82620007cf565b81815260059190911b8301840190848101908a831115620008fc57600080fd5b938501935b828510156200093057845163ffffffff81168114620009205760008081fd5b8252938501939085019062000901565b60408a015190975094505050808311156200094a57600080fd5b50506200095a86828701620007f5565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000826200099857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000a075762000a0762000964565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000a3d5762000a3d62000964565b5060010190565b60006020828403121562000a5757600080fd5b5051919050565b600061ffff8083168181141562000a795762000a7962000964565b6001019392505050565b600061ffff8381169083168181101562000aa15762000aa162000964565b039392505050565b6080516126b962000ac560003960006101eb01526126b96000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c80631195082e1461010157806322ff65681461013f578063252c09d71461015957806325f258dd1461019857806332148f67146101ab57806341453528146101c057806354124c64146101d35780636f307dc3146101e6578063715018a6146102255780637aa4db131461022d5780637cf2cc9f146102355780638da5cb5b1461023e57806393556dbd14610246578063af0c65a614610259578063bdb050921461026e578063c330c98d14610281578063c7db359b14610290578063efdf5d8b146102d8578063f2fde38b146102e0578063f739670c146102f3575b600080fd5b61012c61010f3660046123d7565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610147600481565b60405160ff9091168152602001610136565b61016c61016736600461240a565b610306565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610136565b61012c6101a6366004612423565b610340565b6101be6101b9366004612445565b6103b7565b005b61012c6101ce366004612423565b61043c565b61012c6101e1366004612469565b610450565b61020d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610136565b6101be6104a5565b6101be6104e9565b61012c60025481565b61020d610536565b61012c610254366004612423565b610545565b620100035461020d906001600160a01b031681565b6101be61027c36600461240a565b6105d5565b61012c670de0b6b3a764000081565b6003546102b39061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610136565b61012c610649565b6101be6102ee366004612495565b6106f5565b61012c610301366004612423565b610792565b60048161ffff811061031757600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b60008061034d8484610aef565b909250905080156103af57600061036d670de0b6b3a76400008604610c2d565b90506000610384670de0b6b3a76400008604610c2d565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff1660006103d360048385610c72565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146104375760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b60006104488383610aef565b509392505050565b60008061045c83610d67565b90506000610472670de0b6b3a7640000866124d4565b905060006104808284610d7e565b9050600061048d82610dbd565b90506104998882610de7565b98975050505050505050565b336104ae610536565b6001600160a01b0316146104dd5760405162461bcd60e51b81526004016104d4906124ec565b60405180910390fd5b6104e76000610df5565b565b60035461050e9061ffff80821691620100008104821691600160201b90910416610e45565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b60008183111561058a5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016104d4565b60006105968484610792565b905060006105a48585612521565b905060006105b182610f77565b905060006105be82610d67565b90506105ca8482610fc4565b979650505050505050565b336105de610536565b6001600160a01b0316146106045760405162461bcd60e51b81526004016104d4906124ec565b80600254146106465760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b6201000354604051638b32fa2360e01b8152676765c793fa10079d601b1b60048201526000916001600160a01b031690638b32fa239060240160206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190612538565b9050806106f2576040516312469ef560e01b815260040160405180910390fd5b90565b336106fe610536565b6001600160a01b0316146107245760405162461bcd60e51b81526004016104d4906124ec565b6001600160a01b0381166107895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d4565b61064681610df5565b6000818311156107d05760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016104d4565b818314156107e0575060006103b1565b60006107ea61089c565b905060006107f785610c2d565b9050600061080485610c2d565b600354909150600090610828908590859061ffff8082169162010000900416611029565b60035490915060009061084c908690859061ffff8082169162010000900416611029565b90508181111561088e576000610880676765c793fa10079d601b1b6108718486611275565b61087b9190612521565b611283565b96506103b195505050505050565b6000955050505050506103b1565b60006108a742610c2d565b905090565b600080600061ffff8551106108ec5760405162461bcd60e51b81526004016104d4906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff8216146109375760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b60448201526064016104d4565b60008161ffff16116109705760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016104d4565b6000805b8261ffff168161ffff161015610ad057878161ffff168151811061099a5761099a612551565b602002602001015163ffffffff168263ffffffff16106109ee5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016104d4565b610a32888261ffff1681518110610a0757610a07612551565b6020026020010151888361ffff1681518110610a2557610a25612551565b602002602001015161130f565b898261ffff1661ffff8110610a4957610a49612551565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610ab357610ab3612551565b602002602001015191508080610ac890612567565b915050610974565b508180610ade600182612589565b945094509450505093509350939050565b60008080610b06670de0b6b3a76400008604610c2d565b90506000610b1d670de0b6b3a76400008604610c2d565b905060008263ffffffff16118015610b3b575060008163ffffffff16115b610b6f5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016104d4565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610bc55763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610c24565b8063ffffffff16610bd461089c565b63ffffffff1610610c0057610bf58263ffffffff168263ffffffff16610792565b935060019250610c24565b610c1d8263ffffffff16610c1261089c565b63ffffffff16610792565b9350600092505b50509250929050565b8063ffffffff81168114610c6d5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016104d4565b919050565b6000808361ffff1611610cab5760405162461bcd60e51b81526020600482015260016024820152604960f81b60448201526064016104d4565b61ffff8261ffff1610610cef5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b60448201526064016104d4565b8261ffff168261ffff1611610d05575081610d60565b825b8261ffff168161ffff161015610d5b576001858261ffff1661ffff8110610d3057610d30612551565b01805463ffffffff191663ffffffff9290921691909117905580610d5381612567565b915050610d07565b508190505b9392505050565b60006103b1826a1a1601fc4ea7109e000000611387565b600082610da3578115610d92576000610d9c565b670de0b6b3a76400005b90506103b1565b610d60610db8610db28561139c565b8461144c565b611458565b600080610ddd670de0b6b3a7640000676765c793fa10079d601b1b6125c2565b610d6090846125d6565b6000610d608383600161149e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110610e6257610e62612551565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000610eac61089c565b9050816000015163ffffffff166002548263ffffffff16610ecd9190612521565b1015610ee0578686935093505050610f6f565b6000610eea610649565b90507f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375610f15611551565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a1610f6760048984848b8b61155c565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21821115610fb657604051633492ffd960e01b8152600481018390526024016104d4565b50670de0b6b3a76400000290565b600082610fd3575060006103b1565b6000610fe8610fe26001610f77565b84611387565b9050600061100a85610ffa6001610f77565b61100491906124d4565b83610d7e565b90506110166001610f77565b6110209082612521565b95945050505050565b60008363ffffffff168563ffffffff16101561105857604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff161415611100576110746123a3565b60048461ffff1661ffff811061108c5761108c612551565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146110e9576110e2610649565b91506110fa565b80602001516001600160d81b031691505b5061126d565b600061110a610649565b905060008061111e6004888a868a8a6116a4565b91509150816000015163ffffffff168763ffffffff16141561114f5781602001516001600160d81b03169350611269565b805163ffffffff888116911614156111765780602001516001600160d81b03169350611269565b600082602001516001600160d81b031682602001516001600160d81b031611156111e5576000676765c793fa10079d601b1b6111cc84602001516001600160d81b031686602001516001600160d81b0316611275565b6111d69190612521565b90506111e181611283565b9150505b8251825160009161121891670de0b6b3a764000091611203916125f5565b63ffffffff1661121391906125d6565b610d67565b905060006112268383610fc4565b905061126385602001516001600160d81b031682670de0b6b3a764000088600001518e61125391906125f5565b63ffffffff166101e191906125d6565b96505050505b5050505b949350505050565b6000610d6083836001611856565b6000806112a3670de0b6b3a7640000676765c793fa10079d601b1b6125c2565b6112ad90846125c2565b905060026112ce670de0b6b3a7640000676765c793fa10079d601b1b6125c2565b6112d891906125c2565b6112f5670de0b6b3a7640000676765c793fa10079d601b1b6125c2565b6112ff9085612612565b106103b157610d606001826124d4565b6113176123a3565b6001600160d81b038211156113575760405162461bcd60e51b81526004016104d4906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6000610d6083670de0b6b3a7640000846118f1565b6000670de0b6b3a76400008210156113ca57604051633621413760e21b8152600481018390526024016104d4565b60006113df670de0b6b3a764000084046119bf565b670de0b6b3a7640000808202935090915083821c90811415611402575050919050565b6706f05b59d3b200005b801561144457670de0b6b3a7640000828002049150671bc16d674ec80000821061143c579283019260019190911c905b60011c61140c565b505050919050565b6000610d608383611a9d565b6000680a688906bd8b000000821061148657604051634a4f26f160e01b8152600481018390526024016104d4565b670de0b6b3a7640000604083901b04610d6081611b5f565b60008315806114ab575082155b156114b857506000610d60565b60018260018111156114cc576114cc612626565b146114df57670de0b6b3a76400006114ec565b676765c793fa10079d601b1b5b600183600181111561150057611500612626565b1461151d576115186002670de0b6b3a76400006125c2565b611533565b6115336002676765c793fa10079d601b1b6125c2565b61153d85876125d6565b61154791906124d4565b61126d91906125c2565b60006108a742610f77565b6000806000888861ffff1661ffff811061157857611578612551565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881614156115d35787859250925050611699565b8461ffff168461ffff161180156115fb57506115f0600186612589565b61ffff168861ffff16145b156116085783915061160c565b8491505b8161161889600161263c565b6116229190612662565b925061162e878761130f565b898461ffff1661ffff811061164557611645612551565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b6116ac6123a3565b6116b46123a3565b878461ffff1661ffff81106116cb576116cb612551565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509088161061174a578663ffffffff16826000015163ffffffff16141561173657611699565b81611741878761130f565b91509150611699565b878361175786600161263c565b6117619190612662565b61ffff1661ffff811061177657611776612551565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506117fb5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff8089169116111561183b5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016104d4565b611847888886866121f1565b91509150965096945050505050565b60008261188e5760405162461bcd60e51b81526004016104d4906020808252600490820152630444956360e41b604082015260600190565b600061189b6002856125c2565b9050838160018560018111156118b3576118b3612626565b146118c657670de0b6b3a76400006118d3565b676765c793fa10079d601b1b5b6118dd90886125d6565b6118e791906124d4565b61102091906125c2565b60008080600019858709858702925082811083820303915050806000141561192c57838281611922576119226125ac565b0492505050610d60565b83811061195657604051631dcf306360e21b815260048101829052602481018590526044016104d4565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b82106119df57608091821c916119dc90826124d4565b90505b600160401b82106119fd57604091821c916119fa90826124d4565b90505b600160201b8210611a1b57602091821c91611a1890826124d4565b90505b620100008210611a3857601091821c91611a3590826124d4565b90505b6101008210611a5457600891821c91611a5190826124d4565b90505b60108210611a6f57600491821c91611a6c90826124d4565b90505b60048210611a8a57600291821c91611a8790826124d4565b90505b60028210610c6d576103b16001826124d4565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611ae15760405163698d9a0160e11b8152600481018290526024016104d4565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611b1b5780670de0b6b3a76400008504019450505050506103b1565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611b7f5768016a09e667f3bcc9090260401c5b6001603e1b821615611b9a576801306fe0a31b7152df0260401c5b6001603d1b821615611bb5576801172b83c7d517adce0260401c5b6001603c1b821615611bd05768010b5586cf9890f62a0260401c5b6001603b1b821615611beb576801059b0d31585743ae0260401c5b6001603a1b821615611c0657680102c9a3e778060ee70260401c5b600160391b821615611c215768010163da9fb33356d80260401c5b600160381b821615611c3c57680100b1afa5abcbed610260401c5b600160371b821615611c575768010058c86da1c09ea20260401c5b600160361b821615611c72576801002c605e2e8cec500260401c5b600160351b821615611c8d57680100162f3904051fa10260401c5b600160341b821615611ca8576801000b175effdc76ba0260401c5b600160331b821615611cc357680100058ba01fb9f96d0260401c5b600160321b821615611cde5768010002c5cc37da94920260401c5b600160311b821615611cf9576801000162e525ee05470260401c5b600160301b821615611d145768010000b17255775c040260401c5b6001602f1b821615611d2f576801000058b91b5bc9ae0260401c5b6001602e1b821615611d4a57680100002c5c89d5ec6d0260401c5b6001602d1b821615611d655768010000162e43f4f8310260401c5b6001602c1b821615611d8057680100000b1721bcfc9a0260401c5b6001602b1b821615611d9b5768010000058b90cf1e6e0260401c5b6001602a1b821615611db6576801000002c5c863b73f0260401c5b600160291b821615611dd157680100000162e430e5a20260401c5b600160281b821615611dec576801000000b1721835510260401c5b600160271b821615611e0757680100000058b90c0b490260401c5b600160261b821615611e225768010000002c5c8601cc0260401c5b600160251b821615611e3d576801000000162e42fff00260401c5b600160241b821615611e585768010000000b17217fbb0260401c5b600160231b821615611e73576801000000058b90bfce0260401c5b600160221b821615611e8e57680100000002c5c85fe30260401c5b600160211b821615611ea95768010000000162e42ff10260401c5b600160201b821615611ec457680100000000b17217f80260401c5b6380000000821615611edf5768010000000058b90bfc0260401c5b6340000000821615611efa576801000000002c5c85fe0260401c5b6320000000821615611f1557680100000000162e42ff0260401c5b6310000000821615611f30576801000000000b17217f0260401c5b6308000000821615611f4b57680100000000058b90c00260401c5b6304000000821615611f665768010000000002c5c8600260401c5b6302000000821615611f81576801000000000162e4300260401c5b6301000000821615611f9c5768010000000000b172180260401c5b62800000821615611fb6576801000000000058b90c0260401c5b62400000821615611fd057680100000000002c5c860260401c5b62200000821615611fea5768010000000000162e430260401c5b6210000082161561200457680100000000000b17210260401c5b6208000082161561201e5768010000000000058b910260401c5b62040000821615612038576801000000000002c5c80260401c5b6202000082161561205257680100000000000162e40260401c5b6201000082161561206b5761b172600160401b010260401c5b618000821615612083576158b9600160401b010260401c5b61400082161561209b57612c5d600160401b010260401c5b6120008216156120b35761162e600160401b010260401c5b6110008216156120cb57610b17600160401b010260401c5b6108008216156120e35761058c600160401b010260401c5b6104008216156120fb576102c6600160401b010260401c5b61020082161561211357610163600160401b010260401c5b61010082161561212a5760b1600160401b010260401c5b6080821615612140576059600160401b010260401c5b604082161561215657602c600160401b010260401c5b602082161561216c576016600160401b010260401c5b601082161561218257600b600160401b010260401c5b6008821615612198576006600160401b010260401c5b60048216156121ae576003600160401b010260401c5b60028216156121c4576001600160401b010260401c5b60018216156121da576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6121f96123a3565b6122016123a3565b60008361220f86600161263c565b6122199190612662565b61ffff169050600060018561ffff168361223391906124d4565b61223d9190612521565b905060005b600161224e83856124d4565b901c90508861226161ffff881683612612565b61ffff811061227257612272612551565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506122c9576122c28160016124d4565b9250612242565b8861ffff87166122da8360016124d4565b6122e49190612612565b61ffff81106122f5576122f5612551565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906123615750846000015163ffffffff168963ffffffff1611155b1561236c5750612397565b806123835761237c600183612521565b9250612391565b61238e8260016124d4565b93505b50612242565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610c6d57600080fd5b600080604083850312156123ea57600080fd5b6123f3836123c3565b9150612401602084016123c3565b90509250929050565b60006020828403121561241c57600080fd5b5035919050565b6000806040838503121561243657600080fd5b50508035926020909101359150565b60006020828403121561245757600080fd5b813561ffff81168114610d6057600080fd5b60008060006060848603121561247e57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156124a757600080fd5b81356001600160a01b0381168114610d6057600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156124e7576124e76124be565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612533576125336124be565b500390565b60006020828403121561254a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600061ffff8083168181141561257f5761257f6124be565b6001019392505050565b600061ffff838116908316818110156125a4576125a46124be565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826125d1576125d16125ac565b500490565b60008160001904831182151516156125f0576125f06124be565b500290565b600063ffffffff838116908316818110156125a4576125a46124be565b600082612621576126216125ac565b500690565b634e487b7160e01b600052602160045260246000fd5b600061ffff808316818516808303821115612659576126596124be565b01949350505050565b600061ffff80841680612677576126776125ac565b9216919091069291505056fea26469706673582212203210e4e62aea7f62540228bd1ff14061ff594b203fa7efd6daaae84c21409b3c64736f6c63430008090033";

export class RocketPoolRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rocketEth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RocketPoolRateOracle> {
    return super.deploy(
      _rocketEth,
      _times,
      _results,
      overrides || {}
    ) as Promise<RocketPoolRateOracle>;
  }
  getDeployTransaction(
    _rocketEth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rocketEth,
      _times,
      _results,
      overrides || {}
    );
  }
  attach(address: string): RocketPoolRateOracle {
    return super.attach(address) as RocketPoolRateOracle;
  }
  connect(signer: Signer): RocketPoolRateOracle__factory {
    return super.connect(signer) as RocketPoolRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RocketPoolRateOracleInterface {
    return new utils.Interface(_abi) as RocketPoolRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RocketPoolRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RocketPoolRateOracle;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Periphery, PeripheryInterface } from "../Periphery";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IVAMM",
        name: "_vamm",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "_lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "MarginCap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    name: "WETHSetting",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
    ],
    name: "getCurrentTick",
    outputs: [
      {
        internalType: "int24",
        name: "currentTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtRatioAX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioBX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "notionalAmount",
        type: "uint256",
      },
    ],
    name: "getLiquidityForNotional",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "lpMarginCaps",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "lpMarginCumulatives",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "marginDelta",
            type: "int256",
          },
        ],
        internalType: "struct IPeriphery.MintOrBurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintOrBurn",
    outputs: [
      {
        internalType: "int256",
        name: "positionMarginRequirement",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "_vamm",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "setLPMarginCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "_marginEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "_tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_tickUpper",
        type: "int24",
      },
    ],
    name: "settlePositionAndWithdrawMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "marginDelta",
            type: "uint256",
          },
        ],
        internalType: "struct IPeriphery.SwapPeripheryParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "int256",
        name: "_fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_fixedTokenDeltaUnbalanced",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "_tickAfter",
        type: "int24",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "_marginEngine",
        type: "address",
      },
      {
        internalType: "int24",
        name: "_tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_tickUpper",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "_marginDelta",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "_fullyWithdraw",
        type: "bool",
      },
    ],
    name: "updatePositionMargin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200291e3803806200291e83398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612882806200009c6000396000f3fe6080604052600436106100815760003560e01c8063040a5dc1146100865780631b44093d146100be5780632676938b146100e057806332e00daf1461011857806334907e34146101395780633fc8cef31461017c57806361b02452146101a9578063782085b5146101d6578063c19be59514610203578063f939640714610223575b600080fd5b34801561009257600080fd5b506100a66100a1366004611f5e565b610236565b60405160029190910b81526020015b60405180910390f35b3480156100ca57600080fd5b506100de6100d9366004611f7b565b610328565b005b3480156100ec57600080fd5b506101006100fb366004611fa7565b6104af565b6040516001600160801b0390911681526020016100b5565b61012b61012636600461204c565b610502565b6040519081526020016100b5565b61014c6101473660046120f4565b610a77565b604080519687526020870195909552938501929092526060840152608083015260020b60a082015260c0016100b5565b34801561018857600080fd5b5060005461019c906001600160a01b031681565b6040516100b591906121ae565b3480156101b557600080fd5b5061012b6101c4366004611f5e565b60026020526000908152604090205481565b3480156101e257600080fd5b5061012b6101f1366004611f5e565b60016020526000908152604090205481565b34801561020f57600080fd5b506100de61021e3660046121c2565b610f0e565b6100de61023136600461221e565b610f7b565b600080826001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027257600080fd5b505afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190612286565b9050806001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156102e557600080fd5b505afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d91906122a3565b602001519392505050565b816001600160a01b0381166103755760405162461bcd60e51b815260206004820152600e60248201526d76616d6d2061646472207a65726f60901b60448201526064015b60405180910390fd5b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b057600080fd5b505afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190612286565b9050336001600160a01b038216146104345760405162461bcd60e51b815260206004820152600f60248201526e37b7363c903b30b6b69037bbb732b960891b604482015260640161036c565b6001600160a01b03841660009081526001602052604090205483146104a9576001600160a01b03841660009081526001602052604090819020849055517f359cd6003fbab20721d687a623408d04791a7b8de287826b2590c13db66f02fb906104a09086908690612328565b60405180910390a15b50505050565b6000826001600160a01b0316846001600160a01b031611156104cf579192915b6104f86104f383600160601b6104e58888612357565b6001600160a01b03166115a7565b6116ba565b90505b9392505050565b600061051682602001518360400151611727565b600082600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055557600080fd5b505afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190612286565b835160208501516040808701519051634904f4dd60e11b81529394506000936001600160a01b0390931692639209e9ba926105cc92339260040161237f565b61014060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f91906123c6565b90506000826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069491906122a3565b805160208701519192506001600160a01b03161515906000906106b6906117ec565b905060006106c788604001516117ec565b905082610761576000600289604001518a602001516106e6919061245b565b6106f091906124b8565b905060006106fd826117ec565b6040516323fbaf6f60e11b81529091506001600160a01b038916906347f75ede9061072c9084906004016121ae565b600060405180830381600087803b15801561074657600080fd5b505af115801561075a573d6000803e3d6000fd5b5050505050505b60a08801511515806107735750600034115b1561079657610796886000015189602001518a604001518b60a001516000610f7b565b60006107a783838b606001516104af565b602087015160808b015160009a509192506001600160801b03161515901561085c5760208a01516040808c01519051635c6651a760e11b81526001600160a01b038b169263b8cca34e92610803923392919088906004016124f2565b602060405180830381600087803b15801561081d57600080fd5b505af1158015610831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108559190612525565b98506108eb565b60208a01516040808c01519051631f2f089360e01b81526001600160a01b038b1692631f2f089392610896923392919088906004016124f2565b602060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e89190612525565b98505b895160208b01516040808d01519051634904f4dd60e11b81526001600160a01b0390931692639209e9ba9261092492339260040161237f565b61014060405180830381600087803b15801561093f57600080fd5b505af1158015610953573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097791906123c6565b965060008088602001516001600160801b03161190508a600001516001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ca57600080fd5b505afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a02919061253e565b8015610a1257508180610a125750805b15610a69576000338a8d600001518e602001518f60400151604051602001610a3e95949392919061255b565b604051602081830303815290604052805190602001209050610a678a828b604001518686611b81565b505b505050505050505050919050565b600080600080600080610a9287608001518860a00151611727565b600087600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad157600080fd5b505afa158015610ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b099190612286565b9050876080015160020b6000148015610b27575060a088015160020b155b15610c94576000816001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6757600080fd5b505afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f919061259b565b90506000826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610bdc57600080fd5b505afa158015610bf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1491906122a3565b90506000828260200151610c2891906125b8565b90506000838360200151610c3c919061245b565b905062010deb19600283900b1215610c565762010deb1991505b610c6362010deb19612600565b60020b8160020b1315610c8057610c7d62010deb19612600565b90505b600291820b60808d0152900b60a08b015250505b60008860c001511180610ca75750600034115b15610cd257610cd2886000015189608001518a60a00151610ccb8c60c00151611cbe565b6000610f7b565b6000886020015115610cf257610ceb8960400151611cbe565b9050610d0b565b610cff8960400151611cbe565b610d0890612623565b90505b60006040518060a00160405280336001600160a01b031681526020018381526020018b606001516001600160a01b0316600014610d4c578b60600151610d8a565b8b6020015115610d7357610d6e60016c1fa71f3f5f68a90479ee3f8fec612357565b610d8a565b610d8a6b0816769404766de590afe04e6001612640565b6001600160a01b031681526020018b6080015160020b81526020018b60a0015160020b8152509050826001600160a01b03166367758e6e826040518263ffffffff1660e01b8152600401610e259190600060a08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160020b6060830152608083015160020b608083015292915050565b60a060405180830381600087803b158015610e3f57600080fd5b505af1158015610e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e77919061266b565b809950819a50829b50839c50849d505050505050826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610ec457600080fd5b505afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc91906122a3565b60200151935050505091939550919395565b60405163a725b96560e01b81526001600160a01b0385169063a725b96590610f3e9086908690869060040161237f565b600060405180830381600087803b158015610f5857600080fd5b505af1158015610f6c573d6000803e3d6000fd5b505050506104a9848383600060015b604051634904f4dd60e11b81526000906001600160a01b03871690639209e9ba90610fae9033908990899060040161237f565b61014060405180830381600087803b158015610fc957600080fd5b505af1158015610fdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100191906123c6565b90506000866001600160a01b0316632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b15801561103e57600080fd5b505afa158015611052573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110769190612286565b9050821561108f57816040015161108c90612623565b93505b6000546001600160a01b03828116911614156112af5760008413156110c65760405162461bcd60e51b815260040161036c906126ab565b60008412156111565734156110ed5760405162461bcd60e51b815260040161036c906126ab565b604051637717797f60e01b81526001600160a01b03881690637717797f9061111f9033908a908a908a906004016126c8565b600060405180830381600087803b15801561113957600080fd5b505af115801561114d573d6000803e3d6000fd5b505050506113c6565b34156112aa576000805460408051630d0e30db60e41b8152905134936001600160a01b039093169263d0e30db09285926004808301939282900301818588803b1580156111a257600080fd5b505af11580156111b6573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038616935063095ea7b392506111e991508b908590600401612328565b602060405180830381600087803b15801561120357600080fd5b505af1158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b919061253e565b50876001600160a01b0316637717797f33898961125786611cbe565b6040518563ffffffff1660e01b815260040161127694939291906126c8565b600060405180830381600087803b15801561129057600080fd5b505af11580156112a4573d6000803e3d6000fd5b50505050505b6113c6565b60008413156113c6576112d833306112c687611d28565b6001600160a01b038516929190611d7a565b806001600160a01b031663095ea7b3886112f187611d28565b6040518363ffffffff1660e01b815260040161130e929190612328565b602060405180830381600087803b15801561132857600080fd5b505af115801561133c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611360919061253e565b50604051637717797f60e01b81526001600160a01b03881690637717797f906113939033908a908a908a906004016126c8565b600060405180830381600087803b1580156113ad57600080fd5b505af11580156113c1573d6000803e3d6000fd5b505050505b6000876001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b15801561140157600080fd5b505afa158015611415573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611439919061253e565b90506000886001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561147657600080fd5b505afa15801561148a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ae9190612286565b604051634904f4dd60e11b81529091506001600160a01b038a1690639209e9ba906114e19033908c908c9060040161237f565b61014060405180830381600087803b1580156114fc57600080fd5b505af1158015611510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153491906123c6565b93508180156115505750600084602001516001600160801b0316115b1561159c57600033828b8b8b60405160200161157095949392919061255b565b60405160208183030381529060405280519060200120905061159a82828760400151600180611b81565b505b505050505050505050565b600080806000198587098587029250828110838203039150508060001415611617576000841161160c5760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b604482015260640161036c565b5082900490506104fb565b8084116116515760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b604482015260640161036c565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006001600160801b038211156117235760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161036c565b5090565b8060020b8260020b126117625760405162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015260640161036c565b62010deb19600283900b12156117a05760405162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015260640161036c565b6117ad62010deb19612600565b60020b8160020b13156117e85760405162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015260640161036c565b5050565b60008060008360020b12611803578260020b611810565b8260020b61181090612623565b905061181f62010deb19612600565b60020b8111156118555760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640161036c565b60006001821661186957600160801b61187b565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b0316905060028216156118b05760806118ab826ffff97272373d413259a46990580e213a6126f2565b901c90505b60048216156118da5760806118d5826ffff2e50f5f656932ef12357cf3c7fdcc6126f2565b901c90505b60088216156119045760806118ff826fffe5caca7e10e4e61c3624eaa0941cd06126f2565b901c90505b601082161561192e576080611929826fffcb9843d60f6159c9db58835c9266446126f2565b901c90505b6020821615611958576080611953826fff973b41fa98c081472e6896dfb254c06126f2565b901c90505b604082161561198257608061197d826fff2ea16466c96a3843ec78b326b528616126f2565b901c90505b60808216156119ac5760806119a7826ffe5dee046a99a2a811c461f1969c30536126f2565b901c90505b6101008216156119d75760806119d2826ffcbe86c7900a88aedcffc83b479aa3a46126f2565b901c90505b610200821615611a025760806119fd826ff987a7253ac413176f2b074cf7815e546126f2565b901c90505b610400821615611a2d576080611a28826ff3392b0822b70005940c7a398e4b70f36126f2565b901c90505b610800821615611a58576080611a53826fe7159475a2c29b7443b29c7fa6e889d96126f2565b901c90505b611000821615611a83576080611a7e826fd097f3bdfd2022b8845ad8f792aa58256126f2565b901c90505b612000821615611aae576080611aa9826fa9f746462d870fdf8a65dc1f90e061e56126f2565b901c90505b614000821615611ad9576080611ad4826f70d869a156d2a1b890bb3df62baf32f76126f2565b901c90505b618000821615611b04576080611aff826f31be135f97d08fd981231505542fcfa66126f2565b901c90505b62010000821615611b30576080611b2b826f09aa508b5b7a84e1c677de54f3e99bc96126f2565b901c90505b60008460020b1315611b4b57611b4881600019612711565b90505b611b59600160201b82612725565b15611b65576001611b68565b60005b611b799060ff16602083901c612739565b949350505050565b8015611c04576000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611bbd908490612751565b909155505060008481526003602090815260408083208690556001600160a01b0388168352600290915281208054859290611bf9908490612790565b90915550611c559050565b8115611c55576000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611c40908490612751565b90915550506000848152600360205260408120555b6001600160a01b0385166000908152600160209081526040808320546002909252909120541315611cb75760405162461bcd60e51b815260206004820152600c60248201526b1b1c0818d85c081b1a5b5a5d60a21b604482015260640161036c565b5050505050565b60006001600160ff1b038211156117235760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161036c565b6000808212156117235760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161036c565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091018252602080820180516001600160e01b03166323b872dd60e01b1790528251808401909352600783526629aa261032b93960c91b908301526104a991869190600090611dfb9084908490611e55565b805190915015611e505780806020019051810190611e19919061253e565b611e505760405162461bcd60e51b815260206004820152600860248201526714d5130819985a5b60c21b604482015260640161036c565b505050565b6060833b611e945760405162461bcd60e51b815260206004820152600c60248201526b1b9bdb8b58dbdb9d1c9858dd60a21b604482015260640161036c565b600080856001600160a01b0316600086604051611eb191906127fd565b60006040518083038185875af1925050503d8060008114611eee576040519150601f19603f3d011682016040523d82523d6000602084013e611ef3565b606091505b5091509150611f03828286611f0d565b9695505050505050565b60608315611f1c5750816104fb565b825115611f2c5782518084602001fd5b8160405162461bcd60e51b815260040161036c9190612819565b6001600160a01b0381168114611f5b57600080fd5b50565b600060208284031215611f7057600080fd5b81356104fb81611f46565b60008060408385031215611f8e57600080fd5b8235611f9981611f46565b946020939093013593505050565b600080600060608486031215611fbc57600080fd5b8335611fc781611f46565b92506020840135611fd781611f46565b929592945050506040919091013590565b60405161014081016001600160401b038111828210171561201957634e487b7160e01b600052604160045260246000fd5b60405290565b8060020b8114611f5b57600080fd5b80356120398161201f565b919050565b8015158114611f5b57600080fd5b600060c0828403121561205e57600080fd5b60405160c081016001600160401b038111828210171561208e57634e487b7160e01b600052604160045260246000fd5b604052823561209c81611f46565b815260208301356120ac8161201f565b602082015260408301356120bf8161201f565b60408201526060838101359082015260808301356120dc8161203e565b608082015260a0928301359281019290925250919050565b600060e0828403121561210657600080fd5b60405160e081016001600160401b038111828210171561213657634e487b7160e01b600052604160045260246000fd5b604052823561214481611f46565b815260208301356121548161203e565b602082015260408381013590820152606083013561217181611f46565b606082015260808301356121848161201f565b608082015261219560a0840161202e565b60a082015260c083013560c08201528091505092915050565b6001600160a01b0391909116815260200190565b600080600080608085870312156121d857600080fd5b84356121e381611f46565b935060208501356121f381611f46565b925060408501356122038161201f565b915060608501356122138161201f565b939692955090935050565b600080600080600060a0868803121561223657600080fd5b853561224181611f46565b945060208601356122518161201f565b935060408601356122618161201f565b92506060860135915060808601356122788161203e565b809150509295509295909350565b60006020828403121561229857600080fd5b81516104fb81611f46565b6000606082840312156122b557600080fd5b604051606081016001600160401b03811182821017156122e557634e487b7160e01b600052604160045260246000fd5b60405282516122f381611f46565b815260208301516123038161201f565b6020820152604083015160ff8116811461231c57600080fd5b60408201529392505050565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b038381169083168181101561237757612377612341565b039392505050565b6001600160a01b03939093168352600291820b6020840152900b604082015260600190565b80516120398161203e565b80516001600160801b038116811461203957600080fd5b600061014082840312156123d957600080fd5b6123e1611fe8565b6123ea836123a4565b81526123f8602084016123af565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b60008160020b8360020b6000821282627fffff0382138115161561248157612481612341565b82627fffff1903821281161561249957612499612341565b50019392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806124cf576124cf6124a2565b627fffff198214600019821416156124e9576124e9612341565b90059392505050565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260800190565b60006020828403121561253757600080fd5b5051919050565b60006020828403121561255057600080fd5b81516104fb8161203e565b6001600160601b0319606096871b8116825294861b851660148201529290941b909216602882015260e891821b603c82015291901b603f82015260420190565b6000602082840312156125ad57600080fd5b81516104fb8161201f565b60008160020b8360020b6000811281627fffff19018312811516156125df576125df612341565b81627fffff0183138116156125f6576125f6612341565b5090039392505050565b60008160020b627fffff1981141561261a5761261a612341565b60000392915050565b6000600160ff1b82141561263957612639612341565b5060000390565b60006001600160a01b0382811684821680830382111561266257612662612341565b01949350505050565b600080600080600060a0868803121561268357600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60208082526003908201526224a72b60e91b604082015260600190565b6001600160a01b03949094168452600292830b6020850152910b6040830152606082015260800190565b600081600019048311821515161561270c5761270c612341565b500290565b600082612720576127206124a2565b500490565b600082612734576127346124a2565b500690565b6000821982111561274c5761274c612341565b500190565b60008083128015600160ff1b85018412161561276f5761276f612341565b6001600160ff1b038401831381161561278a5761278a612341565b50500390565b600080821280156001600160ff1b03849003851316156127b2576127b2612341565b600160ff1b83900384128116156127cb576127cb612341565b50500190565b60005b838110156127ec5781810151838201526020016127d4565b838111156104a95750506000910152565b6000825161280f8184602087016127d1565b9190910192915050565b60208152600082518060208401526128388160408501602087016127d1565b601f01601f1916919091016040019291505056fea26469706673582212201022adbde38e74587c1091774a8add7f7406eb64572b39f498ee4db99956745564736f6c63430008090033";

export class Periphery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Periphery> {
    return super.deploy(_weth, overrides || {}) as Promise<Periphery>;
  }
  getDeployTransaction(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  attach(address: string): Periphery {
    return super.attach(address) as Periphery;
  }
  connect(signer: Signer): Periphery__factory {
    return super.connect(signer) as Periphery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeripheryInterface {
    return new utils.Interface(_abi) as PeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Periphery {
    return new Contract(address, _abi, signerOrProvider) as Periphery;
  }
}

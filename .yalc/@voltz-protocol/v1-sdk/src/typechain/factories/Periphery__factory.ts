/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Periphery, PeripheryInterface } from "../Periphery";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "MarginCap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "_lpMarginCaps",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "_lpMarginCumulatives",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
    ],
    name: "getCurrentTick",
    outputs: [
      {
        internalType: "int24",
        name: "currentTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtRatioAX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioBX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "notionalAmount",
        type: "uint256",
      },
    ],
    name: "getLiquidityForNotional",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
    ],
    name: "lpMarginCaps",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
    ],
    name: "lpMarginCumulatives",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "marginDelta",
            type: "int256",
          },
        ],
        internalType: "struct IPeriphery.MintOrBurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintOrBurn",
    outputs: [
      {
        internalType: "int256",
        name: "positionMarginRequirement",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
      {
        internalType: "int256",
        name: "lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "setLPMarginCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "vamm",
        type: "address",
      },
      {
        internalType: "int256",
        name: "lpMarginCumulative",
        type: "int256",
      },
    ],
    name: "setLPMarginCumulative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "settlePositionAndWithdrawMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "marginDelta",
            type: "uint256",
          },
        ],
        internalType: "struct IPeriphery.SwapPeripheryParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "int256",
        name: "_fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_fixedTokenDeltaUnbalanced",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "_tickAfter",
        type: "int24",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "marginDelta",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "fullyWithdraw",
        type: "bool",
      },
    ],
    name: "updatePositionMargin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002e0038038062002e0083398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612d64806200009c6000396000f3fe6080604052600436106100a25760003560e01c8063040a5dc1146100a757806305b20d18146100df5780631b44093d1461011a5780632676938b1461013c57806332e00daf1461017457806334907e341461018757806361b02452146101ca578063782085b514610200578063a176459514610236578063c19be59514610263578063e5a97cf014610283578063efa7c3d6146102b0578063f9396407146102d0575b600080fd5b3480156100b357600080fd5b506100c76100c236600461239d565b6102e3565b60405160029190910b81526020015b60405180910390f35b3480156100eb57600080fd5b5061010c6100fa36600461239d565b60016020526000908152604090205481565b6040519081526020016100d6565b34801561012657600080fd5b5061013a6101353660046123ba565b6103d5565b005b34801561014857600080fd5b5061015c6101573660046123e6565b6104fd565b6040516001600160801b0390911681526020016100d6565b61010c61018236600461248b565b610550565b61019a610195366004612533565b610b01565b604080519687526020870195909552938501929092526060840152608083015260020b60a082015260c0016100d6565b3480156101d657600080fd5b5061010c6101e536600461239d565b6001600160a01b031660009081526002602052604090205490565b34801561020c57600080fd5b5061010c61021b36600461239d565b6001600160a01b031660009081526001602052604090205490565b34801561024257600080fd5b50600054610256906001600160a01b031681565b6040516100d691906125ed565b34801561026f57600080fd5b5061013a61027e366004612601565b610f98565b34801561028f57600080fd5b5061010c61029e36600461239d565b60026020526000908152604090205481565b3480156102bc57600080fd5b5061013a6102cb3660046123ba565b61100f565b61013a6102de36600461265d565b6110f1565b600080826001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561031f57600080fd5b505afa158015610333573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035791906126c5565b9050806001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561039257600080fd5b505afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca91906126e2565b602001519392505050565b816001600160a01b0381166104055760405162461bcd60e51b81526004016103fc90612767565b60405180910390fd5b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047891906126c5565b9050336001600160a01b038216146104a25760405162461bcd60e51b81526004016103fc9061278f565b6001600160a01b03841660009081526001602052604090819020849055517f359cd6003fbab20721d687a623408d04791a7b8de287826b2590c13db66f02fb906104ef90869086906127b8565b60405180910390a150505050565b6000826001600160a01b0316846001600160a01b0316111561051d579192915b61054661054183600160601b61053388886127e7565b6001600160a01b0316611763565b611876565b90505b9392505050565b6000610564826020015183604001516118e3565b600082600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a357600080fd5b505afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db91906126c5565b835160208501516040808701519051634904f4dd60e11b81529394506000936001600160a01b0390931692639209e9ba9261061a92339260040161280f565b61014060405180830381600087803b15801561063557600080fd5b505af1158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190612856565b9050600084600001516001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e691906128eb565b90506000338487600001518860200151896040015160405160200161070f959493929190612908565b60405160208183030381529060405280519060200120905060008084602001516001600160801b03161190508280156107455750805b1561077357600082815260036020526040902054610773576040808501516000848152600360205291909120555b6000856001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156107ae57600080fd5b505afa1580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e691906126e2565b805160208a01519192506001600160a01b0316151590600090610808906119a8565b905060006108198b604001516119a8565b9050826108b357600060028c604001518d602001516108389190612948565b61084291906129a5565b9050600061084f826119a8565b6040516323fbaf6f60e11b81529091506001600160a01b038c16906347f75ede9061087e9084906004016125ed565b600060405180830381600087803b15801561089857600080fd5b505af11580156108ac573d6000803e3d6000fd5b5050505050505b60a08b01511515806108c55750600034115b156108e8576108e88b600001518c602001518d604001518e60a0015160006110f1565b60006108f983838e606001516104fd565b905060009a508b608001511561099c5760208c01516040808e01519051635c6651a760e11b81526001600160a01b038d169263b8cca34e92610943923392919087906004016129df565b602060405180830381600087803b15801561095d57600080fd5b505af1158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190612a12565b9a50610a2b565b60208c01516040808e01519051631f2f089360e01b81526001600160a01b038d1692631f2f0893926109d6923392919087906004016129df565b602060405180830381600087803b1580156109f057600080fd5b505af1158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190612a12565b9a505b8b5160208d01516040808f01519051634904f4dd60e11b81526001600160a01b0390931692639209e9ba92610a6492339260040161280f565b61014060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190612856565b60208101519099506001600160801b03161515888015610adb57508680610adb5750805b15610af157610af18b898c604001518a85611d3d565b5050505050505050505050919050565b600080600080600080610b1c87608001518860a001516118e3565b600087600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5b57600080fd5b505afa158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9391906126c5565b9050876080015160020b6000148015610bb1575060a088015160020b155b15610d1e576000816001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bf157600080fd5b505afa158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c299190612a2b565b90506000826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610c6657600080fd5b505afa158015610c7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9e91906126e2565b90506000828260200151610cb29190612a48565b90506000838360200151610cc69190612948565b905062010deb19600283900b1215610ce05762010deb1991505b610ced62010deb19612a90565b60020b8160020b1315610d0a57610d0762010deb19612a90565b90505b600291820b60808d0152900b60a08b015250505b60008860c001511180610d315750600034115b15610d5c57610d5c886000015189608001518a60a00151610d558c60c0015161200a565b60006110f1565b6000886020015115610d7c57610d75896040015161200a565b9050610d95565b610d89896040015161200a565b610d9290612ab3565b90505b60006040518060a00160405280336001600160a01b031681526020018381526020018b606001516001600160a01b0316600014610dd6578b60600151610e14565b8b6020015115610dfd57610df860016c1fa71f3f5f68a90479ee3f8fec6127e7565b610e14565b610e146b0816769404766de590afe04e6001612ad0565b6001600160a01b031681526020018b6080015160020b81526020018b60a0015160020b8152509050826001600160a01b03166367758e6e826040518263ffffffff1660e01b8152600401610eaf9190600060a08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160020b6060830152608083015160020b608083015292915050565b60a060405180830381600087803b158015610ec957600080fd5b505af1158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f019190612afb565b809950819a50829b50839c50849d505050505050826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610f4e57600080fd5b505afa158015610f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8691906126e2565b60200151935050505091939550919395565b60405163a725b96560e01b81526001600160a01b0385169063a725b96590610fc89086908690869060040161280f565b600060405180830381600087803b158015610fe257600080fd5b505af1158015610ff6573d6000803e3d6000fd5b50505050611009848383600060016110f1565b50505050565b816001600160a01b0381166110365760405162461bcd60e51b81526004016103fc90612767565b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561107157600080fd5b505afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a991906126c5565b9050336001600160a01b038216146110d35760405162461bcd60e51b81526004016103fc9061278f565b50506001600160a01b03909116600090815260026020526040902055565b604051634904f4dd60e11b81526000906001600160a01b03871690639209e9ba906111249033908990899060040161280f565b61014060405180830381600087803b15801561113f57600080fd5b505af1158015611153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111779190612856565b90506000866001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b1580156111b457600080fd5b505afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec91906128eb565b90506000876001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561122957600080fd5b505afa15801561123d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126191906126c5565b9050600033828a8a8a60405160200161127e959493929190612908565b6040516020818303038152906040528051906020012090508280156112b05750600084602001516001600160801b0316115b156112de576000818152600360205260409020546112de576040808501516000838152600360205291909120555b6000896001600160a01b0316632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b15801561131957600080fd5b505afa15801561132d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135191906126c5565b9050851561136a57846040015161136790612ab3565b96505b6000546001600160a01b038281169116141561158a5760008713156113a15760405162461bcd60e51b81526004016103fc90612b3b565b60008712156114315734156113c85760405162461bcd60e51b81526004016103fc90612b3b565b604051637717797f60e01b81526001600160a01b038b1690637717797f906113fa9033908d908d908d90600401612b58565b600060405180830381600087803b15801561141457600080fd5b505af1158015611428573d6000803e3d6000fd5b505050506116a1565b3415611585576000805460408051630d0e30db60e41b8152905134936001600160a01b039093169263d0e30db09285926004808301939282900301818588803b15801561147d57600080fd5b505af1158015611491573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038616935063095ea7b392506114c491508e9085906004016127b8565b602060405180830381600087803b1580156114de57600080fd5b505af11580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151691906128eb565b508a6001600160a01b0316637717797f338c8c6115328661200a565b6040518563ffffffff1660e01b81526004016115519493929190612b58565b600060405180830381600087803b15801561156b57600080fd5b505af115801561157f573d6000803e3d6000fd5b50505050505b6116a1565b60008713156116a1576115b333306115a18a612074565b6001600160a01b0385169291906120c6565b806001600160a01b031663095ea7b38b6115cc8a612074565b6040518363ffffffff1660e01b81526004016115e99291906127b8565b602060405180830381600087803b15801561160357600080fd5b505af1158015611617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163b91906128eb565b50604051637717797f60e01b81526001600160a01b038b1690637717797f9061166e9033908d908d908d90600401612b58565b600060405180830381600087803b15801561168857600080fd5b505af115801561169c573d6000803e3d6000fd5b505050505b604051634904f4dd60e11b81526001600160a01b038b1690639209e9ba906116d19033908d908d9060040161280f565b61014060405180830381600087803b1580156116ec57600080fd5b505af1158015611700573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117249190612856565b94508380156117405750600085602001516001600160801b0316115b156117575761175783838760400151600180611d3d565b50505050505050505050565b6000808060001985870985870292508281108382030391505080600014156117d357600084116117c85760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b60448201526064016103fc565b508290049050610549565b80841161180d5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b60448201526064016103fc565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006001600160801b038211156118df5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016103fc565b5090565b8060020b8260020b1261191e5760405162461bcd60e51b8152602060048201526003602482015262544c5560e81b60448201526064016103fc565b62010deb19600283900b121561195c5760405162461bcd60e51b8152602060048201526003602482015262544c4d60e81b60448201526064016103fc565b61196962010deb19612a90565b60020b8160020b13156119a45760405162461bcd60e51b815260206004820152600360248201526254554d60e81b60448201526064016103fc565b5050565b60008060008360020b126119bf578260020b6119cc565b8260020b6119cc90612ab3565b90506119db62010deb19612a90565b60020b811115611a115760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016103fc565b600060018216611a2557600160801b611a37565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b031690506002821615611a6c576080611a67826ffff97272373d413259a46990580e213a612b82565b901c90505b6004821615611a96576080611a91826ffff2e50f5f656932ef12357cf3c7fdcc612b82565b901c90505b6008821615611ac0576080611abb826fffe5caca7e10e4e61c3624eaa0941cd0612b82565b901c90505b6010821615611aea576080611ae5826fffcb9843d60f6159c9db58835c926644612b82565b901c90505b6020821615611b14576080611b0f826fff973b41fa98c081472e6896dfb254c0612b82565b901c90505b6040821615611b3e576080611b39826fff2ea16466c96a3843ec78b326b52861612b82565b901c90505b6080821615611b68576080611b63826ffe5dee046a99a2a811c461f1969c3053612b82565b901c90505b610100821615611b93576080611b8e826ffcbe86c7900a88aedcffc83b479aa3a4612b82565b901c90505b610200821615611bbe576080611bb9826ff987a7253ac413176f2b074cf7815e54612b82565b901c90505b610400821615611be9576080611be4826ff3392b0822b70005940c7a398e4b70f3612b82565b901c90505b610800821615611c14576080611c0f826fe7159475a2c29b7443b29c7fa6e889d9612b82565b901c90505b611000821615611c3f576080611c3a826fd097f3bdfd2022b8845ad8f792aa5825612b82565b901c90505b612000821615611c6a576080611c65826fa9f746462d870fdf8a65dc1f90e061e5612b82565b901c90505b614000821615611c95576080611c90826f70d869a156d2a1b890bb3df62baf32f7612b82565b901c90505b618000821615611cc0576080611cbb826f31be135f97d08fd981231505542fcfa6612b82565b901c90505b62010000821615611cec576080611ce7826f09aa508b5b7a84e1c677de54f3e99bc9612b82565b901c90505b60008460020b1315611d0757611d0481600019612ba1565b90505b611d15600160201b82612bb5565b15611d21576001611d24565b60005b611d359060ff16602083901c612bc9565b949350505050565b611d696040518060400160405280600a81526020016969734c504265666f726560b01b81525083612120565b611d946040518060400160405280600981526020016834b9a62820b33a32b960b91b81525082612120565b611dc7604051806040016040528060098152602001683732bba6b0b933b4b760b91b815250611dc285612074565b612165565b8015611ed657611e136040518060400160405280600e81526020016d36b0b933b4b7103132b337b9329d60911b815250611dc26003600088815260200190815260200160002054612074565b6000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611e49908490612be1565b909155505060008481526003602081815260408084208790558051808201909152600d81526c36b0b933b4b71030b33a32b91d60991b818301529287905252611e9590611dc285612074565b6000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611ecb908490612c20565b90915550611fa19050565b8115611fa1576000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611f12908490612be1565b92505081905550611f5f6040518060400160405280600e81526020016d36b0b933b4b7103132b337b9329d60911b815250611dc26003600088815260200190815260200160002054612074565b6000848152600360209081526040808320929092558151808301909252601082526f06d617267696e206265666f72653a20360841b90820152611fa1906121aa565b6001600160a01b03851660009081526001602090815260408083205460029092529091205413156120035760405162461bcd60e51b815260206004820152600c60248201526b1b1c0818d85c081b1a5b5a5d60a21b60448201526064016103fc565b5050505050565b60006001600160ff1b038211156118df5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016103fc565b6000808212156118df5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064016103fc565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526110099085906121f0565b6119a48282604051602401612136929190612cb9565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052612276565b6119a4828260405160240161217b929190612cdd565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052612276565b6121ed816040516024016121be9190612cff565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052612276565b50565b600061221c83836040518060400160405280600781526020016629aa261032b93960c91b815250612297565b805190915015612271578080602001905181019061223a91906128eb565b6122715760405162461bcd60e51b815260206004820152600860248201526714d5130819985a5b60c21b60448201526064016103fc565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060833b6122d65760405162461bcd60e51b815260206004820152600c60248201526b1b9bdb8b58dbdb9d1c9858dd60a21b60448201526064016103fc565b600080856001600160a01b03166000866040516122f39190612d12565b60006040518083038185875af1925050503d8060008114612330576040519150601f19603f3d011682016040523d82523d6000602084013e612335565b606091505b509150915061234582828661234f565b9695505050505050565b6060831561235e575081610549565b82511561236e5782518084602001fd5b8160405162461bcd60e51b81526004016103fc9190612cff565b6001600160a01b03811681146121ed57600080fd5b6000602082840312156123af57600080fd5b813561054981612388565b600080604083850312156123cd57600080fd5b82356123d881612388565b946020939093013593505050565b6000806000606084860312156123fb57600080fd5b833561240681612388565b9250602084013561241681612388565b929592945050506040919091013590565b60405161014081016001600160401b038111828210171561245857634e487b7160e01b600052604160045260246000fd5b60405290565b8060020b81146121ed57600080fd5b80356124788161245e565b919050565b80151581146121ed57600080fd5b600060c0828403121561249d57600080fd5b60405160c081016001600160401b03811182821017156124cd57634e487b7160e01b600052604160045260246000fd5b60405282356124db81612388565b815260208301356124eb8161245e565b602082015260408301356124fe8161245e565b604082015260608381013590820152608083013561251b8161247d565b608082015260a0928301359281019290925250919050565b600060e0828403121561254557600080fd5b60405160e081016001600160401b038111828210171561257557634e487b7160e01b600052604160045260246000fd5b604052823561258381612388565b815260208301356125938161247d565b60208201526040838101359082015260608301356125b081612388565b606082015260808301356125c38161245e565b60808201526125d460a0840161246d565b60a082015260c083013560c08201528091505092915050565b6001600160a01b0391909116815260200190565b6000806000806080858703121561261757600080fd5b843561262281612388565b9350602085013561263281612388565b925060408501356126428161245e565b915060608501356126528161245e565b939692955090935050565b600080600080600060a0868803121561267557600080fd5b853561268081612388565b945060208601356126908161245e565b935060408601356126a08161245e565b92506060860135915060808601356126b78161247d565b809150509295509295909350565b6000602082840312156126d757600080fd5b815161054981612388565b6000606082840312156126f457600080fd5b604051606081016001600160401b038111828210171561272457634e487b7160e01b600052604160045260246000fd5b604052825161273281612388565b815260208301516127428161245e565b6020820152604083015160ff8116811461275b57600080fd5b60408201529392505050565b6020808252600e908201526d76616d6d2061646472207a65726f60901b604082015260600190565b6020808252600f908201526e37b7363c903b30b6b69037bbb732b960891b604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015612807576128076127d1565b039392505050565b6001600160a01b03939093168352600291820b6020840152900b604082015260600190565b80516124788161247d565b80516001600160801b038116811461247857600080fd5b6000610140828403121561286957600080fd5b612871612427565b61287a83612834565b81526128886020840161283f565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000602082840312156128fd57600080fd5b81516105498161247d565b6001600160601b0319606096871b8116825294861b851660148201529290941b909216602882015260e891821b603c82015291901b603f82015260420190565b60008160020b8360020b6000821282627fffff0382138115161561296e5761296e6127d1565b82627fffff19038212811615612986576129866127d1565b50019392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806129bc576129bc61298f565b627fffff198214600019821416156129d6576129d66127d1565b90059392505050565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260800190565b600060208284031215612a2457600080fd5b5051919050565b600060208284031215612a3d57600080fd5b81516105498161245e565b60008160020b8360020b6000811281627fffff1901831281151615612a6f57612a6f6127d1565b81627fffff018313811615612a8657612a866127d1565b5090039392505050565b60008160020b627fffff19811415612aaa57612aaa6127d1565b60000392915050565b6000600160ff1b821415612ac957612ac96127d1565b5060000390565b60006001600160a01b03828116848216808303821115612af257612af26127d1565b01949350505050565b600080600080600060a08688031215612b1357600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60208082526003908201526224a72b60e91b604082015260600190565b6001600160a01b03949094168452600292830b6020850152910b6040830152606082015260800190565b6000816000190483118215151615612b9c57612b9c6127d1565b500290565b600082612bb057612bb061298f565b500490565b600082612bc457612bc461298f565b500690565b60008219821115612bdc57612bdc6127d1565b500190565b60008083128015600160ff1b850184121615612bff57612bff6127d1565b6001600160ff1b0384018313811615612c1a57612c1a6127d1565b50500390565b600080821280156001600160ff1b0384900385131615612c4257612c426127d1565b600160ff1b8390038412811615612c5b57612c5b6127d1565b50500190565b60005b83811015612c7c578181015183820152602001612c64565b838111156110095750506000910152565b60008151808452612ca5816020860160208601612c61565b601f01601f19169290920160200192915050565b604081526000612ccc6040830185612c8d565b905082151560208301529392505050565b604081526000612cf06040830185612c8d565b90508260208301529392505050565b6020815260006105496020830184612c8d565b60008251612d24818460208701612c61565b919091019291505056fea2646970667358221220c30b5f286b377d342588eab9977d0352ec703e0c30289de8d654598e8864363a64736f6c63430008090033";

export class Periphery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Periphery> {
    return super.deploy(weth_, overrides || {}) as Promise<Periphery>;
  }
  getDeployTransaction(
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth_, overrides || {});
  }
  attach(address: string): Periphery {
    return super.attach(address) as Periphery;
  }
  connect(signer: Signer): Periphery__factory {
    return super.connect(signer) as Periphery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeripheryInterface {
    return new utils.Interface(_abi) as PeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Periphery {
    return new Contract(address, _abi, signerOrProvider) as Periphery;
  }
}

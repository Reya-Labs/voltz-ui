/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestLidoRateOracle,
  TestLidoRateOracleInterface,
} from "../TestLidoRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStETH",
        name: "_stEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "contract IStETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003321380380620033218339810160408190526200003491620007a2565b604080516000808252602082018181528284019093528392906200005833620000e0565b6001600160a01b039081166080528316620000ad5760405162461bcd60e51b815260206004820152601060248201526f1cdd115512081b5d5cdd08195e1a5cdd60821b60448201526064015b60405180910390fd5b6201000380546001600160a01b0319166001600160a01b038516179055620000d6828262000130565b505050506200092f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200013f600261ffff62000800565b825110620001615760405162461bcd60e51b8152600401620000a49062000823565b8151815161ffff8216146200018a5760405162461bcd60e51b8152600401620000a49062000841565b6000620001998260016200086d565b61ffff166001600160401b03811115620001b757620001b7620007d4565b604051908082528060200260200182016040528015620001e1578160200160208202803683370190505b5090506000620001f38360016200086d565b61ffff166001600160401b03811115620002115762000211620007d4565b6040519080825280602002602001820160405280156200023b578160200160208202803683370190505b50905060005b8361ffff16811015620002ec5785818151811062000263576200026362000896565b602002602001015183828151811062000280576200028062000896565b602002602001019063ffffffff16908163ffffffff1681525050848181518110620002af57620002af62000896565b6020026020010151828281518110620002cc57620002cc62000896565b602090810291909101015280620002e381620008ac565b91505062000241565b5062000302620003c060201b62000b5c1760201c565b828461ffff16815181106200031b576200031b62000896565b63ffffffff909216602092830291909101909101526200033a620003d2565b818461ffff168151811062000353576200035362000896565b6020026020010181815250506200037c828260046200048760201b62000b6c179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff19909216959093169490941793909317919091161790555050505050565b6000620003cd42620006cc565b905090565b6201000354604051630f451f7160e31b81526b033b2e3c9fd0803ce800000060048201526000916001600160a01b031690637a28fb889060240160206040518083038186803b1580156200042557600080fd5b505afa1580156200043a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004609190620008ca565b90508062000484576040516001620723a560e01b0319815260040160405180910390fd5b90565b600080600061ffff855110620004b15760405162461bcd60e51b8152600401620000a49062000823565b8451845161ffff821614620004da5760405162461bcd60e51b8152600401620000a49062000841565b60008161ffff1611620005155760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000a4565b6000805b8261ffff168161ffff161015620006ab57878161ffff168151811062000543576200054362000896565b602002602001015163ffffffff168263ffffffff1610620005995760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000a4565b620005eb888261ffff1681518110620005b657620005b662000896565b6020026020010151888361ffff1681518110620005d757620005d762000896565b60200260200101516200071360201b60201c565b898261ffff1661ffff811062000605576200060562000896565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff83169081106200068b576200068b62000896565b602002602001015191508080620006a290620008e4565b91505062000519565b508180620006bb60018262000909565b945094509450505093509350939050565b8063ffffffff811681146200070e5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000a4565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620007725760405162461bcd60e51b8152600401620000a4906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600060208284031215620007b557600080fd5b81516001600160a01b0381168114620007cd57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826200081e57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff8083168185168083038211156200088d576200088d620007ea565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620008c357620008c3620007ea565b5060010190565b600060208284031215620008dd57600080fd5b5051919050565b600061ffff80831681811415620008ff57620008ff620007ea565b6001019392505050565b600061ffff83811690831681811015620009275762000927620007ea565b039392505050565b6080516129d66200094b600039600061029301526129d66000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c806301320aad146101435780631195082e1461015e57806322ff656814610189578063252c09d7146101a357806325f258dd146101e257806332148f67146101f55780633c155bd51461020a578063414535281461023257806354124c641461024557806356da9775146102585780636e035c051461027b5780636f307dc31461028e578063715018a6146102cd5780637aa4db13146102d55780637cf2cc9f146102dd5780638da5cb5b146102e657806393556dbd146102ee57806395f3e6051461030157806399940ece14610322578063bdb0509214610337578063c330c98d1461034a578063c7db359b14610359578063e9b69c0d146103a1578063efdf5d8b146103b4578063f2fde38b146103bc578063f739670c146103cf575b600080fd5b61014b6103e2565b6040519081526020015b60405180910390f35b61014b61016c366004612694565b600160209081526000928352604080842090915290825290205481565b610191600381565b60405160ff9091168152602001610155565b6101b66101b13660046126c7565b610449565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610155565b61014b6101f03660046126e0565b610483565b610208610203366004612702565b6104fa565b005b61021d610218366004612702565b61057f565b60408051928352602083019190915201610155565b61014b6102403660046126e0565b6105ec565b61014b610253366004612726565b610600565b61026b6102663660046126e0565b610655565b6040519015158152602001610155565b61014b6102893660046126e0565b6106bb565b6102b57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610155565b6102086106ce565b610208610712565b61014b60025481565b6102b561075f565b61014b6102fc3660046126e0565b61076e565b61031461030f366004612752565b6107fe565b604051610155929190612797565b62010003546102b5906001600160a01b031681565b6102086103453660046126c7565b610836565b61014b670de0b6b3a764000081565b60035461037c9061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610155565b61021d6103af366004612752565b6108aa565b61014b610906565b6102086103ca3660046127b2565b6109b5565b61014b6103dd3660046126e0565b610a52565b600354600090819060049061ffff908116908110610402576104026127db565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60048161ffff811061045a57600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104908484610daf565b909250905080156104f25760006104b0670de0b6b3a76400008604610eed565b905060006104c7670de0b6b3a76400008604610eed565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff16600061051660048385610f32565b6003805461ffff808416600160201b810261ffff60201b199093169290921790925591925083161461057a5760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff811061059c5761059c6127db565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006105f88383610daf565b509392505050565b60008061060c83611024565b90506000610622670de0b6b3a764000086612807565b90506000610630828461103b565b9050600061063d8261107a565b905061064988826110a4565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c00008261067c85846110a4565b9050600061068a86846110a4565b905081871115801561069c5750808710155b156106ae5760019450505050506104f4565b60009450505050506104f4565b60006106c783836110b2565b9392505050565b336106d761075f565b6001600160a01b0316146107065760405162461bcd60e51b81526004016106fd9061281f565b60405180910390fd5b6107106000611117565b565b6003546107379061ffff80821691620100008104821691600160201b90910416611167565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156107b35760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016106fd565b60006107bf8484610a52565b905060006107cd8585612854565b905060006107da82611299565b905060006107e782611024565b90506107f384826110b2565b979650505050505050565b610806612660565b61080e612660565b60035461082d90600490859061ffff80821691620100009004166112e6565b91509150915091565b3361083f61075f565b6001600160a01b0316146108655760405162461bcd60e51b81526004016106fd9061281f565b80600254146108a75760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006108b7610906565b90506000806108e5866108c8610b5c565b6003546004929190879061ffff8082169162010000900416611498565b6020918201519101516001600160d81b039182169891169650945050505050565b6201000354604051630f451f7160e31b8152676765c793fa10079d601b1b60048201526000916001600160a01b031690637a28fb889060240160206040518083038186803b15801561095757600080fd5b505afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f919061286b565b9050806109b2576040516001620723a560e01b0319815260040160405180910390fd5b90565b336109be61075f565b6001600160a01b0316146109e45760405162461bcd60e51b81526004016106fd9061281f565b6001600160a01b038116610a495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106fd565b6108a781611117565b600081831115610a905760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016106fd565b81831415610aa0575060006104f4565b6000610aaa610b5c565b90506000610ab785610eed565b90506000610ac485610eed565b600354909150600090610ae8908590859061ffff808216916201000090041661164b565b600354909150600090610b0c908690859061ffff808216916201000090041661164b565b905081811115610b4e576000610b40676765c793fa10079d601b1b610b318486611897565b610b3b9190612854565b6118a5565b96506104f495505050505050565b6000955050505050506104f4565b6000610b6742610eed565b905090565b600080600061ffff855110610bac5760405162461bcd60e51b81526004016106fd906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610bf75760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b60448201526064016106fd565b60008161ffff1611610c305760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016106fd565b6000805b8261ffff168161ffff161015610d9057878161ffff1681518110610c5a57610c5a6127db565b602002602001015163ffffffff168263ffffffff1610610cae5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016106fd565b610cf2888261ffff1681518110610cc757610cc76127db565b6020026020010151888361ffff1681518110610ce557610ce56127db565b6020026020010151611931565b898261ffff1661ffff8110610d0957610d096127db565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610d7357610d736127db565b602002602001015191508080610d8890612884565b915050610c34565b508180610d9e6001826128a6565b945094509450505093509350939050565b60008080610dc6670de0b6b3a76400008604610eed565b90506000610ddd670de0b6b3a76400008604610eed565b905060008263ffffffff16118015610dfb575060008163ffffffff16115b610e2f5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016106fd565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610e855763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610ee4565b8063ffffffff16610e94610b5c565b63ffffffff1610610ec057610eb58263ffffffff168263ffffffff16610a52565b935060019250610ee4565b610edd8263ffffffff16610ed2610b5c565b63ffffffff16610a52565b9350600092505b50509250929050565b8063ffffffff81168114610f2d5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016106fd565b919050565b6000808361ffff1611610f6b5760405162461bcd60e51b81526020600482015260016024820152604960f81b60448201526064016106fd565b61ffff8261ffff1610610faf5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b60448201526064016106fd565b8261ffff168261ffff1611610fc55750816106c7565b825b8261ffff168161ffff16101561101b576001858261ffff1661ffff8110610ff057610ff06127db565b01805463ffffffff191663ffffffff929092169190911790558061101381612884565b915050610fc7565b50909392505050565b60006104f4826a1a1601fc4ea7109e0000006119a9565b60008261106057811561104f576000611059565b670de0b6b3a76400005b90506104f4565b6106c761107561106f856119be565b84611a6e565b611a7a565b60008061109a670de0b6b3a7640000676765c793fa10079d601b1b6128df565b6106c790846128f3565b60006106c783836001611ac0565b6000826110c1575060006104f4565b60006110d66110d06001611299565b846119a9565b905060006110f8856110e86001611299565b6110f29190612807565b8361103b565b90506111046001611299565b61110e9082612854565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110611184576111846127db565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060006111ce610b5c565b9050816000015163ffffffff166002548263ffffffff166111ef9190612854565b1015611202578686935093505050611291565b600061120c610906565b90507f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611237611b73565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161128960048984848b8b611b7e565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156112d857604051633492ffd960e01b8152600481018390526024016106fd565b50670de0b6b3a76400000290565b6112ee612660565b6112f6612660565b600083611304866001612912565b61130e9190612938565b61ffff169050600060018561ffff16836113289190612807565b6113329190612854565b905060005b60016113438385612807565b901c90508861135661ffff881683612959565b61ffff8110611367576113676127db565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506113be576113b7816001612807565b9250611337565b8861ffff87166113cf836001612807565b6113d99190612959565b61ffff81106113ea576113ea6127db565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906114565750846000015163ffffffff168963ffffffff1611155b15611461575061148c565b8061147857611471600183612854565b9250611486565b611483826001612807565b93505b50611337565b50505094509492505050565b6114a0612660565b6114a8612660565b878461ffff1661ffff81106114bf576114bf6127db565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509088161061153e578663ffffffff16826000015163ffffffff16141561152a57611640565b816115358787611931565b91509150611640565b878361154b866001612912565b6115559190612938565b61ffff1661ffff811061156a5761156a6127db565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506115ef5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff8089169116111561162f5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016106fd565b61163b888886866112e6565b915091505b965096945050505050565b60008363ffffffff168563ffffffff16101561167a57604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff16141561172257611696612660565b60048461ffff1661ffff81106116ae576116ae6127db565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509087161461170b57611704610906565b915061171c565b80602001516001600160d81b031691505b5061188f565b600061172c610906565b90506000806117406004888a868a8a611498565b91509150816000015163ffffffff168763ffffffff1614156117715781602001516001600160d81b0316935061188b565b805163ffffffff888116911614156117985780602001516001600160d81b0316935061188b565b600082602001516001600160d81b031682602001516001600160d81b03161115611807576000676765c793fa10079d601b1b6117ee84602001516001600160d81b031686602001516001600160d81b0316611897565b6117f89190612854565b9050611803816118a5565b9150505b8251825160009161183a91670de0b6b3a7640000916118259161296d565b63ffffffff1661183591906128f3565b611024565b9050600061184883836110b2565b905061188585602001516001600160d81b031682670de0b6b3a764000088600001518e611875919061296d565b63ffffffff1661025391906128f3565b96505050505b5050505b949350505050565b60006106c783836001611cc5565b6000806118c5670de0b6b3a7640000676765c793fa10079d601b1b6128df565b6118cf90846128df565b905060026118f0670de0b6b3a7640000676765c793fa10079d601b1b6128df565b6118fa91906128df565b611917670de0b6b3a7640000676765c793fa10079d601b1b6128df565b6119219085612959565b106104f4576106c7600182612807565b611939612660565b6001600160d81b038211156119795760405162461bcd60e51b81526004016106fd906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b60006106c783670de0b6b3a764000084611d60565b6000670de0b6b3a76400008210156119ec57604051633621413760e21b8152600481018390526024016106fd565b6000611a01670de0b6b3a76400008404611e2e565b670de0b6b3a7640000808202935090915083821c90811415611a24575050919050565b6706f05b59d3b200005b8015611a6657670de0b6b3a7640000828002049150671bc16d674ec800008210611a5e579283019260019190911c905b60011c611a2e565b505050919050565b60006106c78383611f0c565b6000680a688906bd8b0000008210611aa857604051634a4f26f160e01b8152600481018390526024016106fd565b670de0b6b3a7640000604083901b046106c781611fce565b6000831580611acd575082155b15611ada575060006106c7565b6001826001811115611aee57611aee61298a565b14611b0157670de0b6b3a7640000611b0e565b676765c793fa10079d601b1b5b6001836001811115611b2257611b2261298a565b14611b3f57611b3a6002670de0b6b3a76400006128df565b611b55565b611b556002676765c793fa10079d601b1b6128df565b611b5f85876128f3565b611b699190612807565b61188f91906128df565b6000610b6742611299565b6000806000888861ffff1661ffff8110611b9a57611b9a6127db565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611bf55787859250925050611640565b8461ffff168461ffff16118015611c1d5750611c126001866128a6565b61ffff168861ffff16145b15611c2a57839150611c2e565b8491505b81611c3a896001612912565b611c449190612938565b9250611c508787611931565b898461ffff1661ffff8110611c6757611c676127db565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b600082611cfd5760405162461bcd60e51b81526004016106fd906020808252600490820152630444956360e41b604082015260600190565b6000611d0a6002856128df565b905083816001856001811115611d2257611d2261298a565b14611d3557670de0b6b3a7640000611d42565b676765c793fa10079d601b1b5b611d4c90886128f3565b611d569190612807565b61110e91906128df565b600080806000198587098587029250828110838203039150508060001415611d9b57838281611d9157611d916128c9565b04925050506106c7565b838110611dc557604051631dcf306360e21b815260048101829052602481018590526044016106fd565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611e4e57608091821c91611e4b9082612807565b90505b600160401b8210611e6c57604091821c91611e699082612807565b90505b600160201b8210611e8a57602091821c91611e879082612807565b90505b620100008210611ea757601091821c91611ea49082612807565b90505b6101008210611ec357600891821c91611ec09082612807565b90505b60108210611ede57600491821c91611edb9082612807565b90505b60048210611ef957600291821c91611ef69082612807565b90505b60028210610f2d576104f4600182612807565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611f505760405163698d9a0160e11b8152600481018290526024016106fd565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611f8a5780670de0b6b3a76400008504019450505050506104f4565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611fee5768016a09e667f3bcc9090260401c5b6001603e1b821615612009576801306fe0a31b7152df0260401c5b6001603d1b821615612024576801172b83c7d517adce0260401c5b6001603c1b82161561203f5768010b5586cf9890f62a0260401c5b6001603b1b82161561205a576801059b0d31585743ae0260401c5b6001603a1b82161561207557680102c9a3e778060ee70260401c5b600160391b8216156120905768010163da9fb33356d80260401c5b600160381b8216156120ab57680100b1afa5abcbed610260401c5b600160371b8216156120c65768010058c86da1c09ea20260401c5b600160361b8216156120e1576801002c605e2e8cec500260401c5b600160351b8216156120fc57680100162f3904051fa10260401c5b600160341b821615612117576801000b175effdc76ba0260401c5b600160331b82161561213257680100058ba01fb9f96d0260401c5b600160321b82161561214d5768010002c5cc37da94920260401c5b600160311b821615612168576801000162e525ee05470260401c5b600160301b8216156121835768010000b17255775c040260401c5b6001602f1b82161561219e576801000058b91b5bc9ae0260401c5b6001602e1b8216156121b957680100002c5c89d5ec6d0260401c5b6001602d1b8216156121d45768010000162e43f4f8310260401c5b6001602c1b8216156121ef57680100000b1721bcfc9a0260401c5b6001602b1b82161561220a5768010000058b90cf1e6e0260401c5b6001602a1b821615612225576801000002c5c863b73f0260401c5b600160291b82161561224057680100000162e430e5a20260401c5b600160281b82161561225b576801000000b1721835510260401c5b600160271b82161561227657680100000058b90c0b490260401c5b600160261b8216156122915768010000002c5c8601cc0260401c5b600160251b8216156122ac576801000000162e42fff00260401c5b600160241b8216156122c75768010000000b17217fbb0260401c5b600160231b8216156122e2576801000000058b90bfce0260401c5b600160221b8216156122fd57680100000002c5c85fe30260401c5b600160211b8216156123185768010000000162e42ff10260401c5b600160201b82161561233357680100000000b17217f80260401c5b638000000082161561234e5768010000000058b90bfc0260401c5b6340000000821615612369576801000000002c5c85fe0260401c5b632000000082161561238457680100000000162e42ff0260401c5b631000000082161561239f576801000000000b17217f0260401c5b63080000008216156123ba57680100000000058b90c00260401c5b63040000008216156123d55768010000000002c5c8600260401c5b63020000008216156123f0576801000000000162e4300260401c5b630100000082161561240b5768010000000000b172180260401c5b62800000821615612425576801000000000058b90c0260401c5b6240000082161561243f57680100000000002c5c860260401c5b622000008216156124595768010000000000162e430260401c5b6210000082161561247357680100000000000b17210260401c5b6208000082161561248d5768010000000000058b910260401c5b620400008216156124a7576801000000000002c5c80260401c5b620200008216156124c157680100000000000162e40260401c5b620100008216156124da5761b172600160401b010260401c5b6180008216156124f2576158b9600160401b010260401c5b61400082161561250a57612c5d600160401b010260401c5b6120008216156125225761162e600160401b010260401c5b61100082161561253a57610b17600160401b010260401c5b6108008216156125525761058c600160401b010260401c5b61040082161561256a576102c6600160401b010260401c5b61020082161561258257610163600160401b010260401c5b6101008216156125995760b1600160401b010260401c5b60808216156125af576059600160401b010260401c5b60408216156125c557602c600160401b010260401c5b60208216156125db576016600160401b010260401c5b60108216156125f157600b600160401b010260401c5b6008821615612607576006600160401b010260401c5b600482161561261d576003600160401b010260401c5b6002821615612633576001600160401b010260401c5b6001821615612649576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610f2d57600080fd5b600080604083850312156126a757600080fd5b6126b083612680565b91506126be60208401612680565b90509250929050565b6000602082840312156126d957600080fd5b5035919050565b600080604083850312156126f357600080fd5b50508035926020909101359150565b60006020828403121561271457600080fd5b813561ffff811681146106c757600080fd5b60008060006060848603121561273b57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561276457600080fd5b6106c782612680565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c081016127a5828561276d565b6106c7606083018461276d565b6000602082840312156127c457600080fd5b81356001600160a01b03811681146106c757600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561281a5761281a6127f1565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612866576128666127f1565b500390565b60006020828403121561287d57600080fd5b5051919050565b600061ffff8083168181141561289c5761289c6127f1565b6001019392505050565b600061ffff838116908316818110156128c1576128c16127f1565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826128ee576128ee6128c9565b500490565b600081600019048311821515161561290d5761290d6127f1565b500290565b600061ffff80831681851680830382111561292f5761292f6127f1565b01949350505050565b600061ffff8084168061294d5761294d6128c9565b92169190910692915050565b600082612968576129686128c9565b500690565b600063ffffffff838116908316818110156128c1576128c16127f1565b634e487b7160e01b600052602160045260246000fdfea26469706673582212207f2756a43a8a1069a9e5777af0eaa5f4e61738e64566ff6e18ad8766bd04080f64736f6c63430008090033";

export class TestLidoRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestLidoRateOracle> {
    return super.deploy(_stEth, overrides || {}) as Promise<TestLidoRateOracle>;
  }
  getDeployTransaction(
    _stEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stEth, overrides || {});
  }
  attach(address: string): TestLidoRateOracle {
    return super.attach(address) as TestLidoRateOracle;
  }
  connect(signer: Signer): TestLidoRateOracle__factory {
    return super.connect(signer) as TestLidoRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestLidoRateOracleInterface {
    return new utils.Interface(_abi) as TestLidoRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestLidoRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestLidoRateOracle;
  }
}

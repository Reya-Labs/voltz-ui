/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestLidoRateOracle,
  TestLidoRateOracleInterface,
} from "../TestLidoRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStETH",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "contract ILidoOracle",
        name: "_lidoOracle",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lidoOracle",
    outputs: [
      {
        internalType: "contract ILidoOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshBeaconSpec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "contract IStETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003d2638038062003d26833981016040819052620000349162000a65565b60408051600080825260208201908152818301909252849184918491826200005c33620001b6565b6001600160a01b0381166080524362010004556200008562000206602090811b6200104317901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b038516620001065760405162461bcd60e51b815260206004820152601060248201526f1cdd115512081b5d5cdd08195e1a5cdd60821b60448201526064015b60405180910390fd5b6001600160a01b0384166200015e5760405162461bcd60e51b815260206004820152601560248201527f6c69646f4f7261636c65206d75737420657869737400000000000000000000006044820152606401620000fd565b6201000780546001600160a01b038088166001600160a01b031992831617909255620100088054928716929091169190911790556200019c62000218565b620001a882826200030b565b505050505050505062000cf8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620002134262000596565b905090565b60008060006201000860009054906101000a90046001600160a01b03166001600160a01b031663e547c77c6040518163ffffffff1660e01b815260040160806040518083038186803b1580156200026e57600080fd5b505afa15801562000283573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a9919062000ae7565b620100088054600160a01b600160e01b031916600160a01b6001600160401b0384160217905591955093509150620002e49050828462000b5a565b6201000980546001600160401b0319166001600160401b0392909216919091179055505050565b6200031a600261ffff62000b8c565b8251106200033c5760405162461bcd60e51b8152600401620000fd9062000baf565b8151815161ffff821614620003655760405162461bcd60e51b8152600401620000fd9062000bcd565b60006200037482600162000bf9565b61ffff166001600160401b0381111562000392576200039262000ab9565b604051908082528060200260200182016040528015620003bc578160200160208202803683370190505b5090506000620003ce83600162000bf9565b61ffff166001600160401b03811115620003ec57620003ec62000ab9565b60405190808252806020026020018201604052801562000416578160200160208202803683370190505b50905060005b8361ffff16811015620004c7578581815181106200043e576200043e62000c22565b60200260200101518382815181106200045b576200045b62000c22565b602002602001019063ffffffff16908163ffffffff16815250508481815181106200048a576200048a62000c22565b6020026020010151828281518110620004a757620004a762000c22565b602090810291909101015280620004be8162000c38565b9150506200041c565b50600080620004d5620005dd565b9150915081848661ffff1681518110620004f357620004f362000c22565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff168151811062000527576200052762000c22565b60200260200101818152505062000550848460046200077860201b62001053179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620005d85760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000fd565b919050565b6201000754604051630f451f7160e31b81526b033b2e3c9fd0803ce80000006004820152600091829182916001600160a01b031690637a28fb889060240160206040518083038186803b1580156200063457600080fd5b505afa15801562000649573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200066f919062000c56565b90508062000693576040516001620723a560e01b0319815260040160405180910390fd5b6201000854604080516389896aef60e01b815290516000926001600160a01b0316916389896aef916004808301926020929190829003018186803b158015620006db57600080fd5b505afa158015620006f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000716919062000c56565b62010009549091506000906200076d906200073b906001600160401b03168462000c70565b62010008546200075c9190600160a01b90046001600160401b031662000c92565b6200059660201b620012961760201c565b959294509192505050565b600080600061ffff855110620007a25760405162461bcd60e51b8152600401620000fd9062000baf565b8451845161ffff821614620007cb5760405162461bcd60e51b8152600401620000fd9062000bcd565b60008161ffff1611620008065760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000fd565b6000805b8261ffff168161ffff1610156200099c57878161ffff168151811062000834576200083462000c22565b602002602001015163ffffffff168263ffffffff16106200088a5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000fd565b620008dc888261ffff1681518110620008a757620008a762000c22565b6020026020010151888361ffff1681518110620008c857620008c862000c22565b6020026020010151620009bd60201b60201c565b898261ffff1661ffff8110620008f657620008f662000c22565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff83169081106200097c576200097c62000c22565b602002602001015191508080620009939062000cad565b9150506200080a565b508180620009ac60018262000cd2565b945094509450505093509350939050565b60408051606081018252600080825260208201819052918101919091526001600160d81b0382111562000a1c5760405162461bcd60e51b8152600401620000fd906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b038116811462000a6257600080fd5b50565b60008060006060848603121562000a7b57600080fd5b835162000a888162000a4c565b602085015190935062000a9b8162000a4c565b604085015190925062000aae8162000a4c565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b80516001600160401b0381168114620005d857600080fd5b6000806000806080858703121562000afe57600080fd5b62000b098562000acf565b935062000b196020860162000acf565b925062000b296040860162000acf565b915062000b396060860162000acf565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038281168482168115158284048211161562000b835762000b8362000b44565b02949350505050565b60008262000baa57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000c195762000c1962000b44565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000c4f5762000c4f62000b44565b5060010190565b60006020828403121562000c6957600080fd5b5051919050565b600081600019048311821515161562000c8d5762000c8d62000b44565b500290565b6000821982111562000ca85762000ca862000b44565b500190565b600061ffff8083168181141562000cc85762000cc862000b44565b6001019392505050565b600061ffff8381169083168181101562000cf05762000cf062000b44565b039392505050565b60805161301262000d14600039600061037d01526130126000f3fe608060405234801561001057600080fd5b50600436106101a15760003560e01c806301320aad146101a65780631195082e146101c1578063163e9c4f146101ec57806317221ef1146101ff57806322ff65681461021257806324b18b171461022c578063252c09d71461026057806325f258dd1461029f57806332148f67146102b2578063357d7b5c146102c75780633c155bd5146102f4578063414535281461031c57806354124c641461032f57806356da9775146103425780636e035c05146103655780636f307dc314610378578063715018a61461039f5780637aa4db13146103a75780637cf2cc9f146103af5780638a6b8c5d146103b85780638da5cb5b146103c057806391aa375d146103c857806393556dbd146103f357806395f3e6051461040657806399940ece14610427578063bdb050921461043c578063c330c98d1461044f578063c7db359b1461045e578063ddc7a5aa146104a6578063e9b69c0d146104ae578063efdf5d8b146104c1578063f2fde38b146104c9578063f739670c146104dc578063f90ce5ba146104ef578063fe115fbe14610507575b600080fd5b6101ae61050f565b6040519081526020015b60405180910390f35b6101ae6101cf366004612c4b565b600160209081526000928352604080842090915290825290205481565b6101ae6101fa366004612c7e565b610576565b6101ae61020d366004612c7e565b610588565b61021a600381565b60405160ff90911681526020016101b8565b620100055462010006546102449163ffffffff169082565b6040805163ffffffff90931683526020830191909152016101b8565b61027361026e366004612c7e565b610594565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101b8565b6101ae6102ad366004612c97565b6105ce565b6102c56102c0366004612cb9565b610649565b005b62010008546102dc906001600160a01b031681565b6040516001600160a01b0390911681526020016101b8565b610307610302366004612cb9565b6106ce565b604080519283526020830191909152016101b8565b6101ae61032a366004612c97565b61073b565b6101ae61033d366004612cdd565b61074f565b610355610350366004612c97565b6107a4565b60405190151581526020016101b8565b6101ae610373366004612c97565b61080a565b6102dc7f000000000000000000000000000000000000000000000000000000000000000081565b6102c561081d565b6102c5610831565b6101ae60025481565b61024461087e565b6102dc6109f9565b6201000654620100055463ffffffff165b6040805192835263ffffffff9091166020830152016101b8565b6101ae610401366004612c97565b610a08565b610419610414366004612d09565b610a9d565b6040516101b8929190612d4e565b62010007546102dc906001600160a01b031681565b6102c561044a366004612c7e565b610ad5565b6101ae670de0b6b3a764000081565b6003546104819061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff948516815292841660208401529216918101919091526060016101b8565b6102c5610b22565b6103076104bc366004612d09565b610c0f565b6101ae610c6b565b6102c56104d7366004612d69565b610cf3565b6101ae6104ea366004612c97565b610d69565b620100035462010004546102449163ffffffff169082565b6103d9610e73565b600354600090819060049061ffff90811690811061052f5761052f612d92565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60006105828242610d69565b92915050565b60006105828242610a08565b60048161ffff81106105a557600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806105db84846112db565b90925090508015610642576000610600670de0b6b3a76400008604611296565b611296565b90506000610617670de0b6b3a76400008604611296565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff16600061066560048385611419565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146106c95760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff81106106eb576106eb612d92565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b600061074783836112db565b509392505050565b60008061075b8361150b565b90506000610771670de0b6b3a764000086612dbe565b9050600061077f8284611522565b9050600061078c82611561565b9050610798888261158b565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826107cb858461158b565b905060006107d9868461158b565b90508187111580156107eb5750808710155b156107fd576001945050505050610582565b6000945050505050610582565b60006108168383611599565b9392505050565b6108256115fe565b61082f600061165d565b565b6003546108569061ffff80821691620100008104821691600160201b909104166116ad565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6201000754604051630f451f7160e31b8152676765c793fa10079d601b1b6004820152600091829182916001600160a01b031690637a28fb889060240160206040518083038186803b1580156108d357600080fd5b505afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b9190612dd6565b90508061092e576040516001620723a560e01b0319815260040160405180910390fd5b6201000854604080516389896aef60e01b815290516000926001600160a01b0316916389896aef916004808301926020929190829003018186803b15801561097557600080fd5b505afa158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad9190612dd6565b62010009549091506000906109ee906109cf906001600160401b031684612def565b62010008546105fb9190600160a01b90046001600160401b0316612dbe565b959294509192505050565b6000546001600160a01b031690565b600081831115610a525760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064015b60405180910390fd5b6000610a5e8484610d69565b90506000610a6c8585612e0e565b90506000610a7982611850565b90506000610a868261150b565b9050610a928482611599565b979650505050505050565b610aa5612c17565b610aad612c17565b600354610acc90600490859061ffff808216916201000090041661189d565b91509150915091565b610add6115fe565b8060025414610b1f5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006201000860009054906101000a90046001600160a01b03166001600160a01b031663e547c77c6040518163ffffffff1660e01b815260040160806040518083038186803b158015610b7757600080fd5b505afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf9190612e3c565b620100088054600160a01b600160e01b031916600160a01b6001600160401b0384160217905591955093509150610be890508284612e90565b6201000980546001600160401b0319166001600160401b0392909216919091179055505050565b6000806000610c1c610c6b565b9050600080610c4a86610c2d611043565b6003546004929190879061ffff8082169162010000900416611a4f565b6020918201519101516001600160d81b039182169891169650945050505050565b6000806000610c7861087e565b91509150610c84611043565b63ffffffff168263ffffffff1610610c9c5792915050565b600080610ca7610e73565b915091508063ffffffff168285610cbc611043565b610cc69190612ebf565b63ffffffff16610cd69190612def565b610ce09190612efa565b610cea9084612dbe565b94505050505090565b610cfb6115fe565b6001600160a01b038116610d605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a49565b610b1f8161165d565b600081831115610da75760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610a49565b81831415610db757506000610582565b6000610dc1611043565b90506000610dce85611296565b90506000610ddb85611296565b600354909150600090610dff908590859061ffff8082169162010000900416611c02565b600354909150600090610e23908690859061ffff8082169162010000900416611c02565b905081811115610e65576000610e57676765c793fa10079d601b1b610e488486611e4e565b610e529190612e0e565b611e5c565b965061058295505050505050565b600095505050505050610582565b600354600090819061ffff16816001821015610ea757600354610ea29060019062010000900461ffff16612f0e565b610eba565b600354610eba9060019061ffff16612f0e565b60035490915060026201000090910461ffff1610801590610efb575060048161ffff1661ffff8110610eee57610eee612d92565b0154600160f81b900460ff165b8015610f58575060048261ffff1661ffff8110610f1a57610f1a612d92565b0154600160201b90046001600160d81b0316600461ffff838116908110610f4357610f43612d92565b0154600160201b90046001600160d81b031611155b610f8a5760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b6044820152606401610a49565b60048161ffff1661ffff8110610fa257610fa2612d92565b0154600160201b90046001600160d81b0316600461ffff848116908110610fcb57610fcb612d92565b0154610fe79190600160201b90046001600160d81b0316612f29565b6001600160d81b0316935060048161ffff1661ffff811061100a5761100a612d92565b015463ffffffff16600461ffff80851690811061102957611029612d92565b015461103b919063ffffffff16612ebf565b925050509091565b600061104e42611296565b905090565b600080600061ffff8551106110935760405162461bcd60e51b8152600401610a49906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff8216146110de5760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610a49565b60008161ffff16116111175760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610a49565b6000805b8261ffff168161ffff16101561127757878161ffff168151811061114157611141612d92565b602002602001015163ffffffff168263ffffffff16106111955760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610a49565b6111d9888261ffff16815181106111ae576111ae612d92565b6020026020010151888361ffff16815181106111cc576111cc612d92565b6020026020010151611ee8565b898261ffff1661ffff81106111f0576111f0612d92565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff831690811061125a5761125a612d92565b60200260200101519150808061126f90612f49565b91505061111b565b508180611285600182612f0e565b945094509450505093509350939050565b8063ffffffff811681146112d65760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610a49565b919050565b600080806112f2670de0b6b3a76400008604611296565b90506000611309670de0b6b3a76400008604611296565b905060008263ffffffff16118015611327575060008163ffffffff16115b61135b5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610a49565b63ffffffff808316600090815260016020908152604080832093851683529290522054156113b15763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250611410565b8063ffffffff166113c0611043565b63ffffffff16106113ec576113e18263ffffffff168263ffffffff16610d69565b935060019250611410565b6114098263ffffffff166113fe611043565b63ffffffff16610d69565b9350600092505b50509250929050565b6000808361ffff16116114525760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610a49565b61ffff8261ffff16106114965760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610a49565b8261ffff168261ffff16116114ac575081610816565b825b8261ffff168161ffff161015611502576001858261ffff1661ffff81106114d7576114d7612d92565b01805463ffffffff191663ffffffff92909216919091179055806114fa81612f49565b9150506114ae565b50909392505050565b6000610582826a1a1601fc4ea7109e000000611f60565b600082611547578115611536576000611540565b670de0b6b3a76400005b9050610582565b61081661155c61155685611f75565b84612025565b612031565b600080611581670de0b6b3a7640000676765c793fa10079d601b1b612efa565b6108169084612def565b600061081683836001612077565b6000826115a857506000610582565b60006115bd6115b76001611850565b84611f60565b905060006115df856115cf6001611850565b6115d99190612dbe565b83611522565b90506115eb6001611850565b6115f59082612e0e565b95945050505050565b336116076109f9565b6001600160a01b03161461082f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a49565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106116ca576116ca612d92565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060008061171561087e565b600254855192945090925061172f9163ffffffff16612dbe565b8263ffffffff16101561174a57878794509450505050611848565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa737561177361212a565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546117c59043612e0e565b6201000655620100035463ffffffff166117dd611043565b6117e79190612ebf565b62010005805463ffffffff191663ffffffff92909216919091179055436201000455611811611043565b62010003805463ffffffff191663ffffffff928316179055611840906004908a90859085908c908c9061213516565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561188f57604051633492ffd960e01b815260048101839052602401610a49565b50670de0b6b3a76400000290565b6118a5612c17565b6118ad612c17565b6000836118bb866001612f6b565b6118c59190612f91565b61ffff169050600060018561ffff16836118df9190612dbe565b6118e99190612e0e565b905060005b60016118fa8385612dbe565b901c90508861190d61ffff881683612fb2565b61ffff811061191e5761191e612d92565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506119755761196e816001612dbe565b92506118ee565b8861ffff8716611986836001612dbe565b6119909190612fb2565b61ffff81106119a1576119a1612d92565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff1615159282019290925286519095508982169116118015908190611a0d5750846000015163ffffffff168963ffffffff1611155b15611a185750611a43565b80611a2f57611a28600183612e0e565b9250611a3d565b611a3a826001612dbe565b93505b506118ee565b50505094509492505050565b611a57612c17565b611a5f612c17565b878461ffff1661ffff8110611a7657611a76612d92565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611af5578663ffffffff16826000015163ffffffff161415611ae157611bf7565b81611aec8787611ee8565b91509150611bf7565b8783611b02866001612f6b565b611b0c9190612f91565b61ffff1661ffff8110611b2157611b21612d92565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611ba65760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611be65760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610a49565b611bf28888868661189d565b915091505b965096945050505050565b60008363ffffffff168563ffffffff161015611c3157604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff161415611cd957611c4d612c17565b60048461ffff1661ffff8110611c6557611c65612d92565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090871614611cc257611cbb610c6b565b9150611cd3565b80602001516001600160d81b031691505b50611e46565b6000611ce3610c6b565b9050600080611cf76004888a868a8a611a4f565b91509150816000015163ffffffff168763ffffffff161415611d285781602001516001600160d81b03169350611e42565b805163ffffffff88811691161415611d4f5780602001516001600160d81b03169350611e42565b600082602001516001600160d81b031682602001516001600160d81b03161115611dbe576000676765c793fa10079d601b1b611da584602001516001600160d81b031686602001516001600160d81b0316611e4e565b611daf9190612e0e565b9050611dba81611e5c565b9150505b82518251600091611df191670de0b6b3a764000091611ddc91612ebf565b63ffffffff16611dec9190612def565b61150b565b90506000611dff8383611599565b9050611e3c85602001516001600160d81b031682670de0b6b3a764000088600001518e611e2c9190612ebf565b63ffffffff1661033d9190612def565b96505050505b5050505b949350505050565b60006108168383600161227c565b600080611e7c670de0b6b3a7640000676765c793fa10079d601b1b612efa565b611e869084612efa565b90506002611ea7670de0b6b3a7640000676765c793fa10079d601b1b612efa565b611eb19190612efa565b611ece670de0b6b3a7640000676765c793fa10079d601b1b612efa565b611ed89085612fb2565b1061058257610816600182612dbe565b611ef0612c17565b6001600160d81b03821115611f305760405162461bcd60e51b8152600401610a49906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061081683670de0b6b3a764000084612317565b6000670de0b6b3a7640000821015611fa357604051633621413760e21b815260048101839052602401610a49565b6000611fb8670de0b6b3a764000084046123e5565b670de0b6b3a7640000808202935090915083821c90811415611fdb575050919050565b6706f05b59d3b200005b801561201d57670de0b6b3a7640000828002049150671bc16d674ec800008210612015579283019260019190911c905b60011c611fe5565b505050919050565b600061081683836124c3565b6000680a688906bd8b000000821061205f57604051634a4f26f160e01b815260048101839052602401610a49565b670de0b6b3a7640000604083901b0461081681612585565b6000831580612084575082155b1561209157506000610816565b60018260018111156120a5576120a5612fc6565b146120b857670de0b6b3a76400006120c5565b676765c793fa10079d601b1b5b60018360018111156120d9576120d9612fc6565b146120f6576120f16002670de0b6b3a7640000612efa565b61210c565b61210c6002676765c793fa10079d601b1b612efa565b6121168587612def565b6121209190612dbe565b611e469190612efa565b600061104e42611850565b6000806000888861ffff1661ffff811061215157612151612d92565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881614156121ac5787859250925050611bf7565b8461ffff168461ffff161180156121d457506121c9600186612f0e565b61ffff168861ffff16145b156121e1578391506121e5565b8491505b816121f1896001612f6b565b6121fb9190612f91565b92506122078787611ee8565b898461ffff1661ffff811061221e5761221e612d92565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b6000826122b45760405162461bcd60e51b8152600401610a49906020808252600490820152630444956360e41b604082015260600190565b60006122c1600285612efa565b9050838160018560018111156122d9576122d9612fc6565b146122ec57670de0b6b3a76400006122f9565b676765c793fa10079d601b1b5b6123039088612def565b61230d9190612dbe565b6115f59190612efa565b6000808060001985870985870292508281108382030391505080600014156123525783828161234857612348612ee4565b0492505050610816565b83811061237c57604051631dcf306360e21b81526004810182905260248101859052604401610a49565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b821061240557608091821c916124029082612dbe565b90505b600160401b821061242357604091821c916124209082612dbe565b90505b600160201b821061244157602091821c9161243e9082612dbe565b90505b62010000821061245e57601091821c9161245b9082612dbe565b90505b610100821061247a57600891821c916124779082612dbe565b90505b6010821061249557600491821c916124929082612dbe565b90505b600482106124b057600291821c916124ad9082612dbe565b90505b600282106112d657610582600182612dbe565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106125075760405163698d9a0160e11b815260048101829052602401610a49565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826125415780670de0b6b3a7640000850401945050505050610582565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156125a55768016a09e667f3bcc9090260401c5b6001603e1b8216156125c0576801306fe0a31b7152df0260401c5b6001603d1b8216156125db576801172b83c7d517adce0260401c5b6001603c1b8216156125f65768010b5586cf9890f62a0260401c5b6001603b1b821615612611576801059b0d31585743ae0260401c5b6001603a1b82161561262c57680102c9a3e778060ee70260401c5b600160391b8216156126475768010163da9fb33356d80260401c5b600160381b82161561266257680100b1afa5abcbed610260401c5b600160371b82161561267d5768010058c86da1c09ea20260401c5b600160361b821615612698576801002c605e2e8cec500260401c5b600160351b8216156126b357680100162f3904051fa10260401c5b600160341b8216156126ce576801000b175effdc76ba0260401c5b600160331b8216156126e957680100058ba01fb9f96d0260401c5b600160321b8216156127045768010002c5cc37da94920260401c5b600160311b82161561271f576801000162e525ee05470260401c5b600160301b82161561273a5768010000b17255775c040260401c5b6001602f1b821615612755576801000058b91b5bc9ae0260401c5b6001602e1b82161561277057680100002c5c89d5ec6d0260401c5b6001602d1b82161561278b5768010000162e43f4f8310260401c5b6001602c1b8216156127a657680100000b1721bcfc9a0260401c5b6001602b1b8216156127c15768010000058b90cf1e6e0260401c5b6001602a1b8216156127dc576801000002c5c863b73f0260401c5b600160291b8216156127f757680100000162e430e5a20260401c5b600160281b821615612812576801000000b1721835510260401c5b600160271b82161561282d57680100000058b90c0b490260401c5b600160261b8216156128485768010000002c5c8601cc0260401c5b600160251b821615612863576801000000162e42fff00260401c5b600160241b82161561287e5768010000000b17217fbb0260401c5b600160231b821615612899576801000000058b90bfce0260401c5b600160221b8216156128b457680100000002c5c85fe30260401c5b600160211b8216156128cf5768010000000162e42ff10260401c5b600160201b8216156128ea57680100000000b17217f80260401c5b63800000008216156129055768010000000058b90bfc0260401c5b6340000000821615612920576801000000002c5c85fe0260401c5b632000000082161561293b57680100000000162e42ff0260401c5b6310000000821615612956576801000000000b17217f0260401c5b630800000082161561297157680100000000058b90c00260401c5b630400000082161561298c5768010000000002c5c8600260401c5b63020000008216156129a7576801000000000162e4300260401c5b63010000008216156129c25768010000000000b172180260401c5b628000008216156129dc576801000000000058b90c0260401c5b624000008216156129f657680100000000002c5c860260401c5b62200000821615612a105768010000000000162e430260401c5b62100000821615612a2a57680100000000000b17210260401c5b62080000821615612a445768010000000000058b910260401c5b62040000821615612a5e576801000000000002c5c80260401c5b62020000821615612a7857680100000000000162e40260401c5b62010000821615612a915761b172600160401b010260401c5b618000821615612aa9576158b9600160401b010260401c5b614000821615612ac157612c5d600160401b010260401c5b612000821615612ad95761162e600160401b010260401c5b611000821615612af157610b17600160401b010260401c5b610800821615612b095761058c600160401b010260401c5b610400821615612b21576102c6600160401b010260401c5b610200821615612b3957610163600160401b010260401c5b610100821615612b505760b1600160401b010260401c5b6080821615612b66576059600160401b010260401c5b6040821615612b7c57602c600160401b010260401c5b6020821615612b92576016600160401b010260401c5b6010821615612ba857600b600160401b010260401c5b6008821615612bbe576006600160401b010260401c5b6004821615612bd4576003600160401b010260401c5b6002821615612bea576001600160401b010260401c5b6001821615612c00576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff811681146112d657600080fd5b60008060408385031215612c5e57600080fd5b612c6783612c37565b9150612c7560208401612c37565b90509250929050565b600060208284031215612c9057600080fd5b5035919050565b60008060408385031215612caa57600080fd5b50508035926020909101359150565b600060208284031215612ccb57600080fd5b813561ffff8116811461081657600080fd5b600080600060608486031215612cf257600080fd5b505081359360208301359350604090920135919050565b600060208284031215612d1b57600080fd5b61081682612c37565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c08101612d5c8285612d24565b6108166060830184612d24565b600060208284031215612d7b57600080fd5b81356001600160a01b038116811461081657600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612dd157612dd1612da8565b500190565b600060208284031215612de857600080fd5b5051919050565b6000816000190483118215151615612e0957612e09612da8565b500290565b600082821015612e2057612e20612da8565b500390565b80516001600160401b03811681146112d657600080fd5b60008060008060808587031215612e5257600080fd5b612e5b85612e25565b9350612e6960208601612e25565b9250612e7760408601612e25565b9150612e8560608601612e25565b905092959194509250565b60006001600160401b0382811684821681151582840482111615612eb657612eb6612da8565b02949350505050565b600063ffffffff83811690831681811015612edc57612edc612da8565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600082612f0957612f09612ee4565b500490565b600061ffff83811690831681811015612edc57612edc612da8565b60006001600160d81b0383811690831681811015612edc57612edc612da8565b600061ffff80831681811415612f6157612f61612da8565b6001019392505050565b600061ffff808316818516808303821115612f8857612f88612da8565b01949350505050565b600061ffff80841680612fa657612fa6612ee4565b92169190910692915050565b600082612fc157612fc1612ee4565b500690565b634e487b7160e01b600052602160045260246000fdfea264697066735822122042e7e8d3152c66677145629e366ae519c9b21164b37836829dabd6a5df77babe64736f6c63430008090033";

export class TestLidoRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stEth: string,
    _lidoOracle: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestLidoRateOracle> {
    return super.deploy(
      _stEth,
      _lidoOracle,
      _weth,
      overrides || {}
    ) as Promise<TestLidoRateOracle>;
  }
  getDeployTransaction(
    _stEth: string,
    _lidoOracle: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stEth,
      _lidoOracle,
      _weth,
      overrides || {}
    );
  }
  attach(address: string): TestLidoRateOracle {
    return super.attach(address) as TestLidoRateOracle;
  }
  connect(signer: Signer): TestLidoRateOracle__factory {
    return super.connect(signer) as TestLidoRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestLidoRateOracleInterface {
    return new utils.Interface(_abi) as TestLidoRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestLidoRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestLidoRateOracle;
  }
}

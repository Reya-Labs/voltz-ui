/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ILidoOracle, ILidoOracleInterface } from "../ILidoOracle";

const _abi = [
  {
    inputs: [],
    name: "getBeaconSpec",
    outputs: [
      {
        internalType: "uint64",
        name: "epochsPerFrame",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "slotsPerEpoch",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondsPerSlot",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "genesisTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentFrame",
    outputs: [
      {
        internalType: "uint256",
        name: "frameEpochId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frameStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frameEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastCompletedEpochId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastCompletedReportDelta",
    outputs: [
      {
        internalType: "uint256",
        name: "postTotalPooledEther",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "preTotalPooledEther",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeElapsed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ILidoOracle__factory {
  static readonly abi = _abi;
  static createInterface(): ILidoOracleInterface {
    return new utils.Interface(_abi) as ILidoOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILidoOracle {
    return new Contract(address, _abi, signerOrProvider) as ILidoOracle;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockGenesisNFT,
  MockGenesisNFTInterface,
} from "../MockGenesisNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601081526f135bd8dac811d95b995cda5cc813919560821b60208083019182528351808501909452600484526356554e4960e01b908401528151919291620000669160009162000085565b5080516200007c90600190602084019062000085565b50505062000168565b82805462000093906200012b565b90600052602060002090601f016020900481019282620000b7576000855562000102565b82601f10620000d257805160ff191683800117855562000102565b8280016001018555821562000102579182015b8281111562000102578251825591602001919060010190620000e5565b506200011092915062000114565b5090565b5b8082111562000110576000815560010162000115565b600181811c908216806200014057607f821691505b602082108114156200016257634e487b7160e01b600052602260045260246000fd5b50919050565b61135e80620001786000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf57806306fdde03146100e7578063081812fc146100fc578063095ea7b31461012757806323b872dd1461013c57806342842e0e1461014f5780636352211e1461016257806370a082311461017557806395d89b4114610196578063a0712d681461019e578063a22cb465146101b1578063b88d4fde146101c4578063c87b56dd146101d7578063e985e9c5146101ea575b600080fd5b6100d26100cd366004610e4f565b6101fd565b60405190151581526020015b60405180910390f35b6100ef61024f565b6040516100de9190610ec4565b61010f61010a366004610ed7565b6102e1565b6040516001600160a01b0390911681526020016100de565b61013a610135366004610f0c565b61036e565b005b61013a61014a366004610f36565b61047f565b61013a61015d366004610f36565b6104b0565b61010f610170366004610ed7565b6104cb565b610188610183366004610f72565b610542565b6040519081526020016100de565b6100ef6105c9565b61013a6101ac366004610ed7565b6105d8565b61013a6101bf366004610f8d565b6105e5565b61013a6101d2366004610fdf565b6105f4565b6100ef6101e5366004610ed7565b61062c565b6100d26101f83660046110ba565b610704565b60006001600160e01b031982166380ac58cd60e01b148061022e57506001600160e01b03198216635b5e139f60e01b145b8061024957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461025e906110ed565b80601f016020809104026020016040519081016040528092919081815260200182805461028a906110ed565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b60006102ec82610732565b6103525760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610379826104cb565b9050806001600160a01b0316836001600160a01b031614156103e75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610349565b336001600160a01b038216148061040357506104038133610704565b6104705760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610349565b61047a838361074f565b505050565b61048933826107bd565b6104a55760405162461bcd60e51b815260040161034990611128565b61047a838383610887565b61047a838383604051806020016040528060008152506105f4565b6000818152600260205260408120546001600160a01b0316806102495760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610349565b60006001600160a01b0382166105ad5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610349565b506001600160a01b031660009081526003602052604090205490565b60606001805461025e906110ed565b6105e23382610a11565b50565b6105f0338383610b31565b5050565b6105fe33836107bd565b61061a5760405162461bcd60e51b815260040161034990611128565b61062684848484610bfc565b50505050565b606061063782610732565b61069b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610349565b60006106b260408051602081019091526000815290565b905060008151116106d257604051806020016040528060008152506106fd565b806106dc84610c2f565b6040516020016106ed929190611179565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610784826104cb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006107c882610732565b6108295760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610349565b6000610834836104cb565b9050806001600160a01b0316846001600160a01b0316148061085b575061085b8185610704565b8061087f5750836001600160a01b0316610874846102e1565b6001600160a01b0316145b949350505050565b826001600160a01b031661089a826104cb565b6001600160a01b0316146108fe5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610349565b6001600160a01b0382166109605760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610349565b61096b60008261074f565b6001600160a01b03831660009081526003602052604081208054600192906109949084906111be565b90915550506001600160a01b03821660009081526003602052604081208054600192906109c29084906111d5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061130983398151915291a4505050565b6001600160a01b038216610a675760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610349565b610a7081610732565b15610abc5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610349565b6001600160a01b0382166000908152600360205260408120805460019290610ae59084906111d5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020611309833981519152908290a45050565b816001600160a01b0316836001600160a01b03161415610b8f5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610349565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c07848484610887565b610c1384848484610d2c565b6106265760405162461bcd60e51b8152600401610349906111ed565b606081610c535750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c7d5780610c678161123f565b9150610c769050600a83611270565b9150610c57565b6000816001600160401b03811115610c9757610c97610fc9565b6040519080825280601f01601f191660200182016040528015610cc1576020820181803683370190505b5090505b841561087f57610cd66001836111be565b9150610ce3600a86611284565b610cee9060306111d5565b60f81b818381518110610d0357610d03611298565b60200101906001600160f81b031916908160001a905350610d25600a86611270565b9450610cc5565b60006001600160a01b0384163b15610e2e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d709033908990889088906004016112ae565b602060405180830381600087803b158015610d8a57600080fd5b505af1925050508015610dba575060408051601f3d908101601f19168201909252610db7918101906112eb565b60015b610e14573d808015610de8576040519150601f19603f3d011682016040523d82523d6000602084013e610ded565b606091505b508051610e0c5760405162461bcd60e51b8152600401610349906111ed565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061087f565b506001949350505050565b6001600160e01b0319811681146105e257600080fd5b600060208284031215610e6157600080fd5b81356106fd81610e39565b60005b83811015610e87578181015183820152602001610e6f565b838111156106265750506000910152565b60008151808452610eb0816020860160208601610e6c565b601f01601f19169290920160200192915050565b6020815260006106fd6020830184610e98565b600060208284031215610ee957600080fd5b5035919050565b80356001600160a01b0381168114610f0757600080fd5b919050565b60008060408385031215610f1f57600080fd5b610f2883610ef0565b946020939093013593505050565b600080600060608486031215610f4b57600080fd5b610f5484610ef0565b9250610f6260208501610ef0565b9150604084013590509250925092565b600060208284031215610f8457600080fd5b6106fd82610ef0565b60008060408385031215610fa057600080fd5b610fa983610ef0565b915060208301358015158114610fbe57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ff557600080fd5b610ffe85610ef0565b935061100c60208601610ef0565b92506040850135915060608501356001600160401b038082111561102f57600080fd5b818701915087601f83011261104357600080fd5b81358181111561105557611055610fc9565b604051601f8201601f19908116603f0116810190838211818310171561107d5761107d610fc9565b816040528281528a602084870101111561109657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156110cd57600080fd5b6110d683610ef0565b91506110e460208401610ef0565b90509250929050565b600181811c9082168061110157607f821691505b6020821081141561112257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161118b818460208801610e6c565b83519083019061119f818360208801610e6c565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111d0576111d06111a8565b500390565b600082198211156111e8576111e86111a8565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611253576112536111a8565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261127f5761127f61125a565b500490565b6000826112935761129361125a565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112e190830184610e98565b9695505050505050565b6000602082840312156112fd57600080fd5b81516106fd81610e3956feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a39094f2e8f7d1d5fe126c81a27fb669cbbabf1699e5f35d7d02653c0ea0f3ff64736f6c63430008090033";

export class MockGenesisNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockGenesisNFT> {
    return super.deploy(overrides || {}) as Promise<MockGenesisNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockGenesisNFT {
    return super.attach(address) as MockGenesisNFT;
  }
  connect(signer: Signer): MockGenesisNFT__factory {
    return super.connect(signer) as MockGenesisNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGenesisNFTInterface {
    return new utils.Interface(_abi) as MockGenesisNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGenesisNFT {
    return new Contract(address, _abi, signerOrProvider) as MockGenesisNFT;
  }
}

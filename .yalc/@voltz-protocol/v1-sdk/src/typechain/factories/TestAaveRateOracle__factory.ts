/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestAaveRateOracle,
  TestAaveRateOracleInterface,
} from "../TestAaveRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "aaveLendingPool",
        type: "address",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620033d3380380620033d3833981016040819052620000349162000820565b604080516000808252602082019081528183019092528391839190826200005b336200014c565b6001600160a01b039081166080528416620000bd5760405162461bcd60e51b815260206004820152601460248201527f6161766520706f6f6c206d75737420657869737400000000000000000000000060448201526064015b60405180910390fd5b6080516001600160a01b0316620001175760405162461bcd60e51b815260206004820152601560248201527f756e6465726c79696e67206d75737420657869737400000000000000000000006044820152606401620000b4565b6201000380546001600160a01b0319166001600160a01b0386161790556200014082826200019c565b505050505050620009ba565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001ab600261ffff6200088b565b825110620001cd5760405162461bcd60e51b8152600401620000b490620008ae565b8151815161ffff821614620001f65760405162461bcd60e51b8152600401620000b490620008cc565b600062000205826001620008f8565b61ffff166001600160401b038111156200022357620002236200085f565b6040519080825280602002602001820160405280156200024d578160200160208202803683370190505b50905060006200025f836001620008f8565b61ffff166001600160401b038111156200027d576200027d6200085f565b604051908082528060200260200182016040528015620002a7578160200160208202803683370190505b50905060005b8361ffff168110156200035857858181518110620002cf57620002cf62000921565b6020026020010151838281518110620002ec57620002ec62000921565b602002602001019063ffffffff16908163ffffffff16815250508481815181106200031b576200031b62000921565b602002602001015182828151811062000338576200033862000921565b6020908102919091010152806200034f8162000937565b915050620002ad565b506200036e6200042c60201b62000b681760201c565b828461ffff168151811062000387576200038762000921565b63ffffffff90921660209283029190910190910152620003a66200043e565b818461ffff1681518110620003bf57620003bf62000921565b602002602001018181525050620003e882826004620004ec60201b62000b78179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff19909216959093169490941793909317919091161790555050505050565b6000620004394262000731565b905090565b620100035460805160405163d15e005360e01b81526001600160a01b039182166004820152600092919091169063d15e00539060240160206040518083038186803b1580156200048d57600080fd5b505afa158015620004a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004c8919062000955565b905080620004e95760405163bd89c5af60e01b815260040160405180910390fd5b90565b600080600061ffff855110620005165760405162461bcd60e51b8152600401620000b490620008ae565b8451845161ffff8216146200053f5760405162461bcd60e51b8152600401620000b490620008cc565b60008161ffff16116200057a5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000b4565b6000805b8261ffff168161ffff1610156200071057878161ffff1681518110620005a857620005a862000921565b602002602001015163ffffffff168263ffffffff1610620005fe5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000b4565b62000650888261ffff16815181106200061b576200061b62000921565b6020026020010151888361ffff16815181106200063c576200063c62000921565b60200260200101516200077860201b60201c565b898261ffff1661ffff81106200066a576200066a62000921565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff8316908110620006f057620006f062000921565b60200260200101519150808062000707906200096f565b9150506200057e565b5081806200072060018262000994565b945094509450505093509350939050565b8063ffffffff81168114620007735760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000b4565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620007d75760405162461bcd60e51b8152600401620000b4906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b03811681146200081d57600080fd5b50565b600080604083850312156200083457600080fd5b8251620008418162000807565b6020840151909250620008548162000807565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082620008a957634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000918576200091862000875565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200094e576200094e62000875565b5060010190565b6000602082840312156200096857600080fd5b5051919050565b600061ffff808316818114156200098a576200098a62000875565b6001019392505050565b600061ffff83811690831681811015620009b257620009b262000875565b039392505050565b6080516129f6620009dd60003960008181610293015261092601526129f66000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c806301320aad146101435780631195082e1461015e57806322ff656814610189578063252c09d7146101a357806325f258dd146101e257806332148f67146101f55780633c155bd51461020a578063414535281461023257806354124c641461024557806356da9775146102585780636e035c051461027b5780636f307dc31461028e578063715018a6146102c25780637aa4db13146102ca5780637cf2cc9f146102d25780638da5cb5b146102db57806393556dbd146102e357806395f3e605146102f6578063bdb0509214610317578063c330c98d1461032a578063c7db359b14610339578063e9b69c0d14610381578063e9d337b814610394578063efdf5d8b146103a9578063f2fde38b146103b1578063f739670c146103c4575b600080fd5b61014b6103d7565b6040519081526020015b60405180910390f35b61014b61016c3660046126a0565b600160209081526000928352604080842090915290825290205481565b610191600181565b60405160ff9091168152602001610155565b6101b66101b13660046126d3565b61043e565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610155565b61014b6101f03660046126ec565b610478565b61020861020336600461270e565b6104ef565b005b61021d61021836600461270e565b610574565b60408051928352602083019190915201610155565b61014b6102403660046126ec565b6105e1565b61014b610253366004612732565b6105f5565b61026b6102663660046126ec565b61064a565b6040519015158152602001610155565b61014b6102893660046126ec565b6106b0565b6102b57f000000000000000000000000000000000000000000000000000000000000000081565b604051610155919061275e565b6102086106c3565b610208610707565b61014b60025481565b6102b5610754565b61014b6102f13660046126ec565b610763565b610309610304366004612772565b6107f3565b6040516101559291906127b7565b6102086103253660046126d3565b61082b565b61014b670de0b6b3a764000081565b60035461035c9061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610155565b61021d61038f366004612772565b61089f565b62010003546102b5906001600160a01b031681565b61014b6108fb565b6102086103bf3660046127d2565b6109c1565b61014b6103d23660046126ec565b610a5e565b600354600090819060049061ffff9081169081106103f7576103f76127fb565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60048161ffff811061044f57600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104858484610dbb565b909250905080156104e75760006104a5670de0b6b3a76400008604610ef9565b905060006104bc670de0b6b3a76400008604610ef9565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff16600061050b60048385610f3e565b6003805461ffff808416600160201b810261ffff60201b199093169290921790925591925083161461056f5760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff8110610591576105916127fb565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006105ed8383610dbb565b509392505050565b60008061060183611030565b90506000610617670de0b6b3a764000086612827565b905060006106258284611047565b9050600061063282611086565b905061063e88826110b0565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c00008261067185846110b0565b9050600061067f86846110b0565b90508187111580156106915750808710155b156106a35760019450505050506104e9565b60009450505050506104e9565b60006106bc83836110be565b9392505050565b336106cc610754565b6001600160a01b0316146106fb5760405162461bcd60e51b81526004016106f29061283f565b60405180910390fd5b6107056000611123565b565b60035461072c9061ffff80821691620100008104821691600160201b90910416611173565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156107a85760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016106f2565b60006107b48484610a5e565b905060006107c28585612874565b905060006107cf826112a5565b905060006107dc82611030565b90506107e884826110be565b979650505050505050565b6107fb61266c565b61080361266c565b60035461082290600490859061ffff80821691620100009004166112f2565b91509150915091565b33610834610754565b6001600160a01b03161461085a5760405162461bcd60e51b81526004016106f29061283f565b806002541461089c5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006108ac6108fb565b90506000806108da866108bd610b68565b6003546004929190879061ffff80821691620100009004166114a4565b6020918201519101516001600160d81b039182169891169650945050505050565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e00539061094e907f00000000000000000000000000000000000000000000000000000000000000009060040161275e565b60206040518083038186803b15801561096657600080fd5b505afa15801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e919061288b565b9050806109be5760405163bd89c5af60e01b815260040160405180910390fd5b90565b336109ca610754565b6001600160a01b0316146109f05760405162461bcd60e51b81526004016106f29061283f565b6001600160a01b038116610a555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f2565b61089c81611123565b600081831115610a9c5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016106f2565b81831415610aac575060006104e9565b6000610ab6610b68565b90506000610ac385610ef9565b90506000610ad085610ef9565b600354909150600090610af4908590859061ffff8082169162010000900416611657565b600354909150600090610b18908690859061ffff8082169162010000900416611657565b905081811115610b5a576000610b4c676765c793fa10079d601b1b610b3d84866118a3565b610b479190612874565b6118b1565b96506104e995505050505050565b6000955050505050506104e9565b6000610b7342610ef9565b905090565b600080600061ffff855110610bb85760405162461bcd60e51b81526004016106f2906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610c035760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b60448201526064016106f2565b60008161ffff1611610c3c5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016106f2565b6000805b8261ffff168161ffff161015610d9c57878161ffff1681518110610c6657610c666127fb565b602002602001015163ffffffff168263ffffffff1610610cba5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016106f2565b610cfe888261ffff1681518110610cd357610cd36127fb565b6020026020010151888361ffff1681518110610cf157610cf16127fb565b602002602001015161193d565b898261ffff1661ffff8110610d1557610d156127fb565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610d7f57610d7f6127fb565b602002602001015191508080610d94906128a4565b915050610c40565b508180610daa6001826128c6565b945094509450505093509350939050565b60008080610dd2670de0b6b3a76400008604610ef9565b90506000610de9670de0b6b3a76400008604610ef9565b905060008263ffffffff16118015610e07575060008163ffffffff16115b610e3b5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016106f2565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610e915763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610ef0565b8063ffffffff16610ea0610b68565b63ffffffff1610610ecc57610ec18263ffffffff168263ffffffff16610a5e565b935060019250610ef0565b610ee98263ffffffff16610ede610b68565b63ffffffff16610a5e565b9350600092505b50509250929050565b8063ffffffff81168114610f395760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016106f2565b919050565b6000808361ffff1611610f775760405162461bcd60e51b81526020600482015260016024820152604960f81b60448201526064016106f2565b61ffff8261ffff1610610fbb5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b60448201526064016106f2565b8261ffff168261ffff1611610fd15750816106bc565b825b8261ffff168161ffff161015611027576001858261ffff1661ffff8110610ffc57610ffc6127fb565b01805463ffffffff191663ffffffff929092169190911790558061101f816128a4565b915050610fd3565b50909392505050565b60006104e9826a1a1601fc4ea7109e0000006119b5565b60008261106c57811561105b576000611065565b670de0b6b3a76400005b90506104e9565b6106bc61108161107b856119ca565b84611a7a565b611a86565b6000806110a6670de0b6b3a7640000676765c793fa10079d601b1b6128ff565b6106bc9084612913565b60006106bc83836001611acc565b6000826110cd575060006104e9565b60006110e26110dc60016112a5565b846119b5565b90506000611104856110f460016112a5565b6110fe9190612827565b83611047565b905061111060016112a5565b61111a9082612874565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110611190576111906127fb565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060006111da610b68565b9050816000015163ffffffff166002548263ffffffff166111fb9190612874565b101561120e57868693509350505061129d565b60006112186108fb565b90507f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611243611b7f565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161129560048984848b8b611b8a565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156112e457604051633492ffd960e01b8152600481018390526024016106f2565b50670de0b6b3a76400000290565b6112fa61266c565b61130261266c565b600083611310866001612932565b61131a9190612958565b61ffff169050600060018561ffff16836113349190612827565b61133e9190612874565b905060005b600161134f8385612827565b901c90508861136261ffff881683612979565b61ffff8110611373576113736127fb565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506113ca576113c3816001612827565b9250611343565b8861ffff87166113db836001612827565b6113e59190612979565b61ffff81106113f6576113f66127fb565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906114625750846000015163ffffffff168963ffffffff1611155b1561146d5750611498565b806114845761147d600183612874565b9250611492565b61148f826001612827565b93505b50611343565b50505094509492505050565b6114ac61266c565b6114b461266c565b878461ffff1661ffff81106114cb576114cb6127fb565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509088161061154a578663ffffffff16826000015163ffffffff1614156115365761164c565b81611541878761193d565b9150915061164c565b8783611557866001612932565b6115619190612958565b61ffff1661ffff8110611576576115766127fb565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506115fb5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff8089169116111561163b5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016106f2565b611647888886866112f2565b915091505b965096945050505050565b60008363ffffffff168563ffffffff16101561168657604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff16141561172e576116a261266c565b60048461ffff1661ffff81106116ba576116ba6127fb565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090871614611717576117106108fb565b9150611728565b80602001516001600160d81b031691505b5061189b565b60006117386108fb565b905060008061174c6004888a868a8a6114a4565b91509150816000015163ffffffff168763ffffffff16141561177d5781602001516001600160d81b03169350611897565b805163ffffffff888116911614156117a45780602001516001600160d81b03169350611897565b600082602001516001600160d81b031682602001516001600160d81b03161115611813576000676765c793fa10079d601b1b6117fa84602001516001600160d81b031686602001516001600160d81b03166118a3565b6118049190612874565b905061180f816118b1565b9150505b8251825160009161184691670de0b6b3a7640000916118319161298d565b63ffffffff166118419190612913565b611030565b9050600061185483836110be565b905061189185602001516001600160d81b031682670de0b6b3a764000088600001518e611881919061298d565b63ffffffff166102539190612913565b96505050505b5050505b949350505050565b60006106bc83836001611cd1565b6000806118d1670de0b6b3a7640000676765c793fa10079d601b1b6128ff565b6118db90846128ff565b905060026118fc670de0b6b3a7640000676765c793fa10079d601b1b6128ff565b61190691906128ff565b611923670de0b6b3a7640000676765c793fa10079d601b1b6128ff565b61192d9085612979565b106104e9576106bc600182612827565b61194561266c565b6001600160d81b038211156119855760405162461bcd60e51b81526004016106f2906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b60006106bc83670de0b6b3a764000084611d6c565b6000670de0b6b3a76400008210156119f857604051633621413760e21b8152600481018390526024016106f2565b6000611a0d670de0b6b3a76400008404611e3a565b670de0b6b3a7640000808202935090915083821c90811415611a30575050919050565b6706f05b59d3b200005b8015611a7257670de0b6b3a7640000828002049150671bc16d674ec800008210611a6a579283019260019190911c905b60011c611a3a565b505050919050565b60006106bc8383611f18565b6000680a688906bd8b0000008210611ab457604051634a4f26f160e01b8152600481018390526024016106f2565b670de0b6b3a7640000604083901b046106bc81611fda565b6000831580611ad9575082155b15611ae6575060006106bc565b6001826001811115611afa57611afa6129aa565b14611b0d57670de0b6b3a7640000611b1a565b676765c793fa10079d601b1b5b6001836001811115611b2e57611b2e6129aa565b14611b4b57611b466002670de0b6b3a76400006128ff565b611b61565b611b616002676765c793fa10079d601b1b6128ff565b611b6b8587612913565b611b759190612827565b61189b91906128ff565b6000610b73426112a5565b6000806000888861ffff1661ffff8110611ba657611ba66127fb565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611c01578785925092505061164c565b8461ffff168461ffff16118015611c295750611c1e6001866128c6565b61ffff168861ffff16145b15611c3657839150611c3a565b8491505b81611c46896001612932565b611c509190612958565b9250611c5c878761193d565b898461ffff1661ffff8110611c7357611c736127fb565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b600082611d095760405162461bcd60e51b81526004016106f2906020808252600490820152630444956360e41b604082015260600190565b6000611d166002856128ff565b905083816001856001811115611d2e57611d2e6129aa565b14611d4157670de0b6b3a7640000611d4e565b676765c793fa10079d601b1b5b611d589088612913565b611d629190612827565b61111a91906128ff565b600080806000198587098587029250828110838203039150508060001415611da757838281611d9d57611d9d6128e9565b04925050506106bc565b838110611dd157604051631dcf306360e21b815260048101829052602481018590526044016106f2565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611e5a57608091821c91611e579082612827565b90505b600160401b8210611e7857604091821c91611e759082612827565b90505b600160201b8210611e9657602091821c91611e939082612827565b90505b620100008210611eb357601091821c91611eb09082612827565b90505b6101008210611ecf57600891821c91611ecc9082612827565b90505b60108210611eea57600491821c91611ee79082612827565b90505b60048210611f0557600291821c91611f029082612827565b90505b60028210610f39576104e9600182612827565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611f5c5760405163698d9a0160e11b8152600481018290526024016106f2565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611f965780670de0b6b3a76400008504019450505050506104e9565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611ffa5768016a09e667f3bcc9090260401c5b6001603e1b821615612015576801306fe0a31b7152df0260401c5b6001603d1b821615612030576801172b83c7d517adce0260401c5b6001603c1b82161561204b5768010b5586cf9890f62a0260401c5b6001603b1b821615612066576801059b0d31585743ae0260401c5b6001603a1b82161561208157680102c9a3e778060ee70260401c5b600160391b82161561209c5768010163da9fb33356d80260401c5b600160381b8216156120b757680100b1afa5abcbed610260401c5b600160371b8216156120d25768010058c86da1c09ea20260401c5b600160361b8216156120ed576801002c605e2e8cec500260401c5b600160351b82161561210857680100162f3904051fa10260401c5b600160341b821615612123576801000b175effdc76ba0260401c5b600160331b82161561213e57680100058ba01fb9f96d0260401c5b600160321b8216156121595768010002c5cc37da94920260401c5b600160311b821615612174576801000162e525ee05470260401c5b600160301b82161561218f5768010000b17255775c040260401c5b6001602f1b8216156121aa576801000058b91b5bc9ae0260401c5b6001602e1b8216156121c557680100002c5c89d5ec6d0260401c5b6001602d1b8216156121e05768010000162e43f4f8310260401c5b6001602c1b8216156121fb57680100000b1721bcfc9a0260401c5b6001602b1b8216156122165768010000058b90cf1e6e0260401c5b6001602a1b821615612231576801000002c5c863b73f0260401c5b600160291b82161561224c57680100000162e430e5a20260401c5b600160281b821615612267576801000000b1721835510260401c5b600160271b82161561228257680100000058b90c0b490260401c5b600160261b82161561229d5768010000002c5c8601cc0260401c5b600160251b8216156122b8576801000000162e42fff00260401c5b600160241b8216156122d35768010000000b17217fbb0260401c5b600160231b8216156122ee576801000000058b90bfce0260401c5b600160221b82161561230957680100000002c5c85fe30260401c5b600160211b8216156123245768010000000162e42ff10260401c5b600160201b82161561233f57680100000000b17217f80260401c5b638000000082161561235a5768010000000058b90bfc0260401c5b6340000000821615612375576801000000002c5c85fe0260401c5b632000000082161561239057680100000000162e42ff0260401c5b63100000008216156123ab576801000000000b17217f0260401c5b63080000008216156123c657680100000000058b90c00260401c5b63040000008216156123e15768010000000002c5c8600260401c5b63020000008216156123fc576801000000000162e4300260401c5b63010000008216156124175768010000000000b172180260401c5b62800000821615612431576801000000000058b90c0260401c5b6240000082161561244b57680100000000002c5c860260401c5b622000008216156124655768010000000000162e430260401c5b6210000082161561247f57680100000000000b17210260401c5b620800008216156124995768010000000000058b910260401c5b620400008216156124b3576801000000000002c5c80260401c5b620200008216156124cd57680100000000000162e40260401c5b620100008216156124e65761b172600160401b010260401c5b6180008216156124fe576158b9600160401b010260401c5b61400082161561251657612c5d600160401b010260401c5b61200082161561252e5761162e600160401b010260401c5b61100082161561254657610b17600160401b010260401c5b61080082161561255e5761058c600160401b010260401c5b610400821615612576576102c6600160401b010260401c5b61020082161561258e57610163600160401b010260401c5b6101008216156125a55760b1600160401b010260401c5b60808216156125bb576059600160401b010260401c5b60408216156125d157602c600160401b010260401c5b60208216156125e7576016600160401b010260401c5b60108216156125fd57600b600160401b010260401c5b6008821615612613576006600160401b010260401c5b6004821615612629576003600160401b010260401c5b600282161561263f576001600160401b010260401c5b6001821615612655576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610f3957600080fd5b600080604083850312156126b357600080fd5b6126bc8361268c565b91506126ca6020840161268c565b90509250929050565b6000602082840312156126e557600080fd5b5035919050565b600080604083850312156126ff57600080fd5b50508035926020909101359150565b60006020828403121561272057600080fd5b813561ffff811681146106bc57600080fd5b60008060006060848603121561274757600080fd5b505081359360208301359350604090920135919050565b6001600160a01b0391909116815260200190565b60006020828403121561278457600080fd5b6106bc8261268c565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c081016127c5828561278d565b6106bc606083018461278d565b6000602082840312156127e457600080fd5b81356001600160a01b03811681146106bc57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561283a5761283a612811565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561288657612886612811565b500390565b60006020828403121561289d57600080fd5b5051919050565b600061ffff808316818114156128bc576128bc612811565b6001019392505050565b600061ffff838116908316818110156128e1576128e1612811565b039392505050565b634e487b7160e01b600052601260045260246000fd5b60008261290e5761290e6128e9565b500490565b600081600019048311821515161561292d5761292d612811565b500290565b600061ffff80831681851680830382111561294f5761294f612811565b01949350505050565b600061ffff8084168061296d5761296d6128e9565b92169190910692915050565b600082612988576129886128e9565b500690565b600063ffffffff838116908316818110156128e1576128e1612811565b634e487b7160e01b600052602160045260246000fdfea264697066735822122036ed680603f895d3b1c713e459486c5912441081b7848f26a8cf7dbb168531a764736f6c63430008090033";

export class TestAaveRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestAaveRateOracle> {
    return super.deploy(
      aaveLendingPool,
      underlying,
      overrides || {}
    ) as Promise<TestAaveRateOracle>;
  }
  getDeployTransaction(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      aaveLendingPool,
      underlying,
      overrides || {}
    );
  }
  attach(address: string): TestAaveRateOracle {
    return super.attach(address) as TestAaveRateOracle;
  }
  connect(signer: Signer): TestAaveRateOracle__factory {
    return super.connect(signer) as TestAaveRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAaveRateOracleInterface {
    return new utils.Interface(_abi) as TestAaveRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAaveRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestAaveRateOracle;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundBorrowRateOracle,
  CompoundBorrowRateOracleInterface,
} from "../CompoundBorrowRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "_ctoken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "ethPool",
        type: "bool",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint32[]",
        name: "_times",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "_results",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ctoken",
    outputs: [
      {
        internalType: "contract ICToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162003c2538038062003c25833981016040819052620000349162000c69565b83620000403362000205565b6001600160a01b0381166080524362010004556200006962000255602090811b62000d9917901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b03861660a05284806200013c5750836001600160a01b031660a0516001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b158015620000f657600080fd5b505afa1580156200010b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000131919062000d31565b6001600160a01b0316145b6200018e5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e7320646f206e6f74206d617463680000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038416620001e65760405162461bcd60e51b815260206004820152601560248201527f756e6465726c79696e67206d7573742065786973740000000000000000000000604482015260640162000185565b60ff831660c052620001f9828262000267565b50505050505062000eed565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200026242620004f2565b905090565b62000276600261ffff62000d67565b825110620002985760405162461bcd60e51b8152600401620001859062000d8a565b8151815161ffff821614620002c15760405162461bcd60e51b8152600401620001859062000da8565b6000620002d082600162000dd4565b61ffff166001600160401b03811115620002ee57620002ee62000b11565b60405190808252806020026020018201604052801562000318578160200160208202803683370190505b50905060006200032a83600162000dd4565b61ffff166001600160401b0381111562000348576200034862000b11565b60405190808252806020026020018201604052801562000372578160200160208202803683370190505b50905060005b8361ffff1681101562000423578581815181106200039a576200039a62000dfd565b6020026020010151838281518110620003b757620003b762000dfd565b602002602001019063ffffffff16908163ffffffff1681525050848181518110620003e657620003e662000dfd565b602002602001015182828151811062000403576200040362000dfd565b6020908102919091010152806200041a8162000e13565b91505062000378565b506000806200043162000539565b9150915081848661ffff16815181106200044f576200044f62000dfd565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff168151811062000483576200048362000dfd565b602002602001018181525050620004ac848460046200077860201b62000da9179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620005345760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b604482015260640162000185565b919050565b600080600060a0516001600160a01b031663f8f9da286040518163ffffffff1660e01b815260040160206040518083038186803b1580156200057a57600080fd5b505afa1580156200058f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b5919062000e31565b905065048c273950008111156200060f5760405162461bcd60e51b815260206004820152601c60248201527f626f72726f772072617465206973206162737572646c79206869676800000000604482015260640162000185565b600060a0516001600160a01b0316636c540baf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200064d57600080fd5b505afa15801562000662573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000688919062000e31565b62000694904362000e4b565b90506000620006b860405180602001604052808581525083620009bd60201b60201c565b9050600060a0516001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b158015620006f857600080fd5b505afa1580156200070d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000733919062000e31565b9050600062000744838380620009f6565b90506200075b6200025560201b62000d991760201c565b6200076b82633b9aca0062000e65565b9650965050505050509091565b600080600061ffff855110620007a25760405162461bcd60e51b8152600401620001859062000d8a565b8451845161ffff821614620007cb5760405162461bcd60e51b8152600401620001859062000da8565b60008161ffff1611620008065760405162461bcd60e51b81526020600482015260026024820152610c1560f21b604482015260640162000185565b6000805b8261ffff168161ffff1610156200099c57878161ffff168151811062000834576200083462000dfd565b602002602001015163ffffffff168263ffffffff16106200088a5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b604482015260640162000185565b620008dc888261ffff1681518110620008a757620008a762000dfd565b6020026020010151888361ffff1681518110620008c857620008c862000dfd565b602002602001015162000a2660201b60201c565b898261ffff1661ffff8110620008f657620008f662000dfd565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff83169081106200097c576200097c62000dfd565b602002602001015191508080620009939062000e87565b9150506200080a565b508180620009ac60018262000eac565b945094509450505093509350939050565b6040805160208101909152600081526040518060200160405280620009ed85600001518562000ab560201b60201c565b90529392505050565b60008062000a058585620009bd565b905062000a1d62000a168262000aca565b8462000aea565b95945050505050565b60408051606081018252600080825260208201819052918101919091526001600160d81b0382111562000a855760405162461bcd60e51b815260040162000185906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600062000ac3828462000e65565b9392505050565b805160009062000ae490670de0b6b3a76400009062000d67565b92915050565b600062000ac3828462000ed2565b6001600160a01b038116811462000b0e57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000b525762000b5262000b11565b604052919050565b60006001600160401b0382111562000b765762000b7662000b11565b5060051b60200190565b600082601f83011262000b9257600080fd5b8151602062000bab62000ba58362000b5a565b62000b27565b82815260059290921b8401810191818101908684111562000bcb57600080fd5b8286015b8481101562000bfc57805163ffffffff8116811462000bee5760008081fd5b835291830191830162000bcf565b509695505050505050565b600082601f83011262000c1957600080fd5b8151602062000c2c62000ba58362000b5a565b82815260059290921b8401810191818101908684111562000c4c57600080fd5b8286015b8481101562000bfc578051835291830191830162000c50565b60008060008060008060c0878903121562000c8357600080fd5b865162000c908162000af8565b6020880151909650801515811462000ca757600080fd5b604088015190955062000cba8162000af8565b606088015190945060ff8116811462000cd257600080fd5b60808801519093506001600160401b038082111562000cf057600080fd5b62000cfe8a838b0162000b80565b935060a089015191508082111562000d1557600080fd5b5062000d2489828a0162000c07565b9150509295509295509295565b60006020828403121562000d4457600080fd5b815162000ac38162000af8565b634e487b7160e01b600052601160045260246000fd5b60008262000d8557634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000df45762000df462000d51565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000e2a5762000e2a62000d51565b5060010190565b60006020828403121562000e4457600080fd5b5051919050565b60008282101562000e605762000e6062000d51565b500390565b600081600019048311821515161562000e825762000e8262000d51565b500290565b600061ffff8083168181141562000ea25762000ea262000d51565b6001019392505050565b600061ffff8381169083168181101562000eca5762000eca62000d51565b039392505050565b6000821982111562000ee85762000ee862000d51565b500190565b60805160a05160c051612cf362000f3260003960006102620152600081816103d401528181610668015281816107570152610812015260006102c40152612cf36000f3fe608060405234801561001057600080fd5b50600436106101545760003560e01c80631195082e14610159578063163e9c4f1461019757806317221ef1146101aa57806322ff6568146101bd57806324b18b17146101d7578063252c09d71461020b57806325f258dd1461024a578063313ce5671461025d57806332148f6714610284578063414535281461029957806354124c64146102ac5780636f307dc3146102bf578063715018a6146102fe5780637aa4db13146103065780637cf2cc9f1461030e5780638a6b8c5d146103175780638da5cb5b1461031f57806391aa375d1461032757806393556dbd14610352578063bdb0509214610365578063c330c98d14610378578063c7db359b14610387578063ccf3eb9f146103cf578063efdf5d8b146103f6578063f2fde38b146103fe578063f739670c14610411578063f90ce5ba14610424578063fe115fbe1461043c575b600080fd5b610184610167366004612a26565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101846101a5366004612a59565b610444565b6101846101b8366004612a59565b610456565b6101c5600681565b60405160ff909116815260200161018e565b620100055462010006546101ef9163ffffffff169082565b6040805163ffffffff909316835260208301919091520161018e565b61021e610219366004612a59565b610462565b6040805163ffffffff90941684526001600160d81b03909216602084015215159082015260600161018e565b610184610258366004612a72565b61049c565b6101c57f000000000000000000000000000000000000000000000000000000000000000081565b610297610292366004612a94565b610512565b005b6101846102a7366004612a72565b610597565b6101846102ba366004612ab8565b6105ab565b6102e67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161018e565b610297610600565b610297610614565b61018460025481565b6101ef610661565b6102e66108d5565b6201000654620100055463ffffffff165b6040805192835263ffffffff90911660208301520161018e565b610184610360366004612a72565b6108e4565b610297610373366004612a59565b610974565b610184670de0b6b3a764000081565b6003546103aa9061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff9485168152928416602084015292169181019190915260600161018e565b6102e67f000000000000000000000000000000000000000000000000000000000000000081565b6101846109c1565b61029761040c366004612ae4565b610a49565b61018461041f366004612a72565b610abf565b620100035462010004546101ef9163ffffffff169082565b610338610bc9565b60006104508242610abf565b92915050565b600061045082426108e4565b60048161ffff811061047357600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104a98484610fec565b9092509050801561050b5760006104c9670de0b6b3a7640000860461112a565b905060006104e0670de0b6b3a7640000860461112a565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff16600061052e6004838561116f565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146105925760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b60006105a38383610fec565b509392505050565b6000806105b783611264565b905060006105cd670de0b6b3a764000086612b23565b905060006105db828461127b565b905060006105e8826112ba565b90506105f488826112e4565b98975050505050505050565b6106086112f2565b6106126000611351565b565b6003546106399061ffff80821691620100008104821691600160201b909104166113a1565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f8f9da286040518163ffffffff1660e01b815260040160206040518083038186803b1580156106bf57600080fd5b505afa1580156106d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f79190612b3b565b905065048c273950008111156107535760405162461bcd60e51b815260206004820152601c60248201527b0c4dee4e4deee40e4c2e8ca40d2e640c2c4e6eae4c8d8f240d0d2ced60231b60448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636c540baf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107ae57600080fd5b505afa1580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e69190612b3b565b6107f09043612b54565b9050600061080c60405180602001604052808581525083611544565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561086957600080fd5b505afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190612b3b565b905060006108b0838384611575565b90506108ba610d99565b6108c882633b9aca00612b6b565b9650965050505050509091565b6000546001600160a01b031690565b6000818311156109295760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b604482015260640161074a565b60006109358484610abf565b905060006109438585612b54565b905060006109508261159f565b9050600061095d82611264565b905061096984826115ec565b979650505050505050565b61097c6112f2565b80600254146109be5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006109ce610661565b915091506109da610d99565b63ffffffff168263ffffffff16106109f25792915050565b6000806109fd610bc9565b915091508063ffffffff168285610a12610d99565b610a1c9190612b8a565b63ffffffff16610a2c9190612b6b565b610a369190612bc5565b610a409084612b23565b94505050505090565b610a516112f2565b6001600160a01b038116610ab65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161074a565b6109be81611351565b600081831115610afd5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b604482015260640161074a565b81831415610b0d57506000610450565b6000610b17610d99565b90506000610b248561112a565b90506000610b318561112a565b600354909150600090610b55908590859061ffff8082169162010000900416611648565b600354909150600090610b79908690859061ffff8082169162010000900416611648565b905081811115610bbb576000610bad676765c793fa10079d601b1b610b9e8486611894565b610ba89190612b54565b6118a2565b965061045095505050505050565b600095505050505050610450565b600354600090819061ffff16816001821015610bfd57600354610bf89060019062010000900461ffff16612bd9565b610c10565b600354610c109060019061ffff16612bd9565b60035490915060026201000090910461ffff1610801590610c51575060048161ffff1661ffff8110610c4457610c44612bf4565b0154600160f81b900460ff165b8015610cae575060048261ffff1661ffff8110610c7057610c70612bf4565b0154600160201b90046001600160d81b0316600461ffff838116908110610c9957610c99612bf4565b0154600160201b90046001600160d81b031611155b610ce05760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b604482015260640161074a565b60048161ffff1661ffff8110610cf857610cf8612bf4565b0154600160201b90046001600160d81b0316600461ffff848116908110610d2157610d21612bf4565b0154610d3d9190600160201b90046001600160d81b0316612c0a565b6001600160d81b0316935060048161ffff1661ffff8110610d6057610d60612bf4565b015463ffffffff16600461ffff808516908110610d7f57610d7f612bf4565b0154610d91919063ffffffff16612b8a565b925050509091565b6000610da44261112a565b905090565b600080600061ffff855110610de95760405162461bcd60e51b815260040161074a906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610e345760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604482015260640161074a565b60008161ffff1611610e6d5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b604482015260640161074a565b6000805b8261ffff168161ffff161015610fcd57878161ffff1681518110610e9757610e97612bf4565b602002602001015163ffffffff168263ffffffff1610610eeb5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b604482015260640161074a565b610f2f888261ffff1681518110610f0457610f04612bf4565b6020026020010151888361ffff1681518110610f2257610f22612bf4565b602002602001015161192e565b898261ffff1661ffff8110610f4657610f46612bf4565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610fb057610fb0612bf4565b602002602001015191508080610fc590612c2a565b915050610e71565b508180610fdb600182612bd9565b945094509450505093509350939050565b60008080611003670de0b6b3a7640000860461112a565b9050600061101a670de0b6b3a7640000860461112a565b905060008263ffffffff16118015611038575060008163ffffffff16115b61106c5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b604482015260640161074a565b63ffffffff808316600090815260016020908152604080832093851683529290522054156110c25763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250611121565b8063ffffffff166110d1610d99565b63ffffffff16106110fd576110f28263ffffffff168263ffffffff16610abf565b935060019250611121565b61111a8263ffffffff1661110f610d99565b63ffffffff16610abf565b9350600092505b50509250929050565b8063ffffffff8116811461116a5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b604482015260640161074a565b919050565b6000808361ffff16116111a85760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161074a565b61ffff8261ffff16106111ec5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b604482015260640161074a565b8261ffff168261ffff161161120257508161125d565b825b8261ffff168161ffff161015611258576001858261ffff1661ffff811061122d5761122d612bf4565b01805463ffffffff191663ffffffff929092169190911790558061125081612c2a565b915050611204565b508190505b9392505050565b6000610450826a1a1601fc4ea7109e0000006119a6565b6000826112a057811561128f576000611299565b670de0b6b3a76400005b9050610450565b61125d6112b56112af856119bb565b84611a6b565b611a77565b6000806112da670de0b6b3a7640000676765c793fa10079d601b1b612bc5565b61125d9084612b6b565b600061125d83836001611abd565b336112fb6108d5565b6001600160a01b0316146106125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106113be576113be612bf4565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b909104161515908201529050600080611409610661565b60025485519294509092506114239163ffffffff16612b23565b8263ffffffff16101561143e5787879450945050505061153c565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611467611b70565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546114b99043612b54565b6201000655620100035463ffffffff166114d1610d99565b6114db9190612b8a565b62010005805463ffffffff191663ffffffff92909216919091179055436201000455611505610d99565b62010003805463ffffffff191663ffffffff928316179055611534906004908a90859085908c908c90611b7b16565b945094505050505b935093915050565b604080516020810190915260008152604051806020016040528061156c856000015185611cc3565b90529392505050565b6000806115828585611544565b905061159661159082611ccf565b84611ce7565b95945050505050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156115de57604051633492ffd960e01b81526004810183905260240161074a565b50670de0b6b3a76400000290565b6000826115fb57506000610450565b600061161061160a600161159f565b846119a6565b9050600061163285611622600161159f565b61162c9190612b23565b8361127b565b905061163e600161159f565b6115969082612b54565b60008363ffffffff168563ffffffff16101561167757604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff16141561171f576116936129f2565b60048461ffff1661ffff81106116ab576116ab612bf4565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090871614611708576117016109c1565b9150611719565b80602001516001600160d81b031691505b5061188c565b60006117296109c1565b905060008061173d6004888a868a8a611cf3565b91509150816000015163ffffffff168763ffffffff16141561176e5781602001516001600160d81b03169350611888565b805163ffffffff888116911614156117955780602001516001600160d81b03169350611888565b600082602001516001600160d81b031682602001516001600160d81b03161115611804576000676765c793fa10079d601b1b6117eb84602001516001600160d81b031686602001516001600160d81b0316611894565b6117f59190612b54565b9050611800816118a2565b9150505b8251825160009161183791670de0b6b3a76400009161182291612b8a565b63ffffffff166118329190612b6b565b611264565b9050600061184583836115ec565b905061188285602001516001600160d81b031682670de0b6b3a764000088600001518e6118729190612b8a565b63ffffffff166102ba9190612b6b565b96505050505b5050505b949350505050565b600061125d83836001611ea5565b6000806118c2670de0b6b3a7640000676765c793fa10079d601b1b612bc5565b6118cc9084612bc5565b905060026118ed670de0b6b3a7640000676765c793fa10079d601b1b612bc5565b6118f79190612bc5565b611914670de0b6b3a7640000676765c793fa10079d601b1b612bc5565b61191e9085612c4c565b106104505761125d600182612b23565b6119366129f2565b6001600160d81b038211156119765760405162461bcd60e51b815260040161074a906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061125d83670de0b6b3a764000084611f40565b6000670de0b6b3a76400008210156119e957604051633621413760e21b81526004810183905260240161074a565b60006119fe670de0b6b3a7640000840461200e565b670de0b6b3a7640000808202935090915083821c90811415611a21575050919050565b6706f05b59d3b200005b8015611a6357670de0b6b3a7640000828002049150671bc16d674ec800008210611a5b579283019260019190911c905b60011c611a2b565b505050919050565b600061125d83836120ec565b6000680a688906bd8b0000008210611aa557604051634a4f26f160e01b81526004810183905260240161074a565b670de0b6b3a7640000604083901b0461125d816121ae565b6000831580611aca575082155b15611ad75750600061125d565b6001826001811115611aeb57611aeb612c60565b14611afe57670de0b6b3a7640000611b0b565b676765c793fa10079d601b1b5b6001836001811115611b1f57611b1f612c60565b14611b3c57611b376002670de0b6b3a7640000612bc5565b611b52565b611b526002676765c793fa10079d601b1b612bc5565b611b5c8587612b6b565b611b669190612b23565b61188c9190612bc5565b6000610da44261159f565b6000806000888861ffff1661ffff8110611b9757611b97612bf4565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611bf25787859250925050611cb8565b8461ffff168461ffff16118015611c1a5750611c0f600186612bd9565b61ffff168861ffff16145b15611c2757839150611c2b565b8491505b81611c37896001612c76565b611c419190612c9c565b9250611c4d878761192e565b898461ffff1661ffff8110611c6457611c64612bf4565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b600061125d8284612b6b565b805160009061045090670de0b6b3a764000090612bc5565b600061125d8284612b23565b611cfb6129f2565b611d036129f2565b878461ffff1661ffff8110611d1a57611d1a612bf4565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611d99578663ffffffff16826000015163ffffffff161415611d8557611cb8565b81611d90878761192e565b91509150611cb8565b8783611da6866001612c76565b611db09190612c9c565b61ffff1661ffff8110611dc557611dc5612bf4565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611e4a5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611e8a5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015260640161074a565b611e9688888686612840565b91509150965096945050505050565b600082611edd5760405162461bcd60e51b815260040161074a906020808252600490820152630444956360e41b604082015260600190565b6000611eea600285612bc5565b905083816001856001811115611f0257611f02612c60565b14611f1557670de0b6b3a7640000611f22565b676765c793fa10079d601b1b5b611f2c9088612b6b565b611f369190612b23565b6115969190612bc5565b600080806000198587098587029250828110838203039150508060001415611f7b57838281611f7157611f71612baf565b049250505061125d565b838110611fa557604051631dcf306360e21b8152600481018290526024810185905260440161074a565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b821061202e57608091821c9161202b9082612b23565b90505b600160401b821061204c57604091821c916120499082612b23565b90505b600160201b821061206a57602091821c916120679082612b23565b90505b62010000821061208757601091821c916120849082612b23565b90505b61010082106120a357600891821c916120a09082612b23565b90505b601082106120be57600491821c916120bb9082612b23565b90505b600482106120d957600291821c916120d69082612b23565b90505b6002821061116a57610450600182612b23565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106121305760405163698d9a0160e11b81526004810182905260240161074a565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff81118261216a5780670de0b6b3a7640000850401945050505050610450565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156121ce5768016a09e667f3bcc9090260401c5b6001603e1b8216156121e9576801306fe0a31b7152df0260401c5b6001603d1b821615612204576801172b83c7d517adce0260401c5b6001603c1b82161561221f5768010b5586cf9890f62a0260401c5b6001603b1b82161561223a576801059b0d31585743ae0260401c5b6001603a1b82161561225557680102c9a3e778060ee70260401c5b600160391b8216156122705768010163da9fb33356d80260401c5b600160381b82161561228b57680100b1afa5abcbed610260401c5b600160371b8216156122a65768010058c86da1c09ea20260401c5b600160361b8216156122c1576801002c605e2e8cec500260401c5b600160351b8216156122dc57680100162f3904051fa10260401c5b600160341b8216156122f7576801000b175effdc76ba0260401c5b600160331b82161561231257680100058ba01fb9f96d0260401c5b600160321b82161561232d5768010002c5cc37da94920260401c5b600160311b821615612348576801000162e525ee05470260401c5b600160301b8216156123635768010000b17255775c040260401c5b6001602f1b82161561237e576801000058b91b5bc9ae0260401c5b6001602e1b82161561239957680100002c5c89d5ec6d0260401c5b6001602d1b8216156123b45768010000162e43f4f8310260401c5b6001602c1b8216156123cf57680100000b1721bcfc9a0260401c5b6001602b1b8216156123ea5768010000058b90cf1e6e0260401c5b6001602a1b821615612405576801000002c5c863b73f0260401c5b600160291b82161561242057680100000162e430e5a20260401c5b600160281b82161561243b576801000000b1721835510260401c5b600160271b82161561245657680100000058b90c0b490260401c5b600160261b8216156124715768010000002c5c8601cc0260401c5b600160251b82161561248c576801000000162e42fff00260401c5b600160241b8216156124a75768010000000b17217fbb0260401c5b600160231b8216156124c2576801000000058b90bfce0260401c5b600160221b8216156124dd57680100000002c5c85fe30260401c5b600160211b8216156124f85768010000000162e42ff10260401c5b600160201b82161561251357680100000000b17217f80260401c5b638000000082161561252e5768010000000058b90bfc0260401c5b6340000000821615612549576801000000002c5c85fe0260401c5b632000000082161561256457680100000000162e42ff0260401c5b631000000082161561257f576801000000000b17217f0260401c5b630800000082161561259a57680100000000058b90c00260401c5b63040000008216156125b55768010000000002c5c8600260401c5b63020000008216156125d0576801000000000162e4300260401c5b63010000008216156125eb5768010000000000b172180260401c5b62800000821615612605576801000000000058b90c0260401c5b6240000082161561261f57680100000000002c5c860260401c5b622000008216156126395768010000000000162e430260401c5b6210000082161561265357680100000000000b17210260401c5b6208000082161561266d5768010000000000058b910260401c5b62040000821615612687576801000000000002c5c80260401c5b620200008216156126a157680100000000000162e40260401c5b620100008216156126ba5761b172600160401b010260401c5b6180008216156126d2576158b9600160401b010260401c5b6140008216156126ea57612c5d600160401b010260401c5b6120008216156127025761162e600160401b010260401c5b61100082161561271a57610b17600160401b010260401c5b6108008216156127325761058c600160401b010260401c5b61040082161561274a576102c6600160401b010260401c5b61020082161561276257610163600160401b010260401c5b6101008216156127795760b1600160401b010260401c5b608082161561278f576059600160401b010260401c5b60408216156127a557602c600160401b010260401c5b60208216156127bb576016600160401b010260401c5b60108216156127d157600b600160401b010260401c5b60088216156127e7576006600160401b010260401c5b60048216156127fd576003600160401b010260401c5b6002821615612813576001600160401b010260401c5b6001821615612829576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6128486129f2565b6128506129f2565b60008361285e866001612c76565b6128689190612c9c565b61ffff169050600060018561ffff16836128829190612b23565b61288c9190612b54565b905060005b600161289d8385612b23565b901c9050886128b061ffff881683612c4c565b61ffff81106128c1576128c1612bf4565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff161515918101829052955061291857612911816001612b23565b9250612891565b8861ffff8716612929836001612b23565b6129339190612c4c565b61ffff811061294457612944612bf4565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906129b05750846000015163ffffffff168963ffffffff1611155b156129bb57506129e6565b806129d2576129cb600183612b54565b92506129e0565b6129dd826001612b23565b93505b50612891565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff8116811461116a57600080fd5b60008060408385031215612a3957600080fd5b612a4283612a12565b9150612a5060208401612a12565b90509250929050565b600060208284031215612a6b57600080fd5b5035919050565b60008060408385031215612a8557600080fd5b50508035926020909101359150565b600060208284031215612aa657600080fd5b813561ffff8116811461125d57600080fd5b600080600060608486031215612acd57600080fd5b505081359360208301359350604090920135919050565b600060208284031215612af657600080fd5b81356001600160a01b038116811461125d57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612b3657612b36612b0d565b500190565b600060208284031215612b4d57600080fd5b5051919050565b600082821015612b6657612b66612b0d565b500390565b6000816000190483118215151615612b8557612b85612b0d565b500290565b600063ffffffff83811690831681811015612ba757612ba7612b0d565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600082612bd457612bd4612baf565b500490565b600061ffff83811690831681811015612ba757612ba7612b0d565b634e487b7160e01b600052603260045260246000fd5b60006001600160d81b0383811690831681811015612ba757612ba7612b0d565b600061ffff80831681811415612c4257612c42612b0d565b6001019392505050565b600082612c5b57612c5b612baf565b500690565b634e487b7160e01b600052602160045260246000fd5b600061ffff808316818516808303821115612c9357612c93612b0d565b01949350505050565b600061ffff80841680612cb157612cb1612baf565b9216919091069291505056fea26469706673582212205d5c71b124ffcc0d244d52c4a73455196e30b3fbf164e20929eb16a5fb8e859b64736f6c63430008090033";

export class CompoundBorrowRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ctoken: string,
    ethPool: boolean,
    underlying: string,
    _decimals: BigNumberish,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundBorrowRateOracle> {
    return super.deploy(
      _ctoken,
      ethPool,
      underlying,
      _decimals,
      _times,
      _results,
      overrides || {}
    ) as Promise<CompoundBorrowRateOracle>;
  }
  getDeployTransaction(
    _ctoken: string,
    ethPool: boolean,
    underlying: string,
    _decimals: BigNumberish,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ctoken,
      ethPool,
      underlying,
      _decimals,
      _times,
      _results,
      overrides || {}
    );
  }
  attach(address: string): CompoundBorrowRateOracle {
    return super.attach(address) as CompoundBorrowRateOracle;
  }
  connect(signer: Signer): CompoundBorrowRateOracle__factory {
    return super.connect(signer) as CompoundBorrowRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundBorrowRateOracleInterface {
    return new utils.Interface(_abi) as CompoundBorrowRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundBorrowRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompoundBorrowRateOracle;
  }
}

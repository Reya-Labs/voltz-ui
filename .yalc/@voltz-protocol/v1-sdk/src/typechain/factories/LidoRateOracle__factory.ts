/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LidoRateOracle,
  LidoRateOracleInterface,
} from "../LidoRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStETH",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "_times",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "_results",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "contract IStETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620031853803806200318583398101604081905262000034916200086c565b60006200004133620000c8565b6001600160a01b039081166080528316620000965760405162461bcd60e51b815260206004820152601060248201526f1cdd115512081b5d5cdd08195e1a5cdd60821b60448201526064015b60405180910390fd5b6201000380546001600160a01b0319166001600160a01b038516179055620000bf828262000118565b50505062000aad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000127600261ffff6200097e565b825110620001495760405162461bcd60e51b81526004016200008d90620009a1565b8151815161ffff821614620001725760405162461bcd60e51b81526004016200008d90620009bf565b600062000181826001620009eb565b61ffff166001600160401b038111156200019f576200019f6200078a565b604051908082528060200260200182016040528015620001c9578160200160208202803683370190505b5090506000620001db836001620009eb565b61ffff166001600160401b03811115620001f957620001f96200078a565b60405190808252806020026020018201604052801562000223578160200160208202803683370190505b50905060005b8361ffff16811015620002d4578581815181106200024b576200024b62000a14565b602002602001015183828151811062000268576200026862000a14565b602002602001019063ffffffff16908163ffffffff168152505084818151811062000297576200029762000a14565b6020026020010151828281518110620002b457620002b462000a14565b602090810291909101015280620002cb8162000a2a565b91505062000229565b50620002ea620003a860201b6200089f1760201c565b828461ffff168151811062000303576200030362000a14565b63ffffffff9092166020928302919091019091015262000322620003ba565b818461ffff16815181106200033b576200033b62000a14565b60200260200101818152505062000364828260046200046f60201b620008af179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff19909216959093169490941793909317919091161790555050505050565b6000620003b542620006b4565b905090565b6201000354604051630f451f7160e31b81526b033b2e3c9fd0803ce800000060048201526000916001600160a01b031690637a28fb889060240160206040518083038186803b1580156200040d57600080fd5b505afa15801562000422573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000448919062000a48565b9050806200046c576040516001620723a560e01b0319815260040160405180910390fd5b90565b600080600061ffff855110620004995760405162461bcd60e51b81526004016200008d90620009a1565b8451845161ffff821614620004c25760405162461bcd60e51b81526004016200008d90620009bf565b60008161ffff1611620004fd5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016200008d565b6000805b8261ffff168161ffff1610156200069357878161ffff16815181106200052b576200052b62000a14565b602002602001015163ffffffff168263ffffffff1610620005815760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016200008d565b620005d3888261ffff16815181106200059e576200059e62000a14565b6020026020010151888361ffff1681518110620005bf57620005bf62000a14565b6020026020010151620006fb60201b60201c565b898261ffff1661ffff8110620005ed57620005ed62000a14565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff831690811062000673576200067362000a14565b6020026020010151915080806200068a9062000a62565b91505062000501565b508180620006a360018262000a87565b945094509450505093509350939050565b8063ffffffff81168114620006f65760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016200008d565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b038211156200075a5760405162461bcd60e51b81526004016200008d906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620007cb57620007cb6200078a565b604052919050565b60006001600160401b03821115620007ef57620007ef6200078a565b5060051b60200190565b600082601f8301126200080b57600080fd5b81516020620008246200081e83620007d3565b620007a0565b82815260059290921b840181019181810190868411156200084457600080fd5b8286015b8481101562000861578051835291830191830162000848565b509695505050505050565b6000806000606084860312156200088257600080fd5b83516001600160a01b03811681146200089a57600080fd5b602085810151919450906001600160401b0380821115620008ba57600080fd5b818701915087601f830112620008cf57600080fd5b8151620008e06200081e82620007d3565b81815260059190911b8301840190848101908a8311156200090057600080fd5b938501935b828510156200093457845163ffffffff81168114620009245760008081fd5b8252938501939085019062000905565b60408a015190975094505050808311156200094e57600080fd5b50506200095e86828701620007f9565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000826200099c57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000a0b5762000a0b62000968565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000a415762000a4162000968565b5060010190565b60006020828403121562000a5b57600080fd5b5051919050565b600061ffff8083168181141562000a7d5762000a7d62000968565b6001019392505050565b600061ffff8381169083168181101562000aa55762000aa562000968565b039392505050565b6080516126bc62000ac960003960006101eb01526126bc6000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c80631195082e1461010157806322ff65681461013f578063252c09d71461015957806325f258dd1461019857806332148f67146101ab57806341453528146101c057806354124c64146101d35780636f307dc3146101e6578063715018a6146102255780637aa4db131461022d5780637cf2cc9f146102355780638da5cb5b1461023e57806393556dbd1461024657806399940ece14610259578063bdb050921461026e578063c330c98d14610281578063c7db359b14610290578063efdf5d8b146102d8578063f2fde38b146102e0578063f739670c146102f3575b600080fd5b61012c61010f3660046123da565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610147600381565b60405160ff9091168152602001610136565b61016c61016736600461240d565b610306565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610136565b61012c6101a6366004612426565b610340565b6101be6101b9366004612448565b6103b7565b005b61012c6101ce366004612426565b61043c565b61012c6101e136600461246c565b610450565b61020d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610136565b6101be6104a5565b6101be6104e9565b61012c60025481565b61020d610536565b61012c610254366004612426565b610545565b620100035461020d906001600160a01b031681565b6101be61027c36600461240d565b6105d5565b61012c670de0b6b3a764000081565b6003546102b39061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610136565b61012c610649565b6101be6102ee366004612498565b6106f8565b61012c610301366004612426565b610795565b60048161ffff811061031757600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b60008061034d8484610af2565b909250905080156103af57600061036d670de0b6b3a76400008604610c30565b90506000610384670de0b6b3a76400008604610c30565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff1660006103d360048385610c75565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146104375760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b60006104488383610af2565b509392505050565b60008061045c83610d6a565b90506000610472670de0b6b3a7640000866124d7565b905060006104808284610d81565b9050600061048d82610dc0565b90506104998882610dea565b98975050505050505050565b336104ae610536565b6001600160a01b0316146104dd5760405162461bcd60e51b81526004016104d4906124ef565b60405180910390fd5b6104e76000610df8565b565b60035461050e9061ffff80821691620100008104821691600160201b90910416610e48565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b60008183111561058a5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016104d4565b60006105968484610795565b905060006105a48585612524565b905060006105b182610f7a565b905060006105be82610d6a565b90506105ca8482610fc7565b979650505050505050565b336105de610536565b6001600160a01b0316146106045760405162461bcd60e51b81526004016104d4906124ef565b80600254146106465760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b6201000354604051630f451f7160e31b8152676765c793fa10079d601b1b60048201526000916001600160a01b031690637a28fb889060240160206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d2919061253b565b9050806106f5576040516001620723a560e01b0319815260040160405180910390fd5b90565b33610701610536565b6001600160a01b0316146107275760405162461bcd60e51b81526004016104d4906124ef565b6001600160a01b03811661078c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d4565b61064681610df8565b6000818311156107d35760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016104d4565b818314156107e3575060006103b1565b60006107ed61089f565b905060006107fa85610c30565b9050600061080785610c30565b60035490915060009061082b908590859061ffff808216916201000090041661102c565b60035490915060009061084f908690859061ffff808216916201000090041661102c565b905081811115610891576000610883676765c793fa10079d601b1b6108748486611278565b61087e9190612524565b611286565b96506103b195505050505050565b6000955050505050506103b1565b60006108aa42610c30565b905090565b600080600061ffff8551106108ef5760405162461bcd60e51b81526004016104d4906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff82161461093a5760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b60448201526064016104d4565b60008161ffff16116109735760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016104d4565b6000805b8261ffff168161ffff161015610ad357878161ffff168151811061099d5761099d612554565b602002602001015163ffffffff168263ffffffff16106109f15760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016104d4565b610a35888261ffff1681518110610a0a57610a0a612554565b6020026020010151888361ffff1681518110610a2857610a28612554565b6020026020010151611312565b898261ffff1661ffff8110610a4c57610a4c612554565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610ab657610ab6612554565b602002602001015191508080610acb9061256a565b915050610977565b508180610ae160018261258c565b945094509450505093509350939050565b60008080610b09670de0b6b3a76400008604610c30565b90506000610b20670de0b6b3a76400008604610c30565b905060008263ffffffff16118015610b3e575060008163ffffffff16115b610b725760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016104d4565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610bc85763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610c27565b8063ffffffff16610bd761089f565b63ffffffff1610610c0357610bf88263ffffffff168263ffffffff16610795565b935060019250610c27565b610c208263ffffffff16610c1561089f565b63ffffffff16610795565b9350600092505b50509250929050565b8063ffffffff81168114610c705760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016104d4565b919050565b6000808361ffff1611610cae5760405162461bcd60e51b81526020600482015260016024820152604960f81b60448201526064016104d4565b61ffff8261ffff1610610cf25760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b60448201526064016104d4565b8261ffff168261ffff1611610d08575081610d63565b825b8261ffff168161ffff161015610d5e576001858261ffff1661ffff8110610d3357610d33612554565b01805463ffffffff191663ffffffff9290921691909117905580610d568161256a565b915050610d0a565b508190505b9392505050565b60006103b1826a1a1601fc4ea7109e00000061138a565b600082610da6578115610d95576000610d9f565b670de0b6b3a76400005b90506103b1565b610d63610dbb610db58561139f565b8461144f565b61145b565b600080610de0670de0b6b3a7640000676765c793fa10079d601b1b6125c5565b610d6390846125d9565b6000610d63838360016114a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110610e6557610e65612554565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000610eaf61089f565b9050816000015163ffffffff166002548263ffffffff16610ed09190612524565b1015610ee3578686935093505050610f72565b6000610eed610649565b90507f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375610f18611554565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a1610f6a60048984848b8b61155f565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21821115610fb957604051633492ffd960e01b8152600481018390526024016104d4565b50670de0b6b3a76400000290565b600082610fd6575060006103b1565b6000610feb610fe56001610f7a565b8461138a565b9050600061100d85610ffd6001610f7a565b61100791906124d7565b83610d81565b90506110196001610f7a565b6110239082612524565b95945050505050565b60008363ffffffff168563ffffffff16101561105b57604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff161415611103576110776123a6565b60048461ffff1661ffff811061108f5761108f612554565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146110ec576110e5610649565b91506110fd565b80602001516001600160d81b031691505b50611270565b600061110d610649565b90506000806111216004888a868a8a6116a7565b91509150816000015163ffffffff168763ffffffff1614156111525781602001516001600160d81b0316935061126c565b805163ffffffff888116911614156111795780602001516001600160d81b0316935061126c565b600082602001516001600160d81b031682602001516001600160d81b031611156111e8576000676765c793fa10079d601b1b6111cf84602001516001600160d81b031686602001516001600160d81b0316611278565b6111d99190612524565b90506111e481611286565b9150505b8251825160009161121b91670de0b6b3a764000091611206916125f8565b63ffffffff1661121691906125d9565b610d6a565b905060006112298383610fc7565b905061126685602001516001600160d81b031682670de0b6b3a764000088600001518e61125691906125f8565b63ffffffff166101e191906125d9565b96505050505b5050505b949350505050565b6000610d6383836001611859565b6000806112a6670de0b6b3a7640000676765c793fa10079d601b1b6125c5565b6112b090846125c5565b905060026112d1670de0b6b3a7640000676765c793fa10079d601b1b6125c5565b6112db91906125c5565b6112f8670de0b6b3a7640000676765c793fa10079d601b1b6125c5565b6113029085612615565b106103b157610d636001826124d7565b61131a6123a6565b6001600160d81b0382111561135a5760405162461bcd60e51b81526004016104d4906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6000610d6383670de0b6b3a7640000846118f4565b6000670de0b6b3a76400008210156113cd57604051633621413760e21b8152600481018390526024016104d4565b60006113e2670de0b6b3a764000084046119c2565b670de0b6b3a7640000808202935090915083821c90811415611405575050919050565b6706f05b59d3b200005b801561144757670de0b6b3a7640000828002049150671bc16d674ec80000821061143f579283019260019190911c905b60011c61140f565b505050919050565b6000610d638383611aa0565b6000680a688906bd8b000000821061148957604051634a4f26f160e01b8152600481018390526024016104d4565b670de0b6b3a7640000604083901b04610d6381611b62565b60008315806114ae575082155b156114bb57506000610d63565b60018260018111156114cf576114cf612629565b146114e257670de0b6b3a76400006114ef565b676765c793fa10079d601b1b5b600183600181111561150357611503612629565b146115205761151b6002670de0b6b3a76400006125c5565b611536565b6115366002676765c793fa10079d601b1b6125c5565b61154085876125d9565b61154a91906124d7565b61127091906125c5565b60006108aa42610f7a565b6000806000888861ffff1661ffff811061157b5761157b612554565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881614156115d6578785925092505061169c565b8461ffff168461ffff161180156115fe57506115f360018661258c565b61ffff168861ffff16145b1561160b5783915061160f565b8491505b8161161b89600161263f565b6116259190612665565b92506116318787611312565b898461ffff1661ffff811061164857611648612554565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b6116af6123a6565b6116b76123a6565b878461ffff1661ffff81106116ce576116ce612554565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509088161061174d578663ffffffff16826000015163ffffffff1614156117395761169c565b816117448787611312565b9150915061169c565b878361175a86600161263f565b6117649190612665565b61ffff1661ffff811061177957611779612554565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506117fe5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff8089169116111561183e5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016104d4565b61184a888886866121f4565b91509150965096945050505050565b6000826118915760405162461bcd60e51b81526004016104d4906020808252600490820152630444956360e41b604082015260600190565b600061189e6002856125c5565b9050838160018560018111156118b6576118b6612629565b146118c957670de0b6b3a76400006118d6565b676765c793fa10079d601b1b5b6118e090886125d9565b6118ea91906124d7565b61102391906125c5565b60008080600019858709858702925082811083820303915050806000141561192f57838281611925576119256125af565b0492505050610d63565b83811061195957604051631dcf306360e21b815260048101829052602481018590526044016104d4565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b82106119e257608091821c916119df90826124d7565b90505b600160401b8210611a0057604091821c916119fd90826124d7565b90505b600160201b8210611a1e57602091821c91611a1b90826124d7565b90505b620100008210611a3b57601091821c91611a3890826124d7565b90505b6101008210611a5757600891821c91611a5490826124d7565b90505b60108210611a7257600491821c91611a6f90826124d7565b90505b60048210611a8d57600291821c91611a8a90826124d7565b90505b60028210610c70576103b16001826124d7565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611ae45760405163698d9a0160e11b8152600481018290526024016104d4565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611b1e5780670de0b6b3a76400008504019450505050506103b1565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611b825768016a09e667f3bcc9090260401c5b6001603e1b821615611b9d576801306fe0a31b7152df0260401c5b6001603d1b821615611bb8576801172b83c7d517adce0260401c5b6001603c1b821615611bd35768010b5586cf9890f62a0260401c5b6001603b1b821615611bee576801059b0d31585743ae0260401c5b6001603a1b821615611c0957680102c9a3e778060ee70260401c5b600160391b821615611c245768010163da9fb33356d80260401c5b600160381b821615611c3f57680100b1afa5abcbed610260401c5b600160371b821615611c5a5768010058c86da1c09ea20260401c5b600160361b821615611c75576801002c605e2e8cec500260401c5b600160351b821615611c9057680100162f3904051fa10260401c5b600160341b821615611cab576801000b175effdc76ba0260401c5b600160331b821615611cc657680100058ba01fb9f96d0260401c5b600160321b821615611ce15768010002c5cc37da94920260401c5b600160311b821615611cfc576801000162e525ee05470260401c5b600160301b821615611d175768010000b17255775c040260401c5b6001602f1b821615611d32576801000058b91b5bc9ae0260401c5b6001602e1b821615611d4d57680100002c5c89d5ec6d0260401c5b6001602d1b821615611d685768010000162e43f4f8310260401c5b6001602c1b821615611d8357680100000b1721bcfc9a0260401c5b6001602b1b821615611d9e5768010000058b90cf1e6e0260401c5b6001602a1b821615611db9576801000002c5c863b73f0260401c5b600160291b821615611dd457680100000162e430e5a20260401c5b600160281b821615611def576801000000b1721835510260401c5b600160271b821615611e0a57680100000058b90c0b490260401c5b600160261b821615611e255768010000002c5c8601cc0260401c5b600160251b821615611e40576801000000162e42fff00260401c5b600160241b821615611e5b5768010000000b17217fbb0260401c5b600160231b821615611e76576801000000058b90bfce0260401c5b600160221b821615611e9157680100000002c5c85fe30260401c5b600160211b821615611eac5768010000000162e42ff10260401c5b600160201b821615611ec757680100000000b17217f80260401c5b6380000000821615611ee25768010000000058b90bfc0260401c5b6340000000821615611efd576801000000002c5c85fe0260401c5b6320000000821615611f1857680100000000162e42ff0260401c5b6310000000821615611f33576801000000000b17217f0260401c5b6308000000821615611f4e57680100000000058b90c00260401c5b6304000000821615611f695768010000000002c5c8600260401c5b6302000000821615611f84576801000000000162e4300260401c5b6301000000821615611f9f5768010000000000b172180260401c5b62800000821615611fb9576801000000000058b90c0260401c5b62400000821615611fd357680100000000002c5c860260401c5b62200000821615611fed5768010000000000162e430260401c5b6210000082161561200757680100000000000b17210260401c5b620800008216156120215768010000000000058b910260401c5b6204000082161561203b576801000000000002c5c80260401c5b6202000082161561205557680100000000000162e40260401c5b6201000082161561206e5761b172600160401b010260401c5b618000821615612086576158b9600160401b010260401c5b61400082161561209e57612c5d600160401b010260401c5b6120008216156120b65761162e600160401b010260401c5b6110008216156120ce57610b17600160401b010260401c5b6108008216156120e65761058c600160401b010260401c5b6104008216156120fe576102c6600160401b010260401c5b61020082161561211657610163600160401b010260401c5b61010082161561212d5760b1600160401b010260401c5b6080821615612143576059600160401b010260401c5b604082161561215957602c600160401b010260401c5b602082161561216f576016600160401b010260401c5b601082161561218557600b600160401b010260401c5b600882161561219b576006600160401b010260401c5b60048216156121b1576003600160401b010260401c5b60028216156121c7576001600160401b010260401c5b60018216156121dd576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6121fc6123a6565b6122046123a6565b60008361221286600161263f565b61221c9190612665565b61ffff169050600060018561ffff168361223691906124d7565b6122409190612524565b905060005b600161225183856124d7565b901c90508861226461ffff881683612615565b61ffff811061227557612275612554565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506122cc576122c58160016124d7565b9250612245565b8861ffff87166122dd8360016124d7565b6122e79190612615565b61ffff81106122f8576122f8612554565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906123645750846000015163ffffffff168963ffffffff1611155b1561236f575061239a565b806123865761237f600183612524565b9250612394565b6123918260016124d7565b93505b50612245565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610c7057600080fd5b600080604083850312156123ed57600080fd5b6123f6836123c6565b9150612404602084016123c6565b90509250929050565b60006020828403121561241f57600080fd5b5035919050565b6000806040838503121561243957600080fd5b50508035926020909101359150565b60006020828403121561245a57600080fd5b813561ffff81168114610d6357600080fd5b60008060006060848603121561248157600080fd5b505081359360208301359350604090920135919050565b6000602082840312156124aa57600080fd5b81356001600160a01b0381168114610d6357600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156124ea576124ea6124c1565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612536576125366124c1565b500390565b60006020828403121561254d57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600061ffff80831681811415612582576125826124c1565b6001019392505050565b600061ffff838116908316818110156125a7576125a76124c1565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826125d4576125d46125af565b500490565b60008160001904831182151516156125f3576125f36124c1565b500290565b600063ffffffff838116908316818110156125a7576125a76124c1565b600082612624576126246125af565b500690565b634e487b7160e01b600052602160045260246000fd5b600061ffff80831681851680830382111561265c5761265c6124c1565b01949350505050565b600061ffff8084168061267a5761267a6125af565b9216919091069291505056fea26469706673582212203a5ce3ef5f5d1bf91ff654ed7a8a827cd3803a659f62ed13835214889444119e64736f6c63430008090033";

export class LidoRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stEth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LidoRateOracle> {
    return super.deploy(
      _stEth,
      _times,
      _results,
      overrides || {}
    ) as Promise<LidoRateOracle>;
  }
  getDeployTransaction(
    _stEth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stEth,
      _times,
      _results,
      overrides || {}
    );
  }
  attach(address: string): LidoRateOracle {
    return super.attach(address) as LidoRateOracle;
  }
  connect(signer: Signer): LidoRateOracle__factory {
    return super.connect(signer) as LidoRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoRateOracleInterface {
    return new utils.Interface(_abi) as LidoRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoRateOracle {
    return new Contract(address, _abi, signerOrProvider) as LidoRateOracle;
  }
}

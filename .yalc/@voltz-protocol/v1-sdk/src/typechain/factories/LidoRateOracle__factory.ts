/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LidoRateOracle,
  LidoRateOracleInterface,
} from "../LidoRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStETH",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "contract ILidoOracle",
        name: "_lidoOracle",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "_times",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "_results",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lidoOracle",
    outputs: [
      {
        internalType: "contract ILidoOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshBeaconSpec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "contract IStETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003bd138038062003bd1833981016040819052620000349162000b28565b82620000403362000197565b6001600160a01b03811660805243620100045562000069620001e7602090811b62000dff17901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b038516620000ea5760405162461bcd60e51b815260206004820152601060248201526f1cdd115512081b5d5cdd08195e1a5cdd60821b60448201526064015b60405180910390fd5b6001600160a01b038416620001425760405162461bcd60e51b815260206004820152601560248201527f6c69646f4f7261636c65206d75737420657869737400000000000000000000006044820152606401620000e1565b6201000780546001600160a01b038088166001600160a01b0319928316179092556201000880549287169290911691909117905562000180620001f9565b6200018c8282620002ec565b505050505062000e6e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001f44262000577565b905090565b60008060006201000860009054906101000a90046001600160a01b03166001600160a01b031663e547c77c6040518163ffffffff1660e01b815260040160806040518083038186803b1580156200024f57600080fd5b505afa15801562000264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028a919062000c5d565b620100088054600160a01b600160e01b031916600160a01b6001600160401b0384160217905591955093509150620002c59050828462000cd0565b6201000980546001600160401b0319166001600160401b0392909216919091179055505050565b620002fb600261ffff62000d02565b8251106200031d5760405162461bcd60e51b8152600401620000e19062000d25565b8151815161ffff821614620003465760405162461bcd60e51b8152600401620000e19062000d43565b60006200035582600162000d6f565b61ffff166001600160401b0381111562000373576200037362000a46565b6040519080825280602002602001820160405280156200039d578160200160208202803683370190505b5090506000620003af83600162000d6f565b61ffff166001600160401b03811115620003cd57620003cd62000a46565b604051908082528060200260200182016040528015620003f7578160200160208202803683370190505b50905060005b8361ffff16811015620004a8578581815181106200041f576200041f62000d98565b60200260200101518382815181106200043c576200043c62000d98565b602002602001019063ffffffff16908163ffffffff16815250508481815181106200046b576200046b62000d98565b602002602001015182828151811062000488576200048862000d98565b6020908102919091010152806200049f8162000dae565b915050620003fd565b50600080620004b6620005be565b9150915081848661ffff1681518110620004d457620004d462000d98565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff168151811062000508576200050862000d98565b60200260200101818152505062000531848460046200075960201b62000e0f179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620005b95760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000e1565b919050565b6201000754604051630f451f7160e31b81526b033b2e3c9fd0803ce80000006004820152600091829182916001600160a01b031690637a28fb889060240160206040518083038186803b1580156200061557600080fd5b505afa1580156200062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000650919062000dcc565b90508062000674576040516001620723a560e01b0319815260040160405180910390fd5b6201000854604080516389896aef60e01b815290516000926001600160a01b0316916389896aef916004808301926020929190829003018186803b158015620006bc57600080fd5b505afa158015620006d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f7919062000dcc565b62010009549091506000906200074e906200071c906001600160401b03168462000de6565b62010008546200073d9190600160a01b90046001600160401b031662000e08565b6200057760201b620010521760201c565b959294509192505050565b600080600061ffff855110620007835760405162461bcd60e51b8152600401620000e19062000d25565b8451845161ffff821614620007ac5760405162461bcd60e51b8152600401620000e19062000d43565b60008161ffff1611620007e75760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000e1565b6000805b8261ffff168161ffff1610156200097d57878161ffff168151811062000815576200081562000d98565b602002602001015163ffffffff168263ffffffff16106200086b5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000e1565b620008bd888261ffff168151811062000888576200088862000d98565b6020026020010151888361ffff1681518110620008a957620008a962000d98565b60200260200101516200099e60201b60201c565b898261ffff1661ffff8110620008d757620008d762000d98565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff83169081106200095d576200095d62000d98565b602002602001015191508080620009749062000e23565b915050620007eb565b5081806200098d60018262000e48565b945094509450505093509350939050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620009fd5760405162461bcd60e51b8152600401620000e1906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b038116811462000a4357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000a875762000a8762000a46565b604052919050565b60006001600160401b0382111562000aab5762000aab62000a46565b5060051b60200190565b600082601f83011262000ac757600080fd5b8151602062000ae062000ada8362000a8f565b62000a5c565b82815260059290921b8401810191818101908684111562000b0057600080fd5b8286015b8481101562000b1d578051835291830191830162000b04565b509695505050505050565b600080600080600060a0868803121562000b4157600080fd5b855162000b4e8162000a2d565b8095505060208087015162000b638162000a2d565b604088015190955062000b768162000a2d565b60608801519094506001600160401b038082111562000b9457600080fd5b818901915089601f83011262000ba957600080fd5b815162000bba62000ada8262000a8f565b81815260059190911b8301840190848101908c83111562000bda57600080fd5b938501935b8285101562000c0e57845163ffffffff8116811462000bfe5760008081fd5b8252938501939085019062000bdf565b60808c0151909750945050508083111562000c2857600080fd5b505062000c388882890162000ab5565b9150509295509295909350565b80516001600160401b0381168114620005b957600080fd5b6000806000806080858703121562000c7457600080fd5b62000c7f8562000c45565b935062000c8f6020860162000c45565b925062000c9f6040860162000c45565b915062000caf6060860162000c45565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038281168482168115158284048211161562000cf95762000cf962000cba565b02949350505050565b60008262000d2057634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000d8f5762000d8f62000cba565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000dc55762000dc562000cba565b5060010190565b60006020828403121562000ddf57600080fd5b5051919050565b600081600019048311821515161562000e035762000e0362000cba565b500290565b6000821982111562000e1e5762000e1e62000cba565b500190565b600061ffff8083168181141562000e3e5762000e3e62000cba565b6001019392505050565b600061ffff8381169083168181101562000e665762000e6662000cba565b039392505050565b608051612d4762000e8a60003960006102d50152612d476000f3fe608060405234801561001057600080fd5b506004361061015f5760003560e01c80631195082e14610164578063163e9c4f146101a257806317221ef1146101b557806322ff6568146101c857806324b18b17146101e2578063252c09d71461021657806325f258dd1461025557806332148f6714610268578063357d7b5c1461027d57806341453528146102aa57806354124c64146102bd5780636f307dc3146102d0578063715018a6146102f75780637aa4db13146102ff5780637cf2cc9f146103075780638a6b8c5d146103105780638da5cb5b1461031857806391aa375d1461032057806393556dbd1461034b57806399940ece1461035e578063bdb0509214610373578063c330c98d14610386578063c7db359b14610395578063ddc7a5aa146103dd578063efdf5d8b146103e5578063f2fde38b146103ed578063f739670c14610400578063f90ce5ba14610413578063fe115fbe1461042b575b600080fd5b61018f6101723660046129ab565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61018f6101b03660046129de565b610433565b61018f6101c33660046129de565b610445565b6101d0600381565b60405160ff9091168152602001610199565b620100055462010006546101fa9163ffffffff169082565b6040805163ffffffff9093168352602083019190915201610199565b6102296102243660046129de565b610451565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610199565b61018f6102633660046129f7565b61048b565b61027b610276366004612a19565b610506565b005b6201000854610292906001600160a01b031681565b6040516001600160a01b039091168152602001610199565b61018f6102b83660046129f7565b61058b565b61018f6102cb366004612a3d565b61059f565b6102927f000000000000000000000000000000000000000000000000000000000000000081565b61027b6105f4565b61027b610638565b61018f60025481565b6101fa610685565b610292610800565b6201000654620100055463ffffffff165b6040805192835263ffffffff909116602083015201610199565b61018f6103593660046129f7565b61080f565b6201000754610292906001600160a01b031681565b61027b6103813660046129de565b61089f565b61018f670de0b6b3a764000081565b6003546103b89061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610199565b61027b610913565b61018f610a00565b61027b6103fb366004612a69565b610a88565b61018f61040e3660046129f7565b610b25565b620100035462010004546101fa9163ffffffff169082565b610331610c2f565b600061043f8242610b25565b92915050565b600061043f824261080f565b60048161ffff811061046257600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104988484611097565b909250905080156104ff5760006104bd670de0b6b3a76400008604611052565b611052565b905060006104d4670de0b6b3a76400008604611052565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff166000610522600483856111d5565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146105865760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b60006105978383611097565b509392505050565b6000806105ab836112ca565b905060006105c1670de0b6b3a764000086612aa8565b905060006105cf82846112e1565b905060006105dc82611320565b90506105e8888261134a565b98975050505050505050565b336105fd610800565b6001600160a01b03161461062c5760405162461bcd60e51b815260040161062390612ac0565b60405180910390fd5b6106366000611358565b565b60035461065d9061ffff80821691620100008104821691600160201b909104166113a8565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6201000754604051630f451f7160e31b8152676765c793fa10079d601b1b6004820152600091829182916001600160a01b031690637a28fb889060240160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190612af5565b905080610735576040516001620723a560e01b0319815260040160405180910390fd5b6201000854604080516389896aef60e01b815290516000926001600160a01b0316916389896aef916004808301926020929190829003018186803b15801561077c57600080fd5b505afa158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b49190612af5565b62010009549091506000906107f5906107d6906001600160401b031684612b0e565b62010008546104b89190600160a01b90046001600160401b0316612aa8565b959294509192505050565b6000546001600160a01b031690565b6000818311156108545760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b6044820152606401610623565b60006108608484610b25565b9050600061086e8585612b2d565b9050600061087b8261154b565b90506000610888826112ca565b90506108948482611598565b979650505050505050565b336108a8610800565b6001600160a01b0316146108ce5760405162461bcd60e51b815260040161062390612ac0565b80600254146109105760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006201000860009054906101000a90046001600160a01b03166001600160a01b031663e547c77c6040518163ffffffff1660e01b815260040160806040518083038186803b15801561096857600080fd5b505afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190612b5b565b620100088054600160a01b600160e01b031916600160a01b6001600160401b03841602179055919550935091506109d990508284612baf565b6201000980546001600160401b0319166001600160401b0392909216919091179055505050565b6000806000610a0d610685565b91509150610a19610dff565b63ffffffff168263ffffffff1610610a315792915050565b600080610a3c610c2f565b915091508063ffffffff168285610a51610dff565b610a5b9190612bde565b63ffffffff16610a6b9190612b0e565b610a759190612c19565b610a7f9084612aa8565b94505050505090565b33610a91610800565b6001600160a01b031614610ab75760405162461bcd60e51b815260040161062390612ac0565b6001600160a01b038116610b1c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610623565b61091081611358565b600081831115610b635760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610623565b81831415610b735750600061043f565b6000610b7d610dff565b90506000610b8a85611052565b90506000610b9785611052565b600354909150600090610bbb908590859061ffff80821691620100009004166115fd565b600354909150600090610bdf908690859061ffff80821691620100009004166115fd565b905081811115610c21576000610c13676765c793fa10079d601b1b610c048486611849565b610c0e9190612b2d565b611857565b965061043f95505050505050565b60009550505050505061043f565b600354600090819061ffff16816001821015610c6357600354610c5e9060019062010000900461ffff16612c2d565b610c76565b600354610c769060019061ffff16612c2d565b60035490915060026201000090910461ffff1610801590610cb7575060048161ffff1661ffff8110610caa57610caa612c48565b0154600160f81b900460ff165b8015610d14575060048261ffff1661ffff8110610cd657610cd6612c48565b0154600160201b90046001600160d81b0316600461ffff838116908110610cff57610cff612c48565b0154600160201b90046001600160d81b031611155b610d465760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b6044820152606401610623565b60048161ffff1661ffff8110610d5e57610d5e612c48565b0154600160201b90046001600160d81b0316600461ffff848116908110610d8757610d87612c48565b0154610da39190600160201b90046001600160d81b0316612c5e565b6001600160d81b0316935060048161ffff1661ffff8110610dc657610dc6612c48565b015463ffffffff16600461ffff808516908110610de557610de5612c48565b0154610df7919063ffffffff16612bde565b925050509091565b6000610e0a42611052565b905090565b600080600061ffff855110610e4f5760405162461bcd60e51b8152600401610623906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610e9a5760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610623565b60008161ffff1611610ed35760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610623565b6000805b8261ffff168161ffff16101561103357878161ffff1681518110610efd57610efd612c48565b602002602001015163ffffffff168263ffffffff1610610f515760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610623565b610f95888261ffff1681518110610f6a57610f6a612c48565b6020026020010151888361ffff1681518110610f8857610f88612c48565b60200260200101516118e3565b898261ffff1661ffff8110610fac57610fac612c48565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff831690811061101657611016612c48565b60200260200101519150808061102b90612c7e565b915050610ed7565b508180611041600182612c2d565b945094509450505093509350939050565b8063ffffffff811681146110925760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610623565b919050565b600080806110ae670de0b6b3a76400008604611052565b905060006110c5670de0b6b3a76400008604611052565b905060008263ffffffff161180156110e3575060008163ffffffff16115b6111175760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610623565b63ffffffff8083166000908152600160209081526040808320938516835292905220541561116d5763ffffffff8083166000908152600160209081526040808320938516835292905290812054945092506111cc565b8063ffffffff1661117c610dff565b63ffffffff16106111a85761119d8263ffffffff168263ffffffff16610b25565b9350600192506111cc565b6111c58263ffffffff166111ba610dff565b63ffffffff16610b25565b9350600092505b50509250929050565b6000808361ffff161161120e5760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610623565b61ffff8261ffff16106112525760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610623565b8261ffff168261ffff16116112685750816112c3565b825b8261ffff168161ffff1610156112be576001858261ffff1661ffff811061129357611293612c48565b01805463ffffffff191663ffffffff92909216919091179055806112b681612c7e565b91505061126a565b508190505b9392505050565b600061043f826a1a1601fc4ea7109e00000061195b565b6000826113065781156112f55760006112ff565b670de0b6b3a76400005b905061043f565b6112c361131b61131585611970565b84611a20565b611a2c565b600080611340670de0b6b3a7640000676765c793fa10079d601b1b612c19565b6112c39084612b0e565b60006112c383836001611a72565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106113c5576113c5612c48565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b909104161515908201529050600080611410610685565b600254855192945090925061142a9163ffffffff16612aa8565b8263ffffffff16101561144557878794509450505050611543565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa737561146e611b25565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546114c09043612b2d565b6201000655620100035463ffffffff166114d8610dff565b6114e29190612bde565b62010005805463ffffffff191663ffffffff9290921691909117905543620100045561150c610dff565b62010003805463ffffffff191663ffffffff92831617905561153b906004908a90859085908c908c90611b3016565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561158a57604051633492ffd960e01b815260048101839052602401610623565b50670de0b6b3a76400000290565b6000826115a75750600061043f565b60006115bc6115b6600161154b565b8461195b565b905060006115de856115ce600161154b565b6115d89190612aa8565b836112e1565b90506115ea600161154b565b6115f49082612b2d565b95945050505050565b60008363ffffffff168563ffffffff16101561162c57604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff1614156116d457611648612977565b60048461ffff1661ffff811061166057611660612c48565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146116bd576116b6610a00565b91506116ce565b80602001516001600160d81b031691505b50611841565b60006116de610a00565b90506000806116f26004888a868a8a611c78565b91509150816000015163ffffffff168763ffffffff1614156117235781602001516001600160d81b0316935061183d565b805163ffffffff8881169116141561174a5780602001516001600160d81b0316935061183d565b600082602001516001600160d81b031682602001516001600160d81b031611156117b9576000676765c793fa10079d601b1b6117a084602001516001600160d81b031686602001516001600160d81b0316611849565b6117aa9190612b2d565b90506117b581611857565b9150505b825182516000916117ec91670de0b6b3a7640000916117d791612bde565b63ffffffff166117e79190612b0e565b6112ca565b905060006117fa8383611598565b905061183785602001516001600160d81b031682670de0b6b3a764000088600001518e6118279190612bde565b63ffffffff166102cb9190612b0e565b96505050505b5050505b949350505050565b60006112c383836001611e2a565b600080611877670de0b6b3a7640000676765c793fa10079d601b1b612c19565b6118819084612c19565b905060026118a2670de0b6b3a7640000676765c793fa10079d601b1b612c19565b6118ac9190612c19565b6118c9670de0b6b3a7640000676765c793fa10079d601b1b612c19565b6118d39085612ca0565b1061043f576112c3600182612aa8565b6118eb612977565b6001600160d81b0382111561192b5760405162461bcd60e51b8152600401610623906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b60006112c383670de0b6b3a764000084611ec5565b6000670de0b6b3a764000082101561199e57604051633621413760e21b815260048101839052602401610623565b60006119b3670de0b6b3a76400008404611f93565b670de0b6b3a7640000808202935090915083821c908114156119d6575050919050565b6706f05b59d3b200005b8015611a1857670de0b6b3a7640000828002049150671bc16d674ec800008210611a10579283019260019190911c905b60011c6119e0565b505050919050565b60006112c38383612071565b6000680a688906bd8b0000008210611a5a57604051634a4f26f160e01b815260048101839052602401610623565b670de0b6b3a7640000604083901b046112c381612133565b6000831580611a7f575082155b15611a8c575060006112c3565b6001826001811115611aa057611aa0612cb4565b14611ab357670de0b6b3a7640000611ac0565b676765c793fa10079d601b1b5b6001836001811115611ad457611ad4612cb4565b14611af157611aec6002670de0b6b3a7640000612c19565b611b07565b611b076002676765c793fa10079d601b1b612c19565b611b118587612b0e565b611b1b9190612aa8565b6118419190612c19565b6000610e0a4261154b565b6000806000888861ffff1661ffff8110611b4c57611b4c612c48565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611ba75787859250925050611c6d565b8461ffff168461ffff16118015611bcf5750611bc4600186612c2d565b61ffff168861ffff16145b15611bdc57839150611be0565b8491505b81611bec896001612cca565b611bf69190612cf0565b9250611c0287876118e3565b898461ffff1661ffff8110611c1957611c19612c48565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b611c80612977565b611c88612977565b878461ffff1661ffff8110611c9f57611c9f612c48565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611d1e578663ffffffff16826000015163ffffffff161415611d0a57611c6d565b81611d1587876118e3565b91509150611c6d565b8783611d2b866001612cca565b611d359190612cf0565b61ffff1661ffff8110611d4a57611d4a612c48565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611dcf5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611e0f5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610623565b611e1b888886866127c5565b91509150965096945050505050565b600082611e625760405162461bcd60e51b8152600401610623906020808252600490820152630444956360e41b604082015260600190565b6000611e6f600285612c19565b905083816001856001811115611e8757611e87612cb4565b14611e9a57670de0b6b3a7640000611ea7565b676765c793fa10079d601b1b5b611eb19088612b0e565b611ebb9190612aa8565b6115f49190612c19565b600080806000198587098587029250828110838203039150508060001415611f0057838281611ef657611ef6612c03565b04925050506112c3565b838110611f2a57604051631dcf306360e21b81526004810182905260248101859052604401610623565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611fb357608091821c91611fb09082612aa8565b90505b600160401b8210611fd157604091821c91611fce9082612aa8565b90505b600160201b8210611fef57602091821c91611fec9082612aa8565b90505b62010000821061200c57601091821c916120099082612aa8565b90505b610100821061202857600891821c916120259082612aa8565b90505b6010821061204357600491821c916120409082612aa8565b90505b6004821061205e57600291821c9161205b9082612aa8565b90505b600282106110925761043f600182612aa8565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106120b55760405163698d9a0160e11b815260048101829052602401610623565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826120ef5780670de0b6b3a764000085040194505050505061043f565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156121535768016a09e667f3bcc9090260401c5b6001603e1b82161561216e576801306fe0a31b7152df0260401c5b6001603d1b821615612189576801172b83c7d517adce0260401c5b6001603c1b8216156121a45768010b5586cf9890f62a0260401c5b6001603b1b8216156121bf576801059b0d31585743ae0260401c5b6001603a1b8216156121da57680102c9a3e778060ee70260401c5b600160391b8216156121f55768010163da9fb33356d80260401c5b600160381b82161561221057680100b1afa5abcbed610260401c5b600160371b82161561222b5768010058c86da1c09ea20260401c5b600160361b821615612246576801002c605e2e8cec500260401c5b600160351b82161561226157680100162f3904051fa10260401c5b600160341b82161561227c576801000b175effdc76ba0260401c5b600160331b82161561229757680100058ba01fb9f96d0260401c5b600160321b8216156122b25768010002c5cc37da94920260401c5b600160311b8216156122cd576801000162e525ee05470260401c5b600160301b8216156122e85768010000b17255775c040260401c5b6001602f1b821615612303576801000058b91b5bc9ae0260401c5b6001602e1b82161561231e57680100002c5c89d5ec6d0260401c5b6001602d1b8216156123395768010000162e43f4f8310260401c5b6001602c1b82161561235457680100000b1721bcfc9a0260401c5b6001602b1b82161561236f5768010000058b90cf1e6e0260401c5b6001602a1b82161561238a576801000002c5c863b73f0260401c5b600160291b8216156123a557680100000162e430e5a20260401c5b600160281b8216156123c0576801000000b1721835510260401c5b600160271b8216156123db57680100000058b90c0b490260401c5b600160261b8216156123f65768010000002c5c8601cc0260401c5b600160251b821615612411576801000000162e42fff00260401c5b600160241b82161561242c5768010000000b17217fbb0260401c5b600160231b821615612447576801000000058b90bfce0260401c5b600160221b82161561246257680100000002c5c85fe30260401c5b600160211b82161561247d5768010000000162e42ff10260401c5b600160201b82161561249857680100000000b17217f80260401c5b63800000008216156124b35768010000000058b90bfc0260401c5b63400000008216156124ce576801000000002c5c85fe0260401c5b63200000008216156124e957680100000000162e42ff0260401c5b6310000000821615612504576801000000000b17217f0260401c5b630800000082161561251f57680100000000058b90c00260401c5b630400000082161561253a5768010000000002c5c8600260401c5b6302000000821615612555576801000000000162e4300260401c5b63010000008216156125705768010000000000b172180260401c5b6280000082161561258a576801000000000058b90c0260401c5b624000008216156125a457680100000000002c5c860260401c5b622000008216156125be5768010000000000162e430260401c5b621000008216156125d857680100000000000b17210260401c5b620800008216156125f25768010000000000058b910260401c5b6204000082161561260c576801000000000002c5c80260401c5b6202000082161561262657680100000000000162e40260401c5b6201000082161561263f5761b172600160401b010260401c5b618000821615612657576158b9600160401b010260401c5b61400082161561266f57612c5d600160401b010260401c5b6120008216156126875761162e600160401b010260401c5b61100082161561269f57610b17600160401b010260401c5b6108008216156126b75761058c600160401b010260401c5b6104008216156126cf576102c6600160401b010260401c5b6102008216156126e757610163600160401b010260401c5b6101008216156126fe5760b1600160401b010260401c5b6080821615612714576059600160401b010260401c5b604082161561272a57602c600160401b010260401c5b6020821615612740576016600160401b010260401c5b601082161561275657600b600160401b010260401c5b600882161561276c576006600160401b010260401c5b6004821615612782576003600160401b010260401c5b6002821615612798576001600160401b010260401c5b60018216156127ae576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6127cd612977565b6127d5612977565b6000836127e3866001612cca565b6127ed9190612cf0565b61ffff169050600060018561ffff16836128079190612aa8565b6128119190612b2d565b905060005b60016128228385612aa8565b901c90508861283561ffff881683612ca0565b61ffff811061284657612846612c48565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff161515918101829052955061289d57612896816001612aa8565b9250612816565b8861ffff87166128ae836001612aa8565b6128b89190612ca0565b61ffff81106128c9576128c9612c48565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906129355750846000015163ffffffff168963ffffffff1611155b15612940575061296b565b8061295757612950600183612b2d565b9250612965565b612962826001612aa8565b93505b50612816565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff8116811461109257600080fd5b600080604083850312156129be57600080fd5b6129c783612997565b91506129d560208401612997565b90509250929050565b6000602082840312156129f057600080fd5b5035919050565b60008060408385031215612a0a57600080fd5b50508035926020909101359150565b600060208284031215612a2b57600080fd5b813561ffff811681146112c357600080fd5b600080600060608486031215612a5257600080fd5b505081359360208301359350604090920135919050565b600060208284031215612a7b57600080fd5b81356001600160a01b03811681146112c357600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612abb57612abb612a92565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215612b0757600080fd5b5051919050565b6000816000190483118215151615612b2857612b28612a92565b500290565b600082821015612b3f57612b3f612a92565b500390565b80516001600160401b038116811461109257600080fd5b60008060008060808587031215612b7157600080fd5b612b7a85612b44565b9350612b8860208601612b44565b9250612b9660408601612b44565b9150612ba460608601612b44565b905092959194509250565b60006001600160401b0382811684821681151582840482111615612bd557612bd5612a92565b02949350505050565b600063ffffffff83811690831681811015612bfb57612bfb612a92565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600082612c2857612c28612c03565b500490565b600061ffff83811690831681811015612bfb57612bfb612a92565b634e487b7160e01b600052603260045260246000fd5b60006001600160d81b0383811690831681811015612bfb57612bfb612a92565b600061ffff80831681811415612c9657612c96612a92565b6001019392505050565b600082612caf57612caf612c03565b500690565b634e487b7160e01b600052602160045260246000fd5b600061ffff808316818516808303821115612ce757612ce7612a92565b01949350505050565b600061ffff80841680612d0557612d05612c03565b9216919091069291505056fea26469706673582212207ff5f3cc73ce706fd7c2f701e5635f0b875979ec7054e675d2d05dc5e2411d5064736f6c63430008090033";

export class LidoRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stEth: string,
    _lidoOracle: string,
    _weth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LidoRateOracle> {
    return super.deploy(
      _stEth,
      _lidoOracle,
      _weth,
      _times,
      _results,
      overrides || {}
    ) as Promise<LidoRateOracle>;
  }
  getDeployTransaction(
    _stEth: string,
    _lidoOracle: string,
    _weth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stEth,
      _lidoOracle,
      _weth,
      _times,
      _results,
      overrides || {}
    );
  }
  attach(address: string): LidoRateOracle {
    return super.attach(address) as LidoRateOracle;
  }
  connect(signer: Signer): LidoRateOracle__factory {
    return super.connect(signer) as LidoRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoRateOracleInterface {
    return new utils.Interface(_abi) as LidoRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoRateOracle {
    return new Contract(address, _abi, signerOrProvider) as LidoRateOracle;
  }
}

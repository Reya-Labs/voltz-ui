/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundRateOracle,
  CompoundRateOracleInterface,
} from "../CompoundRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "_ctoken",
        type: "address",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint32[]",
        name: "_times",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "_results",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ctoken",
    outputs: [
      {
        internalType: "contract ICToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620035a9380380620035a98339810160408190526200003591620009e8565b8362000041336200020c565b6001600160a01b0390811660805285811660a081905260408051636f307dc360e01b8152905192871692636f307dc391600480820192602092909190829003018186803b1580156200009257600080fd5b505afa158015620000a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cd919062000b0a565b6001600160a01b031614620001295760405162461bcd60e51b815260206004820152601360248201527f546f6b656e7320646f206e6f74206d617463680000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038416620001815760405162461bcd60e51b815260206004820152601560248201527f756e6465726c79696e67206d7573742065786973740000000000000000000000604482015260640162000120565b60ff831660c0819052601111156200019b576000620001b9565b601160c051620001ac919062000b47565b620001b990600a62000c6a565b60e05260c051601160ff90911610620001d4576000620001f1565b60c051620001e490601162000b47565b620001f190600a62000c6a565b610100526200020182826200025c565b505050505062000dcc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200026b600261ffff62000c7b565b8251106200028d5760405162461bcd60e51b8152600401620001209062000c9e565b8151815161ffff821614620002b65760405162461bcd60e51b8152600401620001209062000cbc565b6000620002c582600162000ce8565b61ffff166001600160401b03811115620002e357620002e362000906565b6040519080825280602002602001820160405280156200030d578160200160208202803683370190505b50905060006200031f83600162000ce8565b61ffff166001600160401b038111156200033d576200033d62000906565b60405190808252806020026020018201604052801562000367578160200160208202803683370190505b50905060005b8361ffff1681101562000418578581815181106200038f576200038f62000d11565b6020026020010151838281518110620003ac57620003ac62000d11565b602002602001019063ffffffff16908163ffffffff1681525050848181518110620003db57620003db62000d11565b6020026020010151828281518110620003f857620003f862000d11565b6020908102919091010152806200040f8162000d27565b9150506200036d565b506200042e620004ec60201b6200096d1760201c565b828461ffff168151811062000447576200044762000d11565b63ffffffff9092166020928302919091019091015262000466620004fe565b818461ffff16815181106200047f576200047f62000d11565b602002602001018181525050620004a882826004620005cf60201b6200097d179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff19909216959093169490941793909317919091161790555050505050565b6000620004f94262000814565b905090565b60008060a0516001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200053d57600080fd5b505afa15801562000552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000578919062000d45565b90508062000599576040516324988a7b60e01b815260040160405180910390fd5b601160ff1660c05160ff1610620005bf5760e051620005b9908262000c7b565b91505090565b61010051620005b9908262000d5f565b600080600061ffff855110620005f95760405162461bcd60e51b8152600401620001209062000c9e565b8451845161ffff821614620006225760405162461bcd60e51b8152600401620001209062000cbc565b60008161ffff16116200065d5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b604482015260640162000120565b6000805b8261ffff168161ffff161015620007f357878161ffff16815181106200068b576200068b62000d11565b602002602001015163ffffffff168263ffffffff1610620006e15760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b604482015260640162000120565b62000733888261ffff1681518110620006fe57620006fe62000d11565b6020026020010151888361ffff16815181106200071f576200071f62000d11565b60200260200101516200085b60201b60201c565b898261ffff1661ffff81106200074d576200074d62000d11565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff8316908110620007d357620007d362000d11565b602002602001015191508080620007ea9062000d81565b91505062000661565b5081806200080360018262000da6565b945094509450505093509350939050565b8063ffffffff81168114620008565760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b604482015260640162000120565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620008ba5760405162461bcd60e51b815260040162000120906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff841681526001600160d81b03831660208201526001918101919091525b92915050565b6001600160a01b03811681146200090357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000947576200094762000906565b604052919050565b60006001600160401b038211156200096b576200096b62000906565b5060051b60200190565b600082601f8301126200098757600080fd5b81516020620009a06200099a836200094f565b6200091c565b82815260059290921b84018101918181019086841115620009c057600080fd5b8286015b84811015620009dd5780518352918301918301620009c4565b509695505050505050565b600080600080600060a0868803121562000a0157600080fd5b855162000a0e81620008ed565b8095505060208087015162000a2381620008ed565b604088015190955060ff8116811462000a3b57600080fd5b60608801519094506001600160401b038082111562000a5957600080fd5b818901915089601f83011262000a6e57600080fd5b815162000a7f6200099a826200094f565b81815260059190911b8301840190848101908c83111562000a9f57600080fd5b938501935b8285101562000ad357845163ffffffff8116811462000ac35760008081fd5b8252938501939085019062000aa4565b60808c0151909750945050508083111562000aed57600080fd5b505062000afd8882890162000975565b9150509295509295909350565b60006020828403121562000b1d57600080fd5b815162000b2a81620008ed565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101562000b645762000b6462000b31565b90039392505050565b600181815b8085111562000bae57816000190482111562000b925762000b9262000b31565b8085161562000ba057918102915b93841c939080029062000b72565b509250929050565b60008262000bc757506001620008e7565b8162000bd657506000620008e7565b816001811462000bef576002811462000bfa5762000c1a565b6001915050620008e7565b60ff84111562000c0e5762000c0e62000b31565b50506001821b620008e7565b5060208310610133831016604e8410600b841016171562000c3f575081810a620008e7565b62000c4b838362000b6d565b806000190482111562000c625762000c6262000b31565b029392505050565b600062000b2a60ff84168362000bb6565b60008262000c9957634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000d085762000d0862000b31565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000d3e5762000d3e62000b31565b5060010190565b60006020828403121562000d5857600080fd5b5051919050565b600081600019048311821515161562000d7c5762000d7c62000b31565b500290565b600061ffff8083168181141562000d9c5762000d9c62000b31565b6001019392505050565b600061ffff8381169083168181101562000dc45762000dc462000b31565b039392505050565b60805160a05160c05160e0516101005161278a62000e1f60003960006107a1015260006107710152600081816101bb01526107450152600081816102fa01526106920152600061021d015261278a6000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c80631195082e1461010c57806322ff65681461014a578063252c09d71461016457806325f258dd146101a3578063313ce567146101b657806332148f67146101dd57806341453528146101f257806354124c64146102055780636f307dc314610218578063715018a6146102575780637aa4db131461025f5780637cf2cc9f146102675780638da5cb5b1461027057806393556dbd14610278578063bdb050921461028b578063c330c98d1461029e578063c7db359b146102ad578063ccf3eb9f146102f5578063efdf5d8b1461031c578063f2fde38b14610324578063f739670c14610337575b600080fd5b61013761011a3660046124a8565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610152600281565b60405160ff9091168152602001610141565b6101776101723660046124db565b61034a565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610141565b6101376101b13660046124f4565b610384565b6101527f000000000000000000000000000000000000000000000000000000000000000081565b6101f06101eb366004612516565b6103fb565b005b6101376102003660046124f4565b610480565b61013761021336600461253a565b610494565b61023f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610141565b6101f06104e9565b6101f061052d565b61013760025481565b61023f61057a565b6101376102863660046124f4565b610589565b6101f06102993660046124db565b610619565b610137670de0b6b3a764000081565b6003546102d09061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610141565b61023f7f000000000000000000000000000000000000000000000000000000000000000081565b61013761068d565b6101f0610332366004612566565b6107c6565b6101376103453660046124f4565b610863565b60048161ffff811061035b57600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806103918484610bc0565b909250905080156103f35760006103b1670de0b6b3a76400008604610cfe565b905060006103c8670de0b6b3a76400008604610cfe565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff16600061041760048385610d43565b6003805461ffff808416600160201b810261ffff60201b199093169290921790925591925083161461047b5760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600061048c8383610bc0565b509392505050565b6000806104a083610e38565b905060006104b6670de0b6b3a7640000866125a5565b905060006104c48284610e4f565b905060006104d182610e8e565b90506104dd8882610eb8565b98975050505050505050565b336104f261057a565b6001600160a01b0316146105215760405162461bcd60e51b8152600401610518906125bd565b60405180910390fd5b61052b6000610ec6565b565b6003546105529061ffff80821691620100008104821691600160201b90910416610f16565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156105ce5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b6044820152606401610518565b60006105da8484610863565b905060006105e885856125f2565b905060006105f582611048565b9050600061060282610e38565b905061060e8482611095565b979650505050505050565b3361062261057a565b6001600160a01b0316146106485760405162461bcd60e51b8152600401610518906125bd565b806002541461068a5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156106e957600080fd5b505afa1580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107219190612609565b905080610741576040516324988a7b60e01b815260040160405180910390fd5b60117f000000000000000000000000000000000000000000000000000000000000000060ff161061079c576107967f000000000000000000000000000000000000000000000000000000000000000082612638565b91505090565b6107967f00000000000000000000000000000000000000000000000000000000000000008261264c565b336107cf61057a565b6001600160a01b0316146107f55760405162461bcd60e51b8152600401610518906125bd565b6001600160a01b03811661085a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610518565b61068a81610ec6565b6000818311156108a15760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610518565b818314156108b1575060006103f5565b60006108bb61096d565b905060006108c885610cfe565b905060006108d585610cfe565b6003549091506000906108f9908590859061ffff80821691620100009004166110fa565b60035490915060009061091d908690859061ffff80821691620100009004166110fa565b90508181111561095f576000610951676765c793fa10079d601b1b6109428486611346565b61094c91906125f2565b611354565b96506103f595505050505050565b6000955050505050506103f5565b600061097842610cfe565b905090565b600080600061ffff8551106109bd5760405162461bcd60e51b8152600401610518906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610a085760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610518565b60008161ffff1611610a415760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610518565b6000805b8261ffff168161ffff161015610ba157878161ffff1681518110610a6b57610a6b61266b565b602002602001015163ffffffff168263ffffffff1610610abf5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610518565b610b03888261ffff1681518110610ad857610ad861266b565b6020026020010151888361ffff1681518110610af657610af661266b565b60200260200101516113e0565b898261ffff1661ffff8110610b1a57610b1a61266b565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610b8457610b8461266b565b602002602001015191508080610b9990612681565b915050610a45565b508180610baf6001826126a3565b945094509450505093509350939050565b60008080610bd7670de0b6b3a76400008604610cfe565b90506000610bee670de0b6b3a76400008604610cfe565b905060008263ffffffff16118015610c0c575060008163ffffffff16115b610c405760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610518565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610c965763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610cf5565b8063ffffffff16610ca561096d565b63ffffffff1610610cd157610cc68263ffffffff168263ffffffff16610863565b935060019250610cf5565b610cee8263ffffffff16610ce361096d565b63ffffffff16610863565b9350600092505b50509250929050565b8063ffffffff81168114610d3e5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610518565b919050565b6000808361ffff1611610d7c5760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610518565b61ffff8261ffff1610610dc05760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610518565b8261ffff168261ffff1611610dd6575081610e31565b825b8261ffff168161ffff161015610e2c576001858261ffff1661ffff8110610e0157610e0161266b565b01805463ffffffff191663ffffffff9290921691909117905580610e2481612681565b915050610dd8565b508190505b9392505050565b60006103f5826a1a1601fc4ea7109e000000611458565b600082610e74578115610e63576000610e6d565b670de0b6b3a76400005b90506103f5565b610e31610e89610e838561146d565b8461151d565b611529565b600080610eae670de0b6b3a7640000676765c793fa10079d601b1b612638565b610e31908461264c565b6000610e318383600161156f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110610f3357610f3361266b565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000610f7d61096d565b9050816000015163ffffffff166002548263ffffffff16610f9e91906125f2565b1015610fb1578686935093505050611040565b6000610fbb61068d565b90507f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375610fe6611622565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161103860048984848b8b61162d565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561108757604051633492ffd960e01b815260048101839052602401610518565b50670de0b6b3a76400000290565b6000826110a4575060006103f5565b60006110b96110b36001611048565b84611458565b905060006110db856110cb6001611048565b6110d591906125a5565b83610e4f565b90506110e76001611048565b6110f190826125f2565b95945050505050565b60008363ffffffff168563ffffffff16101561112957604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff1614156111d157611145612474565b60048461ffff1661ffff811061115d5761115d61266b565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146111ba576111b361068d565b91506111cb565b80602001516001600160d81b031691505b5061133e565b60006111db61068d565b90506000806111ef6004888a868a8a611775565b91509150816000015163ffffffff168763ffffffff1614156112205781602001516001600160d81b0316935061133a565b805163ffffffff888116911614156112475780602001516001600160d81b0316935061133a565b600082602001516001600160d81b031682602001516001600160d81b031611156112b6576000676765c793fa10079d601b1b61129d84602001516001600160d81b031686602001516001600160d81b0316611346565b6112a791906125f2565b90506112b281611354565b9150505b825182516000916112e991670de0b6b3a7640000916112d4916126c6565b63ffffffff166112e4919061264c565b610e38565b905060006112f78383611095565b905061133485602001516001600160d81b031682670de0b6b3a764000088600001518e61132491906126c6565b63ffffffff16610213919061264c565b96505050505b5050505b949350505050565b6000610e3183836001611927565b600080611374670de0b6b3a7640000676765c793fa10079d601b1b612638565b61137e9084612638565b9050600261139f670de0b6b3a7640000676765c793fa10079d601b1b612638565b6113a99190612638565b6113c6670de0b6b3a7640000676765c793fa10079d601b1b612638565b6113d090856126e3565b106103f557610e316001826125a5565b6113e8612474565b6001600160d81b038211156114285760405162461bcd60e51b8152600401610518906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6000610e3183670de0b6b3a7640000846119c2565b6000670de0b6b3a764000082101561149b57604051633621413760e21b815260048101839052602401610518565b60006114b0670de0b6b3a76400008404611a90565b670de0b6b3a7640000808202935090915083821c908114156114d3575050919050565b6706f05b59d3b200005b801561151557670de0b6b3a7640000828002049150671bc16d674ec80000821061150d579283019260019190911c905b60011c6114dd565b505050919050565b6000610e318383611b6e565b6000680a688906bd8b000000821061155757604051634a4f26f160e01b815260048101839052602401610518565b670de0b6b3a7640000604083901b04610e3181611c30565b600083158061157c575082155b1561158957506000610e31565b600182600181111561159d5761159d6126f7565b146115b057670de0b6b3a76400006115bd565b676765c793fa10079d601b1b5b60018360018111156115d1576115d16126f7565b146115ee576115e96002670de0b6b3a7640000612638565b611604565b6116046002676765c793fa10079d601b1b612638565b61160e858761264c565b61161891906125a5565b61133e9190612638565b600061097842611048565b6000806000888861ffff1661ffff81106116495761164961266b565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881614156116a4578785925092505061176a565b8461ffff168461ffff161180156116cc57506116c16001866126a3565b61ffff168861ffff16145b156116d9578391506116dd565b8491505b816116e989600161270d565b6116f39190612733565b92506116ff87876113e0565b898461ffff1661ffff81106117165761171661266b565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b61177d612474565b611785612474565b878461ffff1661ffff811061179c5761179c61266b565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509088161061181b578663ffffffff16826000015163ffffffff1614156118075761176a565b8161181287876113e0565b9150915061176a565b878361182886600161270d565b6118329190612733565b61ffff1661ffff81106118475761184761266b565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506118cc5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff8089169116111561190c5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610518565b611918888886866122c2565b91509150965096945050505050565b60008261195f5760405162461bcd60e51b8152600401610518906020808252600490820152630444956360e41b604082015260600190565b600061196c600285612638565b905083816001856001811115611984576119846126f7565b1461199757670de0b6b3a76400006119a4565b676765c793fa10079d601b1b5b6119ae908861264c565b6119b891906125a5565b6110f19190612638565b6000808060001985870985870292508281108382030391505080600014156119fd578382816119f3576119f3612622565b0492505050610e31565b838110611a2757604051631dcf306360e21b81526004810182905260248101859052604401610518565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611ab057608091821c91611aad90826125a5565b90505b600160401b8210611ace57604091821c91611acb90826125a5565b90505b600160201b8210611aec57602091821c91611ae990826125a5565b90505b620100008210611b0957601091821c91611b0690826125a5565b90505b6101008210611b2557600891821c91611b2290826125a5565b90505b60108210611b4057600491821c91611b3d90826125a5565b90505b60048210611b5b57600291821c91611b5890826125a5565b90505b60028210610d3e576103f56001826125a5565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611bb25760405163698d9a0160e11b815260048101829052602401610518565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611bec5780670de0b6b3a76400008504019450505050506103f5565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611c505768016a09e667f3bcc9090260401c5b6001603e1b821615611c6b576801306fe0a31b7152df0260401c5b6001603d1b821615611c86576801172b83c7d517adce0260401c5b6001603c1b821615611ca15768010b5586cf9890f62a0260401c5b6001603b1b821615611cbc576801059b0d31585743ae0260401c5b6001603a1b821615611cd757680102c9a3e778060ee70260401c5b600160391b821615611cf25768010163da9fb33356d80260401c5b600160381b821615611d0d57680100b1afa5abcbed610260401c5b600160371b821615611d285768010058c86da1c09ea20260401c5b600160361b821615611d43576801002c605e2e8cec500260401c5b600160351b821615611d5e57680100162f3904051fa10260401c5b600160341b821615611d79576801000b175effdc76ba0260401c5b600160331b821615611d9457680100058ba01fb9f96d0260401c5b600160321b821615611daf5768010002c5cc37da94920260401c5b600160311b821615611dca576801000162e525ee05470260401c5b600160301b821615611de55768010000b17255775c040260401c5b6001602f1b821615611e00576801000058b91b5bc9ae0260401c5b6001602e1b821615611e1b57680100002c5c89d5ec6d0260401c5b6001602d1b821615611e365768010000162e43f4f8310260401c5b6001602c1b821615611e5157680100000b1721bcfc9a0260401c5b6001602b1b821615611e6c5768010000058b90cf1e6e0260401c5b6001602a1b821615611e87576801000002c5c863b73f0260401c5b600160291b821615611ea257680100000162e430e5a20260401c5b600160281b821615611ebd576801000000b1721835510260401c5b600160271b821615611ed857680100000058b90c0b490260401c5b600160261b821615611ef35768010000002c5c8601cc0260401c5b600160251b821615611f0e576801000000162e42fff00260401c5b600160241b821615611f295768010000000b17217fbb0260401c5b600160231b821615611f44576801000000058b90bfce0260401c5b600160221b821615611f5f57680100000002c5c85fe30260401c5b600160211b821615611f7a5768010000000162e42ff10260401c5b600160201b821615611f9557680100000000b17217f80260401c5b6380000000821615611fb05768010000000058b90bfc0260401c5b6340000000821615611fcb576801000000002c5c85fe0260401c5b6320000000821615611fe657680100000000162e42ff0260401c5b6310000000821615612001576801000000000b17217f0260401c5b630800000082161561201c57680100000000058b90c00260401c5b63040000008216156120375768010000000002c5c8600260401c5b6302000000821615612052576801000000000162e4300260401c5b630100000082161561206d5768010000000000b172180260401c5b62800000821615612087576801000000000058b90c0260401c5b624000008216156120a157680100000000002c5c860260401c5b622000008216156120bb5768010000000000162e430260401c5b621000008216156120d557680100000000000b17210260401c5b620800008216156120ef5768010000000000058b910260401c5b62040000821615612109576801000000000002c5c80260401c5b6202000082161561212357680100000000000162e40260401c5b6201000082161561213c5761b172600160401b010260401c5b618000821615612154576158b9600160401b010260401c5b61400082161561216c57612c5d600160401b010260401c5b6120008216156121845761162e600160401b010260401c5b61100082161561219c57610b17600160401b010260401c5b6108008216156121b45761058c600160401b010260401c5b6104008216156121cc576102c6600160401b010260401c5b6102008216156121e457610163600160401b010260401c5b6101008216156121fb5760b1600160401b010260401c5b6080821615612211576059600160401b010260401c5b604082161561222757602c600160401b010260401c5b602082161561223d576016600160401b010260401c5b601082161561225357600b600160401b010260401c5b6008821615612269576006600160401b010260401c5b600482161561227f576003600160401b010260401c5b6002821615612295576001600160401b010260401c5b60018216156122ab576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6122ca612474565b6122d2612474565b6000836122e086600161270d565b6122ea9190612733565b61ffff169050600060018561ffff168361230491906125a5565b61230e91906125f2565b905060005b600161231f83856125a5565b901c90508861233261ffff8816836126e3565b61ffff81106123435761234361266b565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff161515918101829052955061239a576123938160016125a5565b9250612313565b8861ffff87166123ab8360016125a5565b6123b591906126e3565b61ffff81106123c6576123c661266b565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906124325750846000015163ffffffff168963ffffffff1611155b1561243d5750612468565b806124545761244d6001836125f2565b9250612462565b61245f8260016125a5565b93505b50612313565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610d3e57600080fd5b600080604083850312156124bb57600080fd5b6124c483612494565b91506124d260208401612494565b90509250929050565b6000602082840312156124ed57600080fd5b5035919050565b6000806040838503121561250757600080fd5b50508035926020909101359150565b60006020828403121561252857600080fd5b813561ffff81168114610e3157600080fd5b60008060006060848603121561254f57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561257857600080fd5b81356001600160a01b0381168114610e3157600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156125b8576125b861258f565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000828210156126045761260461258f565b500390565b60006020828403121561261b57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261264757612647612622565b500490565b60008160001904831182151516156126665761266661258f565b500290565b634e487b7160e01b600052603260045260246000fd5b600061ffff808316818114156126995761269961258f565b6001019392505050565b600061ffff838116908316818110156126be576126be61258f565b039392505050565b600063ffffffff838116908316818110156126be576126be61258f565b6000826126f2576126f2612622565b500690565b634e487b7160e01b600052602160045260246000fd5b600061ffff80831681851680830382111561272a5761272a61258f565b01949350505050565b600061ffff8084168061274857612748612622565b9216919091069291505056fea26469706673582212203b89f34555e2c3fd845c28a08a22e46a98693f9330c2bc601acba128a30b861264736f6c63430008090033";

export class CompoundRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ctoken: string,
    underlying: string,
    _decimals: BigNumberish,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundRateOracle> {
    return super.deploy(
      _ctoken,
      underlying,
      _decimals,
      _times,
      _results,
      overrides || {}
    ) as Promise<CompoundRateOracle>;
  }
  getDeployTransaction(
    _ctoken: string,
    underlying: string,
    _decimals: BigNumberish,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ctoken,
      underlying,
      _decimals,
      _times,
      _results,
      overrides || {}
    );
  }
  attach(address: string): CompoundRateOracle {
    return super.attach(address) as CompoundRateOracle;
  }
  connect(signer: Signer): CompoundRateOracle__factory {
    return super.connect(signer) as CompoundRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundRateOracleInterface {
    return new utils.Interface(_abi) as CompoundRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundRateOracle {
    return new Contract(address, _abi, signerOrProvider) as CompoundRateOracle;
  }
}

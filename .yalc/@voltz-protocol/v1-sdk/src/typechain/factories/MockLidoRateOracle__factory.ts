/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockLidoRateOracle,
  MockLidoRateOracleInterface,
} from "../MockLidoRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStETH",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "contract ILidoOracle",
        name: "_lidoOracle",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "_times",
        type: "uint32[]",
      },
      {
        internalType: "uint256[]",
        name: "_results",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lidoOracle",
    outputs: [
      {
        internalType: "contract ILidoOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshBeaconSpec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "contract IStETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003ba438038062003ba4833981016040819052620000349162000b11565b82620000403362000197565b6001600160a01b03811660805243620100045562000069620001e7602090811b62000de917901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b038516620000ea5760405162461bcd60e51b815260206004820152601060248201526f1cdd115512081b5d5cdd08195e1a5cdd60821b60448201526064015b60405180910390fd5b6001600160a01b038416620001425760405162461bcd60e51b815260206004820152601560248201527f6c69646f4f7261636c65206d75737420657869737400000000000000000000006044820152606401620000e1565b6201000780546001600160a01b038088166001600160a01b0319928316179092556201000880549287169290911691909117905562000180620001f9565b6200018c8282620002ec565b505050505062000e57565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001f44262000577565b905090565b60008060006201000860009054906101000a90046001600160a01b03166001600160a01b031663e547c77c6040518163ffffffff1660e01b815260040160806040518083038186803b1580156200024f57600080fd5b505afa15801562000264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028a919062000c46565b620100088054600160a01b600160e01b031916600160a01b6001600160401b0384160217905591955093509150620002c59050828462000cb9565b6201000980546001600160401b0319166001600160401b0392909216919091179055505050565b620002fb600261ffff62000ceb565b8251106200031d5760405162461bcd60e51b8152600401620000e19062000d0e565b8151815161ffff821614620003465760405162461bcd60e51b8152600401620000e19062000d2c565b60006200035582600162000d58565b61ffff166001600160401b0381111562000373576200037362000a2f565b6040519080825280602002602001820160405280156200039d578160200160208202803683370190505b5090506000620003af83600162000d58565b61ffff166001600160401b03811115620003cd57620003cd62000a2f565b604051908082528060200260200182016040528015620003f7578160200160208202803683370190505b50905060005b8361ffff16811015620004a8578581815181106200041f576200041f62000d81565b60200260200101518382815181106200043c576200043c62000d81565b602002602001019063ffffffff16908163ffffffff16815250508481815181106200046b576200046b62000d81565b602002602001015182828151811062000488576200048862000d81565b6020908102919091010152806200049f8162000d97565b915050620003fd565b50600080620004b6620005be565b9150915081848661ffff1681518110620004d457620004d462000d81565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff168151811062000508576200050862000d81565b60200260200101818152505062000531848460046200074260201b62000df9179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620005b95760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000e1565b919050565b6201000754604051630f451f7160e31b81526b033b2e3c9fd0803ce80000006004820152600091829182916001600160a01b031690637a28fb889060240160206040518083038186803b1580156200061557600080fd5b505afa1580156200062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000650919062000db5565b905060006201000860009054906101000a90046001600160a01b03166001600160a01b03166389896aef6040518163ffffffff1660e01b815260040160206040518083038186803b158015620006a557600080fd5b505afa158015620006ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e0919062000db5565b6201000954909150600090620007379062000705906001600160401b03168462000dcf565b6201000854620007269190600160a01b90046001600160401b031662000df1565b6200057760201b6200103c1760201c565b959294509192505050565b600080600061ffff8551106200076c5760405162461bcd60e51b8152600401620000e19062000d0e565b8451845161ffff821614620007955760405162461bcd60e51b8152600401620000e19062000d2c565b60008161ffff1611620007d05760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000e1565b6000805b8261ffff168161ffff1610156200096657878161ffff1681518110620007fe57620007fe62000d81565b602002602001015163ffffffff168263ffffffff1610620008545760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000e1565b620008a6888261ffff168151811062000871576200087162000d81565b6020026020010151888361ffff168151811062000892576200089262000d81565b60200260200101516200098760201b60201c565b898261ffff1661ffff8110620008c057620008c062000d81565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff831690811062000946576200094662000d81565b6020026020010151915080806200095d9062000e0c565b915050620007d4565b5081806200097660018262000e31565b945094509450505093509350939050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620009e65760405162461bcd60e51b8152600401620000e1906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b038116811462000a2c57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000a705762000a7062000a2f565b604052919050565b60006001600160401b0382111562000a945762000a9462000a2f565b5060051b60200190565b600082601f83011262000ab057600080fd5b8151602062000ac962000ac38362000a78565b62000a45565b82815260059290921b8401810191818101908684111562000ae957600080fd5b8286015b8481101562000b06578051835291830191830162000aed565b509695505050505050565b600080600080600060a0868803121562000b2a57600080fd5b855162000b378162000a16565b8095505060208087015162000b4c8162000a16565b604088015190955062000b5f8162000a16565b60608801519094506001600160401b038082111562000b7d57600080fd5b818901915089601f83011262000b9257600080fd5b815162000ba362000ac38262000a78565b81815260059190911b8301840190848101908c83111562000bc357600080fd5b938501935b8285101562000bf757845163ffffffff8116811462000be75760008081fd5b8252938501939085019062000bc8565b60808c0151909750945050508083111562000c1157600080fd5b505062000c218882890162000a9e565b9150509295509295909350565b80516001600160401b0381168114620005b957600080fd5b6000806000806080858703121562000c5d57600080fd5b62000c688562000c2e565b935062000c786020860162000c2e565b925062000c886040860162000c2e565b915062000c986060860162000c2e565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038281168482168115158284048211161562000ce25762000ce262000ca3565b02949350505050565b60008262000d0957634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000d785762000d7862000ca3565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000dae5762000dae62000ca3565b5060010190565b60006020828403121562000dc857600080fd5b5051919050565b600081600019048311821515161562000dec5762000dec62000ca3565b500290565b6000821982111562000e075762000e0762000ca3565b500190565b600061ffff8083168181141562000e275762000e2762000ca3565b6001019392505050565b600061ffff8381169083168181101562000e4f5762000e4f62000ca3565b039392505050565b608051612d3162000e7360003960006102d50152612d316000f3fe608060405234801561001057600080fd5b506004361061015f5760003560e01c80631195082e14610164578063163e9c4f146101a257806317221ef1146101b557806322ff6568146101c857806324b18b17146101e2578063252c09d71461021657806325f258dd1461025557806332148f6714610268578063357d7b5c1461027d57806341453528146102aa57806354124c64146102bd5780636f307dc3146102d0578063715018a6146102f75780637aa4db13146102ff5780637cf2cc9f146103075780638a6b8c5d146103105780638da5cb5b1461031857806391aa375d1461032057806393556dbd1461034b57806399940ece1461035e578063bdb0509214610373578063c330c98d14610386578063c7db359b14610395578063ddc7a5aa146103dd578063efdf5d8b146103e5578063f2fde38b146103ed578063f739670c14610400578063f90ce5ba14610413578063fe115fbe1461042b575b600080fd5b61018f610172366004612995565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61018f6101b03660046129c8565b610433565b61018f6101c33660046129c8565b610445565b6101d0600381565b60405160ff9091168152602001610199565b620100055462010006546101fa9163ffffffff169082565b6040805163ffffffff9093168352602083019190915201610199565b6102296102243660046129c8565b610451565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610199565b61018f6102633660046129e1565b61048b565b61027b610276366004612a03565b610506565b005b6201000854610292906001600160a01b031681565b6040516001600160a01b039091168152602001610199565b61018f6102b83660046129e1565b61058b565b61018f6102cb366004612a27565b61059f565b6102927f000000000000000000000000000000000000000000000000000000000000000081565b61027b6105f4565b61027b610638565b61018f60025481565b6101fa610685565b6102926107ea565b6201000654620100055463ffffffff165b6040805192835263ffffffff909116602083015201610199565b61018f6103593660046129e1565b6107f9565b6201000754610292906001600160a01b031681565b61027b6103813660046129c8565b610889565b61018f670de0b6b3a764000081565b6003546103b89061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610199565b61027b6108fd565b61018f6109ea565b61027b6103fb366004612a53565b610a72565b61018f61040e3660046129e1565b610b0f565b620100035462010004546101fa9163ffffffff169082565b610331610c19565b600061043f8242610b0f565b92915050565b600061043f82426107f9565b60048161ffff811061046257600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104988484611081565b909250905080156104ff5760006104bd670de0b6b3a7640000860461103c565b61103c565b905060006104d4670de0b6b3a7640000860461103c565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff166000610522600483856111bf565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146105865760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b60006105978383611081565b509392505050565b6000806105ab836112b4565b905060006105c1670de0b6b3a764000086612a92565b905060006105cf82846112cb565b905060006105dc8261130a565b90506105e88882611334565b98975050505050505050565b336105fd6107ea565b6001600160a01b03161461062c5760405162461bcd60e51b815260040161062390612aaa565b60405180910390fd5b6106366000611342565b565b60035461065d9061ffff80821691620100008104821691600160201b90910416611392565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6201000754604051630f451f7160e31b8152676765c793fa10079d601b1b6004820152600091829182916001600160a01b031690637a28fb889060240160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190612adf565b905060006201000860009054906101000a90046001600160a01b03166001600160a01b03166389896aef6040518163ffffffff1660e01b815260040160206040518083038186803b15801561076657600080fd5b505afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190612adf565b62010009549091506000906107df906107c0906001600160401b031684612af8565b62010008546104b89190600160a01b90046001600160401b0316612a92565b959294509192505050565b6000546001600160a01b031690565b60008183111561083e5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b6044820152606401610623565b600061084a8484610b0f565b905060006108588585612b17565b9050600061086582611535565b90506000610872826112b4565b905061087e8482611582565b979650505050505050565b336108926107ea565b6001600160a01b0316146108b85760405162461bcd60e51b815260040161062390612aaa565b80600254146108fa5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006201000860009054906101000a90046001600160a01b03166001600160a01b031663e547c77c6040518163ffffffff1660e01b815260040160806040518083038186803b15801561095257600080fd5b505afa158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190612b45565b620100088054600160a01b600160e01b031916600160a01b6001600160401b03841602179055919550935091506109c390508284612b99565b6201000980546001600160401b0319166001600160401b0392909216919091179055505050565b60008060006109f7610685565b91509150610a03610de9565b63ffffffff168263ffffffff1610610a1b5792915050565b600080610a26610c19565b915091508063ffffffff168285610a3b610de9565b610a459190612bc8565b63ffffffff16610a559190612af8565b610a5f9190612c03565b610a699084612a92565b94505050505090565b33610a7b6107ea565b6001600160a01b031614610aa15760405162461bcd60e51b815260040161062390612aaa565b6001600160a01b038116610b065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610623565b6108fa81611342565b600081831115610b4d5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b6044820152606401610623565b81831415610b5d5750600061043f565b6000610b67610de9565b90506000610b748561103c565b90506000610b818561103c565b600354909150600090610ba5908590859061ffff80821691620100009004166115e7565b600354909150600090610bc9908690859061ffff80821691620100009004166115e7565b905081811115610c0b576000610bfd676765c793fa10079d601b1b610bee8486611833565b610bf89190612b17565b611841565b965061043f95505050505050565b60009550505050505061043f565b600354600090819061ffff16816001821015610c4d57600354610c489060019062010000900461ffff16612c17565b610c60565b600354610c609060019061ffff16612c17565b60035490915060026201000090910461ffff1610801590610ca1575060048161ffff1661ffff8110610c9457610c94612c32565b0154600160f81b900460ff165b8015610cfe575060048261ffff1661ffff8110610cc057610cc0612c32565b0154600160201b90046001600160d81b0316600461ffff838116908110610ce957610ce9612c32565b0154600160201b90046001600160d81b031611155b610d305760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b6044820152606401610623565b60048161ffff1661ffff8110610d4857610d48612c32565b0154600160201b90046001600160d81b0316600461ffff848116908110610d7157610d71612c32565b0154610d8d9190600160201b90046001600160d81b0316612c48565b6001600160d81b0316935060048161ffff1661ffff8110610db057610db0612c32565b015463ffffffff16600461ffff808516908110610dcf57610dcf612c32565b0154610de1919063ffffffff16612bc8565b925050509091565b6000610df44261103c565b905090565b600080600061ffff855110610e395760405162461bcd60e51b8152600401610623906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610e845760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b6044820152606401610623565b60008161ffff1611610ebd5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401610623565b6000805b8261ffff168161ffff16101561101d57878161ffff1681518110610ee757610ee7612c32565b602002602001015163ffffffff168263ffffffff1610610f3b5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401610623565b610f7f888261ffff1681518110610f5457610f54612c32565b6020026020010151888361ffff1681518110610f7257610f72612c32565b60200260200101516118cd565b898261ffff1661ffff8110610f9657610f96612c32565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff831690811061100057611000612c32565b60200260200101519150808061101590612c68565b915050610ec1565b50818061102b600182612c17565b945094509450505093509350939050565b8063ffffffff8116811461107c5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401610623565b919050565b60008080611098670de0b6b3a7640000860461103c565b905060006110af670de0b6b3a7640000860461103c565b905060008263ffffffff161180156110cd575060008163ffffffff16115b6111015760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b6044820152606401610623565b63ffffffff808316600090815260016020908152604080832093851683529290522054156111575763ffffffff8083166000908152600160209081526040808320938516835292905290812054945092506111b6565b8063ffffffff16611166610de9565b63ffffffff1610611192576111878263ffffffff168263ffffffff16610b0f565b9350600192506111b6565b6111af8263ffffffff166111a4610de9565b63ffffffff16610b0f565b9350600092505b50509250929050565b6000808361ffff16116111f85760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610623565b61ffff8261ffff161061123c5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b6044820152606401610623565b8261ffff168261ffff16116112525750816112ad565b825b8261ffff168161ffff1610156112a8576001858261ffff1661ffff811061127d5761127d612c32565b01805463ffffffff191663ffffffff92909216919091179055806112a081612c68565b915050611254565b508190505b9392505050565b600061043f826a1a1601fc4ea7109e000000611945565b6000826112f05781156112df5760006112e9565b670de0b6b3a76400005b905061043f565b6112ad6113056112ff8561195a565b84611a0a565b611a16565b60008061132a670de0b6b3a7640000676765c793fa10079d601b1b612c03565b6112ad9084612af8565b60006112ad83836001611a5c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106113af576113af612c32565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000806113fa610685565b60025485519294509092506114149163ffffffff16612a92565b8263ffffffff16101561142f5787879450945050505061152d565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611458611b0f565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546114aa9043612b17565b6201000655620100035463ffffffff166114c2610de9565b6114cc9190612bc8565b62010005805463ffffffff191663ffffffff929092169190911790554362010004556114f6610de9565b62010003805463ffffffff191663ffffffff928316179055611525906004908a90859085908c908c90611b1a16565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561157457604051633492ffd960e01b815260048101839052602401610623565b50670de0b6b3a76400000290565b6000826115915750600061043f565b60006115a66115a06001611535565b84611945565b905060006115c8856115b86001611535565b6115c29190612a92565b836112cb565b90506115d46001611535565b6115de9082612b17565b95945050505050565b60008363ffffffff168563ffffffff16101561161657604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff1614156116be57611632612961565b60048461ffff1661ffff811061164a5761164a612c32565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146116a7576116a06109ea565b91506116b8565b80602001516001600160d81b031691505b5061182b565b60006116c86109ea565b90506000806116dc6004888a868a8a611c62565b91509150816000015163ffffffff168763ffffffff16141561170d5781602001516001600160d81b03169350611827565b805163ffffffff888116911614156117345780602001516001600160d81b03169350611827565b600082602001516001600160d81b031682602001516001600160d81b031611156117a3576000676765c793fa10079d601b1b61178a84602001516001600160d81b031686602001516001600160d81b0316611833565b6117949190612b17565b905061179f81611841565b9150505b825182516000916117d691670de0b6b3a7640000916117c191612bc8565b63ffffffff166117d19190612af8565b6112b4565b905060006117e48383611582565b905061182185602001516001600160d81b031682670de0b6b3a764000088600001518e6118119190612bc8565b63ffffffff166102cb9190612af8565b96505050505b5050505b949350505050565b60006112ad83836001611e14565b600080611861670de0b6b3a7640000676765c793fa10079d601b1b612c03565b61186b9084612c03565b9050600261188c670de0b6b3a7640000676765c793fa10079d601b1b612c03565b6118969190612c03565b6118b3670de0b6b3a7640000676765c793fa10079d601b1b612c03565b6118bd9085612c8a565b1061043f576112ad600182612a92565b6118d5612961565b6001600160d81b038211156119155760405162461bcd60e51b8152600401610623906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b60006112ad83670de0b6b3a764000084611eaf565b6000670de0b6b3a764000082101561198857604051633621413760e21b815260048101839052602401610623565b600061199d670de0b6b3a76400008404611f7d565b670de0b6b3a7640000808202935090915083821c908114156119c0575050919050565b6706f05b59d3b200005b8015611a0257670de0b6b3a7640000828002049150671bc16d674ec8000082106119fa579283019260019190911c905b60011c6119ca565b505050919050565b60006112ad838361205b565b6000680a688906bd8b0000008210611a4457604051634a4f26f160e01b815260048101839052602401610623565b670de0b6b3a7640000604083901b046112ad8161211d565b6000831580611a69575082155b15611a76575060006112ad565b6001826001811115611a8a57611a8a612c9e565b14611a9d57670de0b6b3a7640000611aaa565b676765c793fa10079d601b1b5b6001836001811115611abe57611abe612c9e565b14611adb57611ad66002670de0b6b3a7640000612c03565b611af1565b611af16002676765c793fa10079d601b1b612c03565b611afb8587612af8565b611b059190612a92565b61182b9190612c03565b6000610df442611535565b6000806000888861ffff1661ffff8110611b3657611b36612c32565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611b915787859250925050611c57565b8461ffff168461ffff16118015611bb95750611bae600186612c17565b61ffff168861ffff16145b15611bc657839150611bca565b8491505b81611bd6896001612cb4565b611be09190612cda565b9250611bec87876118cd565b898461ffff1661ffff8110611c0357611c03612c32565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b611c6a612961565b611c72612961565b878461ffff1661ffff8110611c8957611c89612c32565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611d08578663ffffffff16826000015163ffffffff161415611cf457611c57565b81611cff87876118cd565b91509150611c57565b8783611d15866001612cb4565b611d1f9190612cda565b61ffff1661ffff8110611d3457611d34612c32565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611db95760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611df95760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b6044820152606401610623565b611e05888886866127af565b91509150965096945050505050565b600082611e4c5760405162461bcd60e51b8152600401610623906020808252600490820152630444956360e41b604082015260600190565b6000611e59600285612c03565b905083816001856001811115611e7157611e71612c9e565b14611e8457670de0b6b3a7640000611e91565b676765c793fa10079d601b1b5b611e9b9088612af8565b611ea59190612a92565b6115de9190612c03565b600080806000198587098587029250828110838203039150508060001415611eea57838281611ee057611ee0612bed565b04925050506112ad565b838110611f1457604051631dcf306360e21b81526004810182905260248101859052604401610623565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611f9d57608091821c91611f9a9082612a92565b90505b600160401b8210611fbb57604091821c91611fb89082612a92565b90505b600160201b8210611fd957602091821c91611fd69082612a92565b90505b620100008210611ff657601091821c91611ff39082612a92565b90505b610100821061201257600891821c9161200f9082612a92565b90505b6010821061202d57600491821c9161202a9082612a92565b90505b6004821061204857600291821c916120459082612a92565b90505b6002821061107c5761043f600182612a92565b60008080600019848609848602925082811083820303915050670de0b6b3a7640000811061209f5760405163698d9a0160e11b815260048101829052602401610623565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826120d95780670de0b6b3a764000085040194505050505061043f565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b82161561213d5768016a09e667f3bcc9090260401c5b6001603e1b821615612158576801306fe0a31b7152df0260401c5b6001603d1b821615612173576801172b83c7d517adce0260401c5b6001603c1b82161561218e5768010b5586cf9890f62a0260401c5b6001603b1b8216156121a9576801059b0d31585743ae0260401c5b6001603a1b8216156121c457680102c9a3e778060ee70260401c5b600160391b8216156121df5768010163da9fb33356d80260401c5b600160381b8216156121fa57680100b1afa5abcbed610260401c5b600160371b8216156122155768010058c86da1c09ea20260401c5b600160361b821615612230576801002c605e2e8cec500260401c5b600160351b82161561224b57680100162f3904051fa10260401c5b600160341b821615612266576801000b175effdc76ba0260401c5b600160331b82161561228157680100058ba01fb9f96d0260401c5b600160321b82161561229c5768010002c5cc37da94920260401c5b600160311b8216156122b7576801000162e525ee05470260401c5b600160301b8216156122d25768010000b17255775c040260401c5b6001602f1b8216156122ed576801000058b91b5bc9ae0260401c5b6001602e1b82161561230857680100002c5c89d5ec6d0260401c5b6001602d1b8216156123235768010000162e43f4f8310260401c5b6001602c1b82161561233e57680100000b1721bcfc9a0260401c5b6001602b1b8216156123595768010000058b90cf1e6e0260401c5b6001602a1b821615612374576801000002c5c863b73f0260401c5b600160291b82161561238f57680100000162e430e5a20260401c5b600160281b8216156123aa576801000000b1721835510260401c5b600160271b8216156123c557680100000058b90c0b490260401c5b600160261b8216156123e05768010000002c5c8601cc0260401c5b600160251b8216156123fb576801000000162e42fff00260401c5b600160241b8216156124165768010000000b17217fbb0260401c5b600160231b821615612431576801000000058b90bfce0260401c5b600160221b82161561244c57680100000002c5c85fe30260401c5b600160211b8216156124675768010000000162e42ff10260401c5b600160201b82161561248257680100000000b17217f80260401c5b638000000082161561249d5768010000000058b90bfc0260401c5b63400000008216156124b8576801000000002c5c85fe0260401c5b63200000008216156124d357680100000000162e42ff0260401c5b63100000008216156124ee576801000000000b17217f0260401c5b630800000082161561250957680100000000058b90c00260401c5b63040000008216156125245768010000000002c5c8600260401c5b630200000082161561253f576801000000000162e4300260401c5b630100000082161561255a5768010000000000b172180260401c5b62800000821615612574576801000000000058b90c0260401c5b6240000082161561258e57680100000000002c5c860260401c5b622000008216156125a85768010000000000162e430260401c5b621000008216156125c257680100000000000b17210260401c5b620800008216156125dc5768010000000000058b910260401c5b620400008216156125f6576801000000000002c5c80260401c5b6202000082161561261057680100000000000162e40260401c5b620100008216156126295761b172600160401b010260401c5b618000821615612641576158b9600160401b010260401c5b61400082161561265957612c5d600160401b010260401c5b6120008216156126715761162e600160401b010260401c5b61100082161561268957610b17600160401b010260401c5b6108008216156126a15761058c600160401b010260401c5b6104008216156126b9576102c6600160401b010260401c5b6102008216156126d157610163600160401b010260401c5b6101008216156126e85760b1600160401b010260401c5b60808216156126fe576059600160401b010260401c5b604082161561271457602c600160401b010260401c5b602082161561272a576016600160401b010260401c5b601082161561274057600b600160401b010260401c5b6008821615612756576006600160401b010260401c5b600482161561276c576003600160401b010260401c5b6002821615612782576001600160401b010260401c5b6001821615612798576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6127b7612961565b6127bf612961565b6000836127cd866001612cb4565b6127d79190612cda565b61ffff169050600060018561ffff16836127f19190612a92565b6127fb9190612b17565b905060005b600161280c8385612a92565b901c90508861281f61ffff881683612c8a565b61ffff811061283057612830612c32565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff161515918101829052955061288757612880816001612a92565b9250612800565b8861ffff8716612898836001612a92565b6128a29190612c8a565b61ffff81106128b3576128b3612c32565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff161515928201929092528651909550898216911611801590819061291f5750846000015163ffffffff168963ffffffff1611155b1561292a5750612955565b806129415761293a600183612b17565b925061294f565b61294c826001612a92565b93505b50612800565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff8116811461107c57600080fd5b600080604083850312156129a857600080fd5b6129b183612981565b91506129bf60208401612981565b90509250929050565b6000602082840312156129da57600080fd5b5035919050565b600080604083850312156129f457600080fd5b50508035926020909101359150565b600060208284031215612a1557600080fd5b813561ffff811681146112ad57600080fd5b600080600060608486031215612a3c57600080fd5b505081359360208301359350604090920135919050565b600060208284031215612a6557600080fd5b81356001600160a01b03811681146112ad57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612aa557612aa5612a7c565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215612af157600080fd5b5051919050565b6000816000190483118215151615612b1257612b12612a7c565b500290565b600082821015612b2957612b29612a7c565b500390565b80516001600160401b038116811461107c57600080fd5b60008060008060808587031215612b5b57600080fd5b612b6485612b2e565b9350612b7260208601612b2e565b9250612b8060408601612b2e565b9150612b8e60608601612b2e565b905092959194509250565b60006001600160401b0382811684821681151582840482111615612bbf57612bbf612a7c565b02949350505050565b600063ffffffff83811690831681811015612be557612be5612a7c565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600082612c1257612c12612bed565b500490565b600061ffff83811690831681811015612be557612be5612a7c565b634e487b7160e01b600052603260045260246000fd5b60006001600160d81b0383811690831681811015612be557612be5612a7c565b600061ffff80831681811415612c8057612c80612a7c565b6001019392505050565b600082612c9957612c99612bed565b500690565b634e487b7160e01b600052602160045260246000fd5b600061ffff808316818516808303821115612cd157612cd1612a7c565b01949350505050565b600061ffff80841680612cef57612cef612bed565b9216919091069291505056fea26469706673582212204ca96c1342ce464c0f859c0b9c0d043b6d30352343dc2140719222396b4558af64736f6c63430008090033";

export class MockLidoRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stEth: string,
    _lidoOracle: string,
    _weth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockLidoRateOracle> {
    return super.deploy(
      _stEth,
      _lidoOracle,
      _weth,
      _times,
      _results,
      overrides || {}
    ) as Promise<MockLidoRateOracle>;
  }
  getDeployTransaction(
    _stEth: string,
    _lidoOracle: string,
    _weth: string,
    _times: BigNumberish[],
    _results: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stEth,
      _lidoOracle,
      _weth,
      _times,
      _results,
      overrides || {}
    );
  }
  attach(address: string): MockLidoRateOracle {
    return super.attach(address) as MockLidoRateOracle;
  }
  connect(signer: Signer): MockLidoRateOracle__factory {
    return super.connect(signer) as MockLidoRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLidoRateOracleInterface {
    return new utils.Interface(_abi) as MockLidoRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLidoRateOracle {
    return new Contract(address, _abi, signerOrProvider) as MockLidoRateOracle;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRocketPoolRateOracle,
  TestRocketPoolRateOracleInterface,
} from "../TestRocketPoolRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRocketEth",
        name: "_rocketEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketEth",
    outputs: [
      {
        internalType: "contract IRocketEth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200331a3803806200331a83398101604081905262000034916200079e565b604080516000808252602082018181528284019093528392906200005833620000df565b6001600160a01b039081166080528316620000ac5760405162461bcd60e51b815260206004820152600f60248201526e14915512081b5d5cdd08195e1a5cdd608a1b60448201526064015b60405180910390fd5b6201000380546001600160a01b0319166001600160a01b038516179055620000d582826200012f565b505050506200092b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200013e600261ffff620007fc565b825110620001605760405162461bcd60e51b8152600401620000a3906200081f565b8151815161ffff821614620001895760405162461bcd60e51b8152600401620000a3906200083d565b60006200019882600162000869565b61ffff166001600160401b03811115620001b657620001b6620007d0565b604051908082528060200260200182016040528015620001e0578160200160208202803683370190505b5090506000620001f283600162000869565b61ffff166001600160401b03811115620002105762000210620007d0565b6040519080825280602002602001820160405280156200023a578160200160208202803683370190505b50905060005b8361ffff16811015620002eb5785818151811062000262576200026262000892565b60200260200101518382815181106200027f576200027f62000892565b602002602001019063ffffffff16908163ffffffff1681525050848181518110620002ae57620002ae62000892565b6020026020010151828281518110620002cb57620002cb62000892565b602090810291909101015280620002e281620008a8565b91505062000240565b5062000301620003bf60201b62000b591760201c565b828461ffff16815181106200031a576200031a62000892565b63ffffffff9092166020928302919091019091015262000339620003d1565b818461ffff168151811062000352576200035262000892565b6020026020010181815250506200037b828260046200048360201b62000b69179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff19909216959093169490941793909317919091161790555050505050565b6000620003cc42620006c8565b905090565b6201000354604051638b32fa2360e01b81526b033b2e3c9fd0803ce800000060048201526000916001600160a01b031690638b32fa239060240160206040518083038186803b1580156200042457600080fd5b505afa15801562000439573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200045f9190620008c6565b90508062000480576040516312469ef560e01b815260040160405180910390fd5b90565b600080600061ffff855110620004ad5760405162461bcd60e51b8152600401620000a3906200081f565b8451845161ffff821614620004d65760405162461bcd60e51b8152600401620000a3906200083d565b60008161ffff1611620005115760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000a3565b6000805b8261ffff168161ffff161015620006a757878161ffff16815181106200053f576200053f62000892565b602002602001015163ffffffff168263ffffffff1610620005955760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000a3565b620005e7888261ffff1681518110620005b257620005b262000892565b6020026020010151888361ffff1681518110620005d357620005d362000892565b60200260200101516200070f60201b60201c565b898261ffff1661ffff811062000601576200060162000892565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff831690811062000687576200068762000892565b6020026020010151915080806200069e90620008e0565b91505062000515565b508180620006b760018262000905565b945094509450505093509350939050565b8063ffffffff811681146200070a5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000a3565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b038211156200076e5760405162461bcd60e51b8152600401620000a3906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600060208284031215620007b157600080fd5b81516001600160a01b0381168114620007c957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826200081a57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff808316818516808303821115620008895762000889620007e6565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620008bf57620008bf620007e6565b5060010190565b600060208284031215620008d957600080fd5b5051919050565b600061ffff80831681811415620008fb57620008fb620007e6565b6001019392505050565b600061ffff83811690831681811015620009235762000923620007e6565b039392505050565b6080516129d362000947600039600061029301526129d36000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c806301320aad146101435780631195082e1461015e57806322ff656814610189578063252c09d7146101a357806325f258dd146101e257806332148f67146101f55780633c155bd51461020a578063414535281461023257806354124c641461024557806356da9775146102585780636e035c051461027b5780636f307dc31461028e578063715018a6146102cd5780637aa4db13146102d55780637cf2cc9f146102dd5780638da5cb5b146102e657806393556dbd146102ee57806395f3e60514610301578063af0c65a614610322578063bdb0509214610337578063c330c98d1461034a578063c7db359b14610359578063e9b69c0d146103a1578063efdf5d8b146103b4578063f2fde38b146103bc578063f739670c146103cf575b600080fd5b61014b6103e2565b6040519081526020015b60405180910390f35b61014b61016c366004612691565b600160209081526000928352604080842090915290825290205481565b610191600481565b60405160ff9091168152602001610155565b6101b66101b13660046126c4565b610449565b6040805163ffffffff90941684526001600160d81b039092166020840152151590820152606001610155565b61014b6101f03660046126dd565b610483565b6102086102033660046126ff565b6104fa565b005b61021d6102183660046126ff565b61057f565b60408051928352602083019190915201610155565b61014b6102403660046126dd565b6105ec565b61014b610253366004612723565b610600565b61026b6102663660046126dd565b610655565b6040519015158152602001610155565b61014b6102893660046126dd565b6106bb565b6102b57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610155565b6102086106ce565b610208610712565b61014b60025481565b6102b561075f565b61014b6102fc3660046126dd565b61076e565b61031461030f36600461274f565b6107fe565b604051610155929190612794565b62010003546102b5906001600160a01b031681565b6102086103453660046126c4565b610836565b61014b670de0b6b3a764000081565b60035461037c9061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610155565b61021d6103af36600461274f565b6108aa565b61014b610906565b6102086103ca3660046127af565b6109b2565b61014b6103dd3660046126dd565b610a4f565b600354600090819060049061ffff908116908110610402576104026127d8565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60048161ffff811061045a57600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104908484610dac565b909250905080156104f25760006104b0670de0b6b3a76400008604610eea565b905060006104c7670de0b6b3a76400008604610eea565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff16600061051660048385610f2f565b6003805461ffff808416600160201b810261ffff60201b199093169290921790925591925083161461057a5760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff811061059c5761059c6127d8565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006105f88383610dac565b509392505050565b60008061060c83611021565b90506000610622670de0b6b3a764000086612804565b905060006106308284611038565b9050600061063d82611077565b905061064988826110a1565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c00008261067c85846110a1565b9050600061068a86846110a1565b905081871115801561069c5750808710155b156106ae5760019450505050506104f4565b60009450505050506104f4565b60006106c783836110af565b9392505050565b336106d761075f565b6001600160a01b0316146107065760405162461bcd60e51b81526004016106fd9061281c565b60405180910390fd5b6107106000611114565b565b6003546107379061ffff80821691620100008104821691600160201b90910416611164565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156107b35760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016106fd565b60006107bf8484610a4f565b905060006107cd8585612851565b905060006107da82611296565b905060006107e782611021565b90506107f384826110af565b979650505050505050565b61080661265d565b61080e61265d565b60035461082d90600490859061ffff80821691620100009004166112e3565b91509150915091565b3361083f61075f565b6001600160a01b0316146108655760405162461bcd60e51b81526004016106fd9061281c565b80600254146108a75760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b60008060006108b7610906565b90506000806108e5866108c8610b59565b6003546004929190879061ffff8082169162010000900416611495565b6020918201519101516001600160d81b039182169891169650945050505050565b6201000354604051638b32fa2360e01b8152676765c793fa10079d601b1b60048201526000916001600160a01b031690638b32fa239060240160206040518083038186803b15801561095757600080fd5b505afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f9190612868565b9050806109af576040516312469ef560e01b815260040160405180910390fd5b90565b336109bb61075f565b6001600160a01b0316146109e15760405162461bcd60e51b81526004016106fd9061281c565b6001600160a01b038116610a465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106fd565b6108a781611114565b600081831115610a8d5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016106fd565b81831415610a9d575060006104f4565b6000610aa7610b59565b90506000610ab485610eea565b90506000610ac185610eea565b600354909150600090610ae5908590859061ffff8082169162010000900416611648565b600354909150600090610b09908690859061ffff8082169162010000900416611648565b905081811115610b4b576000610b3d676765c793fa10079d601b1b610b2e8486611894565b610b389190612851565b6118a2565b96506104f495505050505050565b6000955050505050506104f4565b6000610b6442610eea565b905090565b600080600061ffff855110610ba95760405162461bcd60e51b81526004016106fd906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff821614610bf45760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b60448201526064016106fd565b60008161ffff1611610c2d5760405162461bcd60e51b81526020600482015260026024820152610c1560f21b60448201526064016106fd565b6000805b8261ffff168161ffff161015610d8d57878161ffff1681518110610c5757610c576127d8565b602002602001015163ffffffff168263ffffffff1610610cab5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b60448201526064016106fd565b610cef888261ffff1681518110610cc457610cc46127d8565b6020026020010151888361ffff1681518110610ce257610ce26127d8565b602002602001015161192e565b898261ffff1661ffff8110610d0657610d066127d8565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff8316908110610d7057610d706127d8565b602002602001015191508080610d8590612881565b915050610c31565b508180610d9b6001826128a3565b945094509450505093509350939050565b60008080610dc3670de0b6b3a76400008604610eea565b90506000610dda670de0b6b3a76400008604610eea565b905060008263ffffffff16118015610df8575060008163ffffffff16115b610e2c5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016106fd565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610e825763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610ee1565b8063ffffffff16610e91610b59565b63ffffffff1610610ebd57610eb28263ffffffff168263ffffffff16610a4f565b935060019250610ee1565b610eda8263ffffffff16610ecf610b59565b63ffffffff16610a4f565b9350600092505b50509250929050565b8063ffffffff81168114610f2a5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016106fd565b919050565b6000808361ffff1611610f685760405162461bcd60e51b81526020600482015260016024820152604960f81b60448201526064016106fd565b61ffff8261ffff1610610fac5760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b60448201526064016106fd565b8261ffff168261ffff1611610fc25750816106c7565b825b8261ffff168161ffff161015611018576001858261ffff1661ffff8110610fed57610fed6127d8565b01805463ffffffff191663ffffffff929092169190911790558061101081612881565b915050610fc4565b50909392505050565b60006104f4826a1a1601fc4ea7109e0000006119a6565b60008261105d57811561104c576000611056565b670de0b6b3a76400005b90506104f4565b6106c761107261106c856119bb565b84611a6b565b611a77565b600080611097670de0b6b3a7640000676765c793fa10079d601b1b6128dc565b6106c790846128f0565b60006106c783836001611abd565b6000826110be575060006104f4565b60006110d36110cd6001611296565b846119a6565b905060006110f5856110e56001611296565b6110ef9190612804565b83611038565b90506111016001611296565b61110b9082612851565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110611181576111816127d8565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060006111cb610b59565b9050816000015163ffffffff166002548263ffffffff166111ec9190612851565b10156111ff57868693509350505061128e565b6000611209610906565b90507f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611234611b70565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161128660048984848b8b611b7b565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156112d557604051633492ffd960e01b8152600481018390526024016106fd565b50670de0b6b3a76400000290565b6112eb61265d565b6112f361265d565b60008361130186600161290f565b61130b9190612935565b61ffff169050600060018561ffff16836113259190612804565b61132f9190612851565b905060005b60016113408385612804565b901c90508861135361ffff881683612956565b61ffff8110611364576113646127d8565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506113bb576113b4816001612804565b9250611334565b8861ffff87166113cc836001612804565b6113d69190612956565b61ffff81106113e7576113e76127d8565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906114535750846000015163ffffffff168963ffffffff1611155b1561145e5750611489565b806114755761146e600183612851565b9250611483565b611480826001612804565b93505b50611334565b50505094509492505050565b61149d61265d565b6114a561265d565b878461ffff1661ffff81106114bc576114bc6127d8565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509088161061153b578663ffffffff16826000015163ffffffff1614156115275761163d565b81611532878761192e565b9150915061163d565b878361154886600161290f565b6115529190612935565b61ffff1661ffff8110611567576115676127d8565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506115ec5760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff8089169116111561162c5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016106fd565b611638888886866112e3565b915091505b965096945050505050565b60008363ffffffff168563ffffffff16101561167757604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff16141561171f5761169361265d565b60048461ffff1661ffff81106116ab576116ab6127d8565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509087161461170857611701610906565b9150611719565b80602001516001600160d81b031691505b5061188c565b6000611729610906565b905060008061173d6004888a868a8a611495565b91509150816000015163ffffffff168763ffffffff16141561176e5781602001516001600160d81b03169350611888565b805163ffffffff888116911614156117955780602001516001600160d81b03169350611888565b600082602001516001600160d81b031682602001516001600160d81b03161115611804576000676765c793fa10079d601b1b6117eb84602001516001600160d81b031686602001516001600160d81b0316611894565b6117f59190612851565b9050611800816118a2565b9150505b8251825160009161183791670de0b6b3a7640000916118229161296a565b63ffffffff1661183291906128f0565b611021565b9050600061184583836110af565b905061188285602001516001600160d81b031682670de0b6b3a764000088600001518e611872919061296a565b63ffffffff1661025391906128f0565b96505050505b5050505b949350505050565b60006106c783836001611cc2565b6000806118c2670de0b6b3a7640000676765c793fa10079d601b1b6128dc565b6118cc90846128dc565b905060026118ed670de0b6b3a7640000676765c793fa10079d601b1b6128dc565b6118f791906128dc565b611914670de0b6b3a7640000676765c793fa10079d601b1b6128dc565b61191e9085612956565b106104f4576106c7600182612804565b61193661265d565b6001600160d81b038211156119765760405162461bcd60e51b81526004016106fd906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b60006106c783670de0b6b3a764000084611d5d565b6000670de0b6b3a76400008210156119e957604051633621413760e21b8152600481018390526024016106fd565b60006119fe670de0b6b3a76400008404611e2b565b670de0b6b3a7640000808202935090915083821c90811415611a21575050919050565b6706f05b59d3b200005b8015611a6357670de0b6b3a7640000828002049150671bc16d674ec800008210611a5b579283019260019190911c905b60011c611a2b565b505050919050565b60006106c78383611f09565b6000680a688906bd8b0000008210611aa557604051634a4f26f160e01b8152600481018390526024016106fd565b670de0b6b3a7640000604083901b046106c781611fcb565b6000831580611aca575082155b15611ad7575060006106c7565b6001826001811115611aeb57611aeb612987565b14611afe57670de0b6b3a7640000611b0b565b676765c793fa10079d601b1b5b6001836001811115611b1f57611b1f612987565b14611b3c57611b376002670de0b6b3a76400006128dc565b611b52565b611b526002676765c793fa10079d601b1b6128dc565b611b5c85876128f0565b611b669190612804565b61188c91906128dc565b6000610b6442611296565b6000806000888861ffff1661ffff8110611b9757611b976127d8565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611bf2578785925092505061163d565b8461ffff168461ffff16118015611c1a5750611c0f6001866128a3565b61ffff168861ffff16145b15611c2757839150611c2b565b8491505b81611c3789600161290f565b611c419190612935565b9250611c4d878761192e565b898461ffff1661ffff8110611c6457611c646127d8565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b600082611cfa5760405162461bcd60e51b81526004016106fd906020808252600490820152630444956360e41b604082015260600190565b6000611d076002856128dc565b905083816001856001811115611d1f57611d1f612987565b14611d3257670de0b6b3a7640000611d3f565b676765c793fa10079d601b1b5b611d4990886128f0565b611d539190612804565b61110b91906128dc565b600080806000198587098587029250828110838203039150508060001415611d9857838281611d8e57611d8e6128c6565b04925050506106c7565b838110611dc257604051631dcf306360e21b815260048101829052602481018590526044016106fd565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611e4b57608091821c91611e489082612804565b90505b600160401b8210611e6957604091821c91611e669082612804565b90505b600160201b8210611e8757602091821c91611e849082612804565b90505b620100008210611ea457601091821c91611ea19082612804565b90505b6101008210611ec057600891821c91611ebd9082612804565b90505b60108210611edb57600491821c91611ed89082612804565b90505b60048210611ef657600291821c91611ef39082612804565b90505b60028210610f2a576104f4600182612804565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611f4d5760405163698d9a0160e11b8152600481018290526024016106fd565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611f875780670de0b6b3a76400008504019450505050506104f4565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611feb5768016a09e667f3bcc9090260401c5b6001603e1b821615612006576801306fe0a31b7152df0260401c5b6001603d1b821615612021576801172b83c7d517adce0260401c5b6001603c1b82161561203c5768010b5586cf9890f62a0260401c5b6001603b1b821615612057576801059b0d31585743ae0260401c5b6001603a1b82161561207257680102c9a3e778060ee70260401c5b600160391b82161561208d5768010163da9fb33356d80260401c5b600160381b8216156120a857680100b1afa5abcbed610260401c5b600160371b8216156120c35768010058c86da1c09ea20260401c5b600160361b8216156120de576801002c605e2e8cec500260401c5b600160351b8216156120f957680100162f3904051fa10260401c5b600160341b821615612114576801000b175effdc76ba0260401c5b600160331b82161561212f57680100058ba01fb9f96d0260401c5b600160321b82161561214a5768010002c5cc37da94920260401c5b600160311b821615612165576801000162e525ee05470260401c5b600160301b8216156121805768010000b17255775c040260401c5b6001602f1b82161561219b576801000058b91b5bc9ae0260401c5b6001602e1b8216156121b657680100002c5c89d5ec6d0260401c5b6001602d1b8216156121d15768010000162e43f4f8310260401c5b6001602c1b8216156121ec57680100000b1721bcfc9a0260401c5b6001602b1b8216156122075768010000058b90cf1e6e0260401c5b6001602a1b821615612222576801000002c5c863b73f0260401c5b600160291b82161561223d57680100000162e430e5a20260401c5b600160281b821615612258576801000000b1721835510260401c5b600160271b82161561227357680100000058b90c0b490260401c5b600160261b82161561228e5768010000002c5c8601cc0260401c5b600160251b8216156122a9576801000000162e42fff00260401c5b600160241b8216156122c45768010000000b17217fbb0260401c5b600160231b8216156122df576801000000058b90bfce0260401c5b600160221b8216156122fa57680100000002c5c85fe30260401c5b600160211b8216156123155768010000000162e42ff10260401c5b600160201b82161561233057680100000000b17217f80260401c5b638000000082161561234b5768010000000058b90bfc0260401c5b6340000000821615612366576801000000002c5c85fe0260401c5b632000000082161561238157680100000000162e42ff0260401c5b631000000082161561239c576801000000000b17217f0260401c5b63080000008216156123b757680100000000058b90c00260401c5b63040000008216156123d25768010000000002c5c8600260401c5b63020000008216156123ed576801000000000162e4300260401c5b63010000008216156124085768010000000000b172180260401c5b62800000821615612422576801000000000058b90c0260401c5b6240000082161561243c57680100000000002c5c860260401c5b622000008216156124565768010000000000162e430260401c5b6210000082161561247057680100000000000b17210260401c5b6208000082161561248a5768010000000000058b910260401c5b620400008216156124a4576801000000000002c5c80260401c5b620200008216156124be57680100000000000162e40260401c5b620100008216156124d75761b172600160401b010260401c5b6180008216156124ef576158b9600160401b010260401c5b61400082161561250757612c5d600160401b010260401c5b61200082161561251f5761162e600160401b010260401c5b61100082161561253757610b17600160401b010260401c5b61080082161561254f5761058c600160401b010260401c5b610400821615612567576102c6600160401b010260401c5b61020082161561257f57610163600160401b010260401c5b6101008216156125965760b1600160401b010260401c5b60808216156125ac576059600160401b010260401c5b60408216156125c257602c600160401b010260401c5b60208216156125d8576016600160401b010260401c5b60108216156125ee57600b600160401b010260401c5b6008821615612604576006600160401b010260401c5b600482161561261a576003600160401b010260401c5b6002821615612630576001600160401b010260401c5b6001821615612646576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610f2a57600080fd5b600080604083850312156126a457600080fd5b6126ad8361267d565b91506126bb6020840161267d565b90509250929050565b6000602082840312156126d657600080fd5b5035919050565b600080604083850312156126f057600080fd5b50508035926020909101359150565b60006020828403121561271157600080fd5b813561ffff811681146106c757600080fd5b60008060006060848603121561273857600080fd5b505081359360208301359350604090920135919050565b60006020828403121561276157600080fd5b6106c78261267d565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c081016127a2828561276a565b6106c7606083018461276a565b6000602082840312156127c157600080fd5b81356001600160a01b03811681146106c757600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612817576128176127ee565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612863576128636127ee565b500390565b60006020828403121561287a57600080fd5b5051919050565b600061ffff80831681811415612899576128996127ee565b6001019392505050565b600061ffff838116908316818110156128be576128be6127ee565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826128eb576128eb6128c6565b500490565b600081600019048311821515161561290a5761290a6127ee565b500290565b600061ffff80831681851680830382111561292c5761292c6127ee565b01949350505050565b600061ffff8084168061294a5761294a6128c6565b92169190910692915050565b600082612965576129656128c6565b500690565b600063ffffffff838116908316818110156128be576128be6127ee565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220eea44ca27bdc4f8bb1c8f042e964617f541b1eda15fc3de7dac795e3f67884bf64736f6c63430008090033";

export class TestRocketPoolRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rocketEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRocketPoolRateOracle> {
    return super.deploy(
      _rocketEth,
      overrides || {}
    ) as Promise<TestRocketPoolRateOracle>;
  }
  getDeployTransaction(
    _rocketEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rocketEth, overrides || {});
  }
  attach(address: string): TestRocketPoolRateOracle {
    return super.attach(address) as TestRocketPoolRateOracle;
  }
  connect(signer: Signer): TestRocketPoolRateOracle__factory {
    return super.connect(signer) as TestRocketPoolRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRocketPoolRateOracleInterface {
    return new utils.Interface(_abi) as TestRocketPoolRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRocketPoolRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestRocketPoolRateOracle;
  }
}

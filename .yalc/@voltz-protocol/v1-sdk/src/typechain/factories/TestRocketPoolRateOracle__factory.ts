/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRocketPoolRateOracle,
  TestRocketPoolRateOracleInterface,
} from "../TestRocketPoolRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRocketEth",
        name: "_rocketEth",
        type: "address",
      },
      {
        internalType: "contract IRocketNetworkBalances",
        name: "_rocketNetworkBalances",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedVariableDebtReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBlockSlope",
    outputs: [
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "getApyFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "blockChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRateInRay",
    outputs: [
      {
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRateSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "rateChange",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "timeChange",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUpdatedRate",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "resultRay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "getRateFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketEth",
    outputs: [
      {
        internalType: "contract IRocketEth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketNetworkBalances",
    outputs: [
      {
        internalType: "contract IRocketNetworkBalances",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [
      {
        internalType: "uint256",
        name: "latestBeforeOrAtRateValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestAfterOrAtRateValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003a4138038062003a41833981016040819052620000349162000960565b60408051600080825260208201908152818301909252849184918491826200005c336200019f565b6001600160a01b03811660805243620100045562000085620001ef602090811b62000fcf17901c565b62010003805463ffffffff9290921663ffffffff199283161790556201000580549091166105dc17905550606462010006556001600160a01b038516620001055760405162461bcd60e51b815260206004820152600f60248201526e14915512081b5d5cdd08195e1a5cdd608a1b60448201526064015b60405180910390fd5b6201000780546001600160a01b0319166001600160a01b03878116919091179091558416620001685760405162461bcd60e51b815260206004820152600e60248201526d149390881b5d5cdd08195e1a5cdd60921b6044820152606401620000fc565b6201000880546001600160a01b0319166001600160a01b03861617905562000191828262000201565b505050505050505062000b4b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001fc426200048c565b905090565b62000210600261ffff620009e0565b825110620002325760405162461bcd60e51b8152600401620000fc9062000a03565b8151815161ffff8216146200025b5760405162461bcd60e51b8152600401620000fc9062000a21565b60006200026a82600162000a4d565b61ffff166001600160401b03811115620002885762000288620009b4565b604051908082528060200260200182016040528015620002b2578160200160208202803683370190505b5090506000620002c483600162000a4d565b61ffff166001600160401b03811115620002e257620002e2620009b4565b6040519080825280602002602001820160405280156200030c578160200160208202803683370190505b50905060005b8361ffff16811015620003bd5785818151811062000334576200033462000a76565b602002602001015183828151811062000351576200035162000a76565b602002602001019063ffffffff16908163ffffffff168152505084818151811062000380576200038062000a76565b60200260200101518282815181106200039d576200039d62000a76565b602090810291909101015280620003b48162000a8c565b91505062000312565b50600080620003cb620004d3565b9150915081848661ffff1681518110620003e957620003e962000a76565b602002602001019063ffffffff16908163ffffffff168152505080838661ffff16815181106200041d576200041d62000a76565b60200260200101818152505062000446848460046200067360201b62000fdf179092919060201c565b6003805461ffff948516620100000263ffff0000199486166401000000000265ffff0000ffff199092169590931694909417939093179190911617905550505050505050565b8063ffffffff81168114620004ce5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b6044820152606401620000fc565b919050565b6201000754604051638b32fa2360e01b81526b033b2e3c9fd0803ce8000000600482015260009182916001600160a01b0390911690638b32fa239060240160206040518083038186803b1580156200052a57600080fd5b505afa1580156200053f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000565919062000aaa565b90508062000586576040516312469ef560e01b815260040160405180910390fd5b620100085460408051639100c13d60e01b815290516000926001600160a01b031691639100c13d916004808301926020929190829003018186803b158015620005ce57600080fd5b505afa158015620005e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000609919062000aaa565b620100065462010005549192509063ffffffff16600082826200062d864362000ac4565b62000639919062000ade565b620006459190620009e0565b62000651904262000ac4565b905062000669816200048c60201b620012221760201c565b9550505050509091565b600080600061ffff8551106200069d5760405162461bcd60e51b8152600401620000fc9062000a03565b8451845161ffff821614620006c65760405162461bcd60e51b8152600401620000fc9062000a21565b60008161ffff1611620007015760405162461bcd60e51b81526020600482015260026024820152610c1560f21b6044820152606401620000fc565b6000805b8261ffff168161ffff1610156200089757878161ffff16815181106200072f576200072f62000a76565b602002602001015163ffffffff168263ffffffff1610620007855760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b6044820152606401620000fc565b620007d7888261ffff1681518110620007a257620007a262000a76565b6020026020010151888361ffff1681518110620007c357620007c362000a76565b6020026020010151620008b860201b60201c565b898261ffff1661ffff8110620007f157620007f162000a76565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9094169390931717929092161790558751889061ffff831690811062000877576200087762000a76565b6020026020010151915080806200088e9062000b00565b91505062000705565b508180620008a760018262000b25565b945094509450505093509350939050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620009175760405162461bcd60e51b8152600401620000fc906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b03811681146200095d57600080fd5b50565b6000806000606084860312156200097657600080fd5b8351620009838162000947565b6020850151909350620009968162000947565b6040850151909250620009a98162000947565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082620009fe57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600490820152631350561560e21b604082015260600190565b602080825260129082015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604082015260600190565b600061ffff80831681851680830382111562000a6d5762000a6d620009ca565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000aa35762000aa3620009ca565b5060010190565b60006020828403121562000abd57600080fd5b5051919050565b60008282101562000ad95762000ad9620009ca565b500390565b600081600019048311821515161562000afb5762000afb620009ca565b500290565b600061ffff8083168181141562000b1b5762000b1b620009ca565b6001019392505050565b600061ffff8381169083168181101562000b435762000b43620009ca565b039392505050565b608051612eda62000b6760003960006103720152612eda6000f3fe608060405234801561001057600080fd5b50600436106101965760003560e01c806301320aad1461019b5780631195082e146101b6578063163e9c4f146101e157806317221ef1146101f457806322ff65681461020757806324b18b1714610221578063251abea114610255578063252c09d71461028257806325f258dd146102c157806332148f67146102d45780633c155bd5146102e9578063414535281461031157806354124c641461032457806356da9775146103375780636e035c051461035a5780636f307dc31461036d578063715018a6146103945780637aa4db131461039c5780637cf2cc9f146103a45780638a6b8c5d146103ad5780638da5cb5b146103b557806391aa375d146103bd57806393556dbd146103df57806395f3e605146103f2578063af0c65a614610413578063bdb0509214610428578063c330c98d1461043b578063c7db359b1461044a578063e9b69c0d14610492578063efdf5d8b146104a5578063f2fde38b146104ad578063f739670c146104c0578063f90ce5ba146104d3578063fe115fbe146104eb575b600080fd5b6101a36104f3565b6040519081526020015b60405180910390f35b6101a36101c4366004612b78565b600160209081526000928352604080842090915290825290205481565b6101a36101ef366004612bab565b61055a565b6101a3610202366004612bab565b61056c565b61020f600481565b60405160ff90911681526020016101ad565b620100055462010006546102399163ffffffff169082565b6040805163ffffffff90931683526020830191909152016101ad565b620100085461026a906001600160a01b031681565b6040516001600160a01b0390911681526020016101ad565b610295610290366004612bab565b610578565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101ad565b6101a36102cf366004612bc4565b6105b2565b6102e76102e2366004612be6565b610628565b005b6102fc6102f7366004612be6565b6106ad565b604080519283526020830191909152016101ad565b6101a361031f366004612bc4565b61071a565b6101a3610332366004612c0a565b61072e565b61034a610345366004612bc4565b610783565b60405190151581526020016101ad565b6101a3610368366004612bc4565b6107e9565b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b6102e76107fc565b6102e7610840565b6101a360025481565b61023961088d565b61026a610a12565b6103c5610a21565b6040805192835263ffffffff9091166020830152016101ad565b6101a36103ed366004612bc4565b610a38565b610405610400366004612c36565b610ac8565b6040516101ad929190612c7b565b620100075461026a906001600160a01b031681565b6102e7610436366004612bab565b610b00565b6101a3670de0b6b3a764000081565b60035461046d9061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff948516815292841660208401529216918101919091526060016101ad565b6102fc6104a0366004612c36565b610b74565b6101a3610bd0565b6102e76104bb366004612c96565b610c58565b6101a36104ce366004612bc4565b610cf5565b620100035462010004546102399163ffffffff169082565b6103c5610dff565b600354600090819060049061ffff90811690811061051357610513612cbf565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b031660208301819052600160f81b90910460ff161515919092015292915050565b60006105668242610cf5565b92915050565b60006105668242610a38565b60048161ffff811061058957600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806105bf8484611267565b909250905080156106215760006105df670de0b6b3a76400008604611222565b905060006105f6670de0b6b3a76400008604611222565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b5092915050565b600354600160201b900461ffff166000610644600483856113a5565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146106a85760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff81106106ca576106ca612cbf565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006107268383611267565b509392505050565b60008061073a83611497565b90506000610750670de0b6b3a764000086612ceb565b9050600061075e82846114ae565b9050600061076b826114ed565b90506107778882611517565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826107aa8584611517565b905060006107b88684611517565b90508187111580156107ca5750808710155b156107dc576001945050505050610566565b6000945050505050610566565b60006107f58383611525565b9392505050565b33610805610a12565b6001600160a01b0316146108345760405162461bcd60e51b815260040161082b90612d03565b60405180910390fd5b61083e600061158a565b565b6003546108659061ffff80821691620100008104821691600160201b909104166115da565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6201000754604051638b32fa2360e01b8152676765c793fa10079d601b1b600482015260009182916001600160a01b0390911690638b32fa239060240160206040518083038186803b1580156108e257600080fd5b505afa1580156108f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091a9190612d38565b90508061093a576040516312469ef560e01b815260040160405180910390fd5b620100085460408051639100c13d60e01b815290516000926001600160a01b031691639100c13d916004808301926020929190829003018186803b15801561098157600080fd5b505afa158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190612d38565b90506000806109c6610a21565b909250905060008263ffffffff83166109df8643612d51565b6109e99190612d68565b6109f39190612d9d565b6109fd9042612d51565b9050610a0881611222565b9550505050509091565b6000546001600160a01b031690565b62010006546201000554909163ffffffff90911690565b600081831115610a7d5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b604482015260640161082b565b6000610a898484610cf5565b90506000610a978585612d51565b90506000610aa48261177d565b90506000610ab182611497565b9050610abd8482611525565b979650505050505050565b610ad0612b44565b610ad8612b44565b600354610af790600490859061ffff80821691620100009004166117ca565b91509150915091565b33610b09610a12565b6001600160a01b031614610b2f5760405162461bcd60e51b815260040161082b90612d03565b8060025414610b715760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b6000806000610b81610bd0565b9050600080610baf86610b92610fcf565b6003546004929190879061ffff808216916201000090041661197c565b6020918201519101516001600160d81b039182169891169650945050505050565b6000806000610bdd61088d565b91509150610be9610fcf565b63ffffffff168263ffffffff1610610c015792915050565b600080610c0c610dff565b915091508063ffffffff168285610c21610fcf565b610c2b9190612db1565b63ffffffff16610c3b9190612d68565b610c459190612d9d565b610c4f9084612ceb565b94505050505090565b33610c61610a12565b6001600160a01b031614610c875760405162461bcd60e51b815260040161082b90612d03565b6001600160a01b038116610cec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161082b565b610b718161158a565b600081831115610d335760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b604482015260640161082b565b81831415610d4357506000610566565b6000610d4d610fcf565b90506000610d5a85611222565b90506000610d6785611222565b600354909150600090610d8b908590859061ffff8082169162010000900416611b2f565b600354909150600090610daf908690859061ffff8082169162010000900416611b2f565b905081811115610df1576000610de3676765c793fa10079d601b1b610dd48486611d7b565b610dde9190612d51565b611d89565b965061056695505050505050565b600095505050505050610566565b600354600090819061ffff16816001821015610e3357600354610e2e9060019062010000900461ffff16612dd6565b610e46565b600354610e469060019061ffff16612dd6565b60035490915060026201000090910461ffff1610801590610e87575060048161ffff1661ffff8110610e7a57610e7a612cbf565b0154600160f81b900460ff165b8015610ee4575060048261ffff1661ffff8110610ea657610ea6612cbf565b0154600160201b90046001600160d81b0316600461ffff838116908110610ecf57610ecf612cbf565b0154600160201b90046001600160d81b031611155b610f165760405162461bcd60e51b815260206004820152600360248201526204e45560ec1b604482015260640161082b565b60048161ffff1661ffff8110610f2e57610f2e612cbf565b0154600160201b90046001600160d81b0316600461ffff848116908110610f5757610f57612cbf565b0154610f739190600160201b90046001600160d81b0316612df1565b6001600160d81b0316935060048161ffff1661ffff8110610f9657610f96612cbf565b015463ffffffff16600461ffff808516908110610fb557610fb5612cbf565b0154610fc7919063ffffffff16612db1565b925050509091565b6000610fda42611222565b905090565b600080600061ffff85511061101f5760405162461bcd60e51b815260040161082b906020808252600490820152631350561560e21b604082015260600190565b8451845161ffff82161461106a5760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b604482015260640161082b565b60008161ffff16116110a35760405162461bcd60e51b81526020600482015260026024820152610c1560f21b604482015260640161082b565b6000805b8261ffff168161ffff16101561120357878161ffff16815181106110cd576110cd612cbf565b602002602001015163ffffffff168263ffffffff16106111215760405162461bcd60e51b815260206004820152600f60248201526e1a5b9c1d5d081d5b9bdc99195c9959608a1b604482015260640161082b565b611165888261ffff168151811061113a5761113a612cbf565b6020026020010151888361ffff168151811061115857611158612cbf565b6020026020010151611e15565b898261ffff1661ffff811061117c5761117c612cbf565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790558751889061ffff83169081106111e6576111e6612cbf565b6020026020010151915080806111fb90612e11565b9150506110a7565b508180611211600182612dd6565b945094509450505093509350939050565b8063ffffffff811681146112625760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b604482015260640161082b565b919050565b6000808061127e670de0b6b3a76400008604611222565b90506000611295670de0b6b3a76400008604611222565b905060008263ffffffff161180156112b3575060008163ffffffff16115b6112e75760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b604482015260640161082b565b63ffffffff8083166000908152600160209081526040808320938516835292905220541561133d5763ffffffff80831660009081526001602090815260408083209385168352929052908120549450925061139c565b8063ffffffff1661134c610fcf565b63ffffffff16106113785761136d8263ffffffff168263ffffffff16610cf5565b93506001925061139c565b6113958263ffffffff1661138a610fcf565b63ffffffff16610cf5565b9350600092505b50509250929050565b6000808361ffff16116113de5760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161082b565b61ffff8261ffff16106114225760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b604482015260640161082b565b8261ffff168261ffff16116114385750816107f5565b825b8261ffff168161ffff16101561148e576001858261ffff1661ffff811061146357611463612cbf565b01805463ffffffff191663ffffffff929092169190911790558061148681612e11565b91505061143a565b50909392505050565b6000610566826a1a1601fc4ea7109e000000611e8d565b6000826114d35781156114c25760006114cc565b670de0b6b3a76400005b9050610566565b6107f56114e86114e285611ea2565b84611f52565b611f5e565b60008061150d670de0b6b3a7640000676765c793fa10079d601b1b612d9d565b6107f59084612d68565b60006107f583836001611fa4565b60008261153457506000610566565b6000611549611543600161177d565b84611e8d565b9050600061156b8561155b600161177d565b6115659190612ceb565b836114ae565b9050611577600161177d565b6115819082612d51565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106115f7576115f7612cbf565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060008061164261088d565b600254855192945090925061165c9163ffffffff16612ceb565b8263ffffffff16101561167757878794509450505050611775565b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa73756116a0612057565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a162010004546116f29043612d51565b6201000655620100035463ffffffff1661170a610fcf565b6117149190612db1565b62010005805463ffffffff191663ffffffff9290921691909117905543620100045561173e610fcf565b62010003805463ffffffff191663ffffffff92831617905561176d906004908a90859085908c908c9061206216565b945094505050505b935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156117bc57604051633492ffd960e01b81526004810183905260240161082b565b50670de0b6b3a76400000290565b6117d2612b44565b6117da612b44565b6000836117e8866001612e33565b6117f29190612e59565b61ffff169050600060018561ffff168361180c9190612ceb565b6118169190612d51565b905060005b60016118278385612ceb565b901c90508861183a61ffff881683612e7a565b61ffff811061184b5761184b612cbf565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506118a25761189b816001612ceb565b925061181b565b8861ffff87166118b3836001612ceb565b6118bd9190612e7a565b61ffff81106118ce576118ce612cbf565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff161515928201929092528651909550898216911611801590819061193a5750846000015163ffffffff168963ffffffff1611155b156119455750611970565b8061195c57611955600183612d51565b925061196a565b611967826001612ceb565b93505b5061181b565b50505094509492505050565b611984612b44565b61198c612b44565b878461ffff1661ffff81106119a3576119a3612cbf565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611a22578663ffffffff16826000015163ffffffff161415611a0e57611b24565b81611a198787611e15565b91509150611b24565b8783611a2f866001612e33565b611a399190612e59565b61ffff1661ffff8110611a4e57611a4e612cbf565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611ad35760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80891691161115611b135760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015260640161082b565b611b1f888886866117ca565b915091505b965096945050505050565b60008363ffffffff168563ffffffff161015611b5e57604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff161415611c0657611b7a612b44565b60048461ffff1661ffff8110611b9257611b92612cbf565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090871614611bef57611be8610bd0565b9150611c00565b80602001516001600160d81b031691505b50611d73565b6000611c10610bd0565b9050600080611c246004888a868a8a61197c565b91509150816000015163ffffffff168763ffffffff161415611c555781602001516001600160d81b03169350611d6f565b805163ffffffff88811691161415611c7c5780602001516001600160d81b03169350611d6f565b600082602001516001600160d81b031682602001516001600160d81b03161115611ceb576000676765c793fa10079d601b1b611cd284602001516001600160d81b031686602001516001600160d81b0316611d7b565b611cdc9190612d51565b9050611ce781611d89565b9150505b82518251600091611d1e91670de0b6b3a764000091611d0991612db1565b63ffffffff16611d199190612d68565b611497565b90506000611d2c8383611525565b9050611d6985602001516001600160d81b031682670de0b6b3a764000088600001518e611d599190612db1565b63ffffffff166103329190612d68565b96505050505b5050505b949350505050565b60006107f5838360016121a9565b600080611da9670de0b6b3a7640000676765c793fa10079d601b1b612d9d565b611db39084612d9d565b90506002611dd4670de0b6b3a7640000676765c793fa10079d601b1b612d9d565b611dde9190612d9d565b611dfb670de0b6b3a7640000676765c793fa10079d601b1b612d9d565b611e059085612e7a565b10610566576107f5600182612ceb565b611e1d612b44565b6001600160d81b03821115611e5d5760405162461bcd60e51b815260040161082b906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b60006107f583670de0b6b3a764000084612244565b6000670de0b6b3a7640000821015611ed057604051633621413760e21b81526004810183905260240161082b565b6000611ee5670de0b6b3a76400008404612312565b670de0b6b3a7640000808202935090915083821c90811415611f08575050919050565b6706f05b59d3b200005b8015611f4a57670de0b6b3a7640000828002049150671bc16d674ec800008210611f42579283019260019190911c905b60011c611f12565b505050919050565b60006107f583836123f0565b6000680a688906bd8b0000008210611f8c57604051634a4f26f160e01b81526004810183905260240161082b565b670de0b6b3a7640000604083901b046107f5816124b2565b6000831580611fb1575082155b15611fbe575060006107f5565b6001826001811115611fd257611fd2612e8e565b14611fe557670de0b6b3a7640000611ff2565b676765c793fa10079d601b1b5b600183600181111561200657612006612e8e565b146120235761201e6002670de0b6b3a7640000612d9d565b612039565b6120396002676765c793fa10079d601b1b612d9d565b6120438587612d68565b61204d9190612ceb565b611d739190612d9d565b6000610fda4261177d565b6000806000888861ffff1661ffff811061207e5761207e612cbf565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881614156120d95787859250925050611b24565b8461ffff168461ffff1611801561210157506120f6600186612dd6565b61ffff168861ffff16145b1561210e57839150612112565b8491505b8161211e896001612e33565b6121289190612e59565b92506121348787611e15565b898461ffff1661ffff811061214b5761214b612cbf565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b6000826121e15760405162461bcd60e51b815260040161082b906020808252600490820152630444956360e41b604082015260600190565b60006121ee600285612d9d565b90508381600185600181111561220657612206612e8e565b1461221957670de0b6b3a7640000612226565b676765c793fa10079d601b1b5b6122309088612d68565b61223a9190612ceb565b6115819190612d9d565b60008080600019858709858702925082811083820303915050806000141561227f5783828161227557612275612d87565b04925050506107f5565b8381106122a957604051631dcf306360e21b8152600481018290526024810185905260440161082b565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b821061233257608091821c9161232f9082612ceb565b90505b600160401b821061235057604091821c9161234d9082612ceb565b90505b600160201b821061236e57602091821c9161236b9082612ceb565b90505b62010000821061238b57601091821c916123889082612ceb565b90505b61010082106123a757600891821c916123a49082612ceb565b90505b601082106123c257600491821c916123bf9082612ceb565b90505b600482106123dd57600291821c916123da9082612ceb565b90505b6002821061126257610566600182612ceb565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106124345760405163698d9a0160e11b81526004810182905260240161082b565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff81118261246e5780670de0b6b3a7640000850401945050505050610566565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156124d25768016a09e667f3bcc9090260401c5b6001603e1b8216156124ed576801306fe0a31b7152df0260401c5b6001603d1b821615612508576801172b83c7d517adce0260401c5b6001603c1b8216156125235768010b5586cf9890f62a0260401c5b6001603b1b82161561253e576801059b0d31585743ae0260401c5b6001603a1b82161561255957680102c9a3e778060ee70260401c5b600160391b8216156125745768010163da9fb33356d80260401c5b600160381b82161561258f57680100b1afa5abcbed610260401c5b600160371b8216156125aa5768010058c86da1c09ea20260401c5b600160361b8216156125c5576801002c605e2e8cec500260401c5b600160351b8216156125e057680100162f3904051fa10260401c5b600160341b8216156125fb576801000b175effdc76ba0260401c5b600160331b82161561261657680100058ba01fb9f96d0260401c5b600160321b8216156126315768010002c5cc37da94920260401c5b600160311b82161561264c576801000162e525ee05470260401c5b600160301b8216156126675768010000b17255775c040260401c5b6001602f1b821615612682576801000058b91b5bc9ae0260401c5b6001602e1b82161561269d57680100002c5c89d5ec6d0260401c5b6001602d1b8216156126b85768010000162e43f4f8310260401c5b6001602c1b8216156126d357680100000b1721bcfc9a0260401c5b6001602b1b8216156126ee5768010000058b90cf1e6e0260401c5b6001602a1b821615612709576801000002c5c863b73f0260401c5b600160291b82161561272457680100000162e430e5a20260401c5b600160281b82161561273f576801000000b1721835510260401c5b600160271b82161561275a57680100000058b90c0b490260401c5b600160261b8216156127755768010000002c5c8601cc0260401c5b600160251b821615612790576801000000162e42fff00260401c5b600160241b8216156127ab5768010000000b17217fbb0260401c5b600160231b8216156127c6576801000000058b90bfce0260401c5b600160221b8216156127e157680100000002c5c85fe30260401c5b600160211b8216156127fc5768010000000162e42ff10260401c5b600160201b82161561281757680100000000b17217f80260401c5b63800000008216156128325768010000000058b90bfc0260401c5b634000000082161561284d576801000000002c5c85fe0260401c5b632000000082161561286857680100000000162e42ff0260401c5b6310000000821615612883576801000000000b17217f0260401c5b630800000082161561289e57680100000000058b90c00260401c5b63040000008216156128b95768010000000002c5c8600260401c5b63020000008216156128d4576801000000000162e4300260401c5b63010000008216156128ef5768010000000000b172180260401c5b62800000821615612909576801000000000058b90c0260401c5b6240000082161561292357680100000000002c5c860260401c5b6220000082161561293d5768010000000000162e430260401c5b6210000082161561295757680100000000000b17210260401c5b620800008216156129715768010000000000058b910260401c5b6204000082161561298b576801000000000002c5c80260401c5b620200008216156129a557680100000000000162e40260401c5b620100008216156129be5761b172600160401b010260401c5b6180008216156129d6576158b9600160401b010260401c5b6140008216156129ee57612c5d600160401b010260401c5b612000821615612a065761162e600160401b010260401c5b611000821615612a1e57610b17600160401b010260401c5b610800821615612a365761058c600160401b010260401c5b610400821615612a4e576102c6600160401b010260401c5b610200821615612a6657610163600160401b010260401c5b610100821615612a7d5760b1600160401b010260401c5b6080821615612a93576059600160401b010260401c5b6040821615612aa957602c600160401b010260401c5b6020821615612abf576016600160401b010260401c5b6010821615612ad557600b600160401b010260401c5b6008821615612aeb576006600160401b010260401c5b6004821615612b01576003600160401b010260401c5b6002821615612b17576001600160401b010260401c5b6001821615612b2d576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff8116811461126257600080fd5b60008060408385031215612b8b57600080fd5b612b9483612b64565b9150612ba260208401612b64565b90509250929050565b600060208284031215612bbd57600080fd5b5035919050565b60008060408385031215612bd757600080fd5b50508035926020909101359150565b600060208284031215612bf857600080fd5b813561ffff811681146107f557600080fd5b600080600060608486031215612c1f57600080fd5b505081359360208301359350604090920135919050565b600060208284031215612c4857600080fd5b6107f582612b64565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c08101612c898285612c51565b6107f56060830184612c51565b600060208284031215612ca857600080fd5b81356001600160a01b03811681146107f557600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612cfe57612cfe612cd5565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215612d4a57600080fd5b5051919050565b600082821015612d6357612d63612cd5565b500390565b6000816000190483118215151615612d8257612d82612cd5565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612dac57612dac612d87565b500490565b600063ffffffff83811690831681811015612dce57612dce612cd5565b039392505050565b600061ffff83811690831681811015612dce57612dce612cd5565b60006001600160d81b0383811690831681811015612dce57612dce612cd5565b600061ffff80831681811415612e2957612e29612cd5565b6001019392505050565b600061ffff808316818516808303821115612e5057612e50612cd5565b01949350505050565b600061ffff80841680612e6e57612e6e612d87565b92169190910692915050565b600082612e8957612e89612d87565b500690565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220335de6b0559b103d4f5d1dd7ca774c55cc4ca20dbecf3b038a86447226f5d8ce64736f6c63430008090033";

export class TestRocketPoolRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rocketEth: string,
    _rocketNetworkBalances: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRocketPoolRateOracle> {
    return super.deploy(
      _rocketEth,
      _rocketNetworkBalances,
      _weth,
      overrides || {}
    ) as Promise<TestRocketPoolRateOracle>;
  }
  getDeployTransaction(
    _rocketEth: string,
    _rocketNetworkBalances: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rocketEth,
      _rocketNetworkBalances,
      _weth,
      overrides || {}
    );
  }
  attach(address: string): TestRocketPoolRateOracle {
    return super.attach(address) as TestRocketPoolRateOracle;
  }
  connect(signer: Signer): TestRocketPoolRateOracle__factory {
    return super.connect(signer) as TestRocketPoolRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRocketPoolRateOracleInterface {
    return new utils.Interface(_abi) as TestRocketPoolRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRocketPoolRateOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestRocketPoolRateOracle;
  }
}
